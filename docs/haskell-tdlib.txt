-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/mejgun/haskell-tdlib</a>
@package haskell-tdlib
@version 0.1.1.0

module API.AccountTtl

-- | Contains information about the period of inactivity after which the
--   current user's account will automatically be deleted
--   
--   <b>days</b> Number of days of inactivity before the account will be
--   flagged for deletion; 30-366 days
data AccountTtl
AccountTtl :: Maybe Int -> AccountTtl
[days] :: AccountTtl -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.AccountTtl.AccountTtl
instance GHC.Show.Show API.AccountTtl.AccountTtl
instance Data.Aeson.Types.ToJSON.ToJSON API.AccountTtl.AccountTtl
instance Data.Aeson.Types.FromJSON.FromJSON API.AccountTtl.AccountTtl

module API.Address

-- | Describes an address
--   
--   <b>country_code</b> A two-letter ISO 3166-1 alpha-2 country code
--   
--   <b>state</b> State, if applicable
--   
--   <b>city</b> City
--   
--   <b>street_line1</b> First line of the address
--   
--   <b>street_line2</b> Second line of the address
--   
--   <b>postal_code</b> Address postal code
data Address
Address :: Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Address
[postal_code] :: Address -> Maybe String
[street_line2] :: Address -> Maybe String
[street_line1] :: Address -> Maybe String
[city] :: Address -> Maybe String
[state] :: Address -> Maybe String
[country_code] :: Address -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Address.Address
instance GHC.Show.Show API.Address.Address
instance Data.Aeson.Types.ToJSON.ToJSON API.Address.Address
instance Data.Aeson.Types.FromJSON.FromJSON API.Address.Address

module API.Animations

-- | Represents a list of animations
--   
--   <b>animations</b> List of animations
data Animations
Animations :: Maybe [Animation] -> Animations
[animations] :: Animations -> Maybe [Animation]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Animations.Animations
instance GHC.Show.Show API.Animations.Animations
instance Data.Aeson.Types.ToJSON.ToJSON API.Animations.Animations
instance Data.Aeson.Types.FromJSON.FromJSON API.Animations.Animations

module API.AuthenticationCodeInfo

-- | Information about the authentication code that was sent
--   
--   <b>phone_number</b> A phone number that is being authenticated
--   
--   <b>type</b> Describes the way the code was sent to the user
--   
--   <b>next_type</b> Describes the way the next code will be sent to the
--   user; may be null
--   
--   <b>timeout</b> Timeout before the code can be re-sent, in seconds
data AuthenticationCodeInfo
AuthenticationCodeInfo :: Maybe Int -> Maybe AuthenticationCodeType -> Maybe AuthenticationCodeType -> Maybe String -> AuthenticationCodeInfo
[timeout] :: AuthenticationCodeInfo -> Maybe Int
[next_type] :: AuthenticationCodeInfo -> Maybe AuthenticationCodeType
[_type] :: AuthenticationCodeInfo -> Maybe AuthenticationCodeType
[phone_number] :: AuthenticationCodeInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.AuthenticationCodeInfo.AuthenticationCodeInfo
instance GHC.Show.Show API.AuthenticationCodeInfo.AuthenticationCodeInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.AuthenticationCodeInfo.AuthenticationCodeInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.AuthenticationCodeInfo.AuthenticationCodeInfo

module API.AuthenticationCodeType

-- | Provides information about the method by which an authentication code
--   is delivered to the user
data AuthenticationCodeType

-- | An authentication code is delivered via a private Telegram message,
--   which can be viewed from another active session
--   
--   <b>length</b> Length of the code
AuthenticationCodeTypeTelegramMessage :: Maybe Int -> AuthenticationCodeType
[_length] :: AuthenticationCodeType -> Maybe Int

-- | An authentication code is delivered via an SMS message to the
--   specified phone number
--   
--   <b>length</b> Length of the code
AuthenticationCodeTypeSms :: Maybe Int -> AuthenticationCodeType
[_length] :: AuthenticationCodeType -> Maybe Int

-- | An authentication code is delivered via a phone call to the specified
--   phone number
--   
--   <b>length</b> Length of the code
AuthenticationCodeTypeCall :: Maybe Int -> AuthenticationCodeType
[_length] :: AuthenticationCodeType -> Maybe Int

-- | An authentication code is delivered by an immediately canceled call to
--   the specified phone number. The number from which the call was made is
--   the code
--   
--   <b>pattern</b> Pattern of the phone number from which the call will be
--   made
AuthenticationCodeTypeFlashCall :: Maybe String -> AuthenticationCodeType
[pattern] :: AuthenticationCodeType -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.AuthenticationCodeType.AuthenticationCodeType
instance GHC.Show.Show API.AuthenticationCodeType.AuthenticationCodeType
instance Data.Aeson.Types.ToJSON.ToJSON API.AuthenticationCodeType.AuthenticationCodeType
instance Data.Aeson.Types.FromJSON.FromJSON API.AuthenticationCodeType.AuthenticationCodeType

module API.AutoDownloadSettings

-- | Contains auto-download settings
--   
--   <b>is_auto_download_enabled</b> True, if the auto-download is enabled
--   
--   <b>max_photo_file_size</b> The maximum size of a photo file to be
--   auto-downloaded, in bytes
--   
--   <b>max_video_file_size</b> The maximum size of a video file to be
--   auto-downloaded, in bytes
--   
--   <b>max_other_file_size</b> The maximum size of other file types to be
--   auto-downloaded, in bytes
--   
--   <b>video_upload_bitrate</b> The maximum suggested bitrate for uploaded
--   videos, in kbit/s
--   
--   <b>preload_large_videos</b> True, if the beginning of video files
--   needs to be preloaded for instant playback
--   
--   <b>preload_next_audio</b> True, if the next audio track needs to be
--   preloaded while the user is listening to an audio file
--   
--   <b>use_less_data_for_calls</b> True, if "use less data for calls"
--   option needs to be enabled
data AutoDownloadSettings
AutoDownloadSettings :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> AutoDownloadSettings
[use_less_data_for_calls] :: AutoDownloadSettings -> Maybe Bool
[preload_next_audio] :: AutoDownloadSettings -> Maybe Bool
[preload_large_videos] :: AutoDownloadSettings -> Maybe Bool
[video_upload_bitrate] :: AutoDownloadSettings -> Maybe Int
[max_other_file_size] :: AutoDownloadSettings -> Maybe Int
[max_video_file_size] :: AutoDownloadSettings -> Maybe Int
[max_photo_file_size] :: AutoDownloadSettings -> Maybe Int
[is_auto_download_enabled] :: AutoDownloadSettings -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.AutoDownloadSettings.AutoDownloadSettings
instance GHC.Show.Show API.AutoDownloadSettings.AutoDownloadSettings
instance Data.Aeson.Types.ToJSON.ToJSON API.AutoDownloadSettings.AutoDownloadSettings
instance Data.Aeson.Types.FromJSON.FromJSON API.AutoDownloadSettings.AutoDownloadSettings

module API.AutoDownloadSettingsPresets

-- | Contains auto-download settings presets for the current user
--   
--   <b>low</b> Preset with lowest settings; supposed to be used by default
--   when roaming
--   
--   <b>medium</b> Preset with medium settings; supposed to be used by
--   default when using mobile data
--   
--   <b>high</b> Preset with highest settings; supposed to be used by
--   default when connected on Wi-Fi
data AutoDownloadSettingsPresets
AutoDownloadSettingsPresets :: Maybe AutoDownloadSettings -> Maybe AutoDownloadSettings -> Maybe AutoDownloadSettings -> AutoDownloadSettingsPresets
[high] :: AutoDownloadSettingsPresets -> Maybe AutoDownloadSettings
[medium] :: AutoDownloadSettingsPresets -> Maybe AutoDownloadSettings
[low] :: AutoDownloadSettingsPresets -> Maybe AutoDownloadSettings
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.AutoDownloadSettingsPresets.AutoDownloadSettingsPresets
instance GHC.Show.Show API.AutoDownloadSettingsPresets.AutoDownloadSettingsPresets
instance Data.Aeson.Types.ToJSON.ToJSON API.AutoDownloadSettingsPresets.AutoDownloadSettingsPresets
instance Data.Aeson.Types.FromJSON.FromJSON API.AutoDownloadSettingsPresets.AutoDownloadSettingsPresets

module API.BackgroundFill

-- | Describes a fill of a background
data BackgroundFill

-- | Describes a solid fill of a background
--   
--   <b>color</b> A color of the background in the RGB24 format
BackgroundFillSolid :: Maybe Int -> BackgroundFill
[color] :: BackgroundFill -> Maybe Int

-- | Describes a gradient fill of a background
--   
--   <b>top_color</b> A top color of the background in the RGB24 format
--   
--   <b>bottom_color</b> A bottom color of the background in the RGB24
--   format
--   
--   <b>rotation_angle</b> Clockwise rotation angle of the gradient, in
--   degrees; 0-359. Must be always divisible by 45
BackgroundFillGradient :: Maybe Int -> Maybe Int -> Maybe Int -> BackgroundFill
[rotation_angle] :: BackgroundFill -> Maybe Int
[bottom_color] :: BackgroundFill -> Maybe Int
[top_color] :: BackgroundFill -> Maybe Int

-- | Describes a freeform gradient fill of a background
--   
--   <b>colors</b> A list of 3 or 4 colors of the freeform gradients in the
--   RGB24 format
BackgroundFillFreeformGradient :: Maybe [Int] -> BackgroundFill
[colors] :: BackgroundFill -> Maybe [Int]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.BackgroundFill.BackgroundFill
instance GHC.Show.Show API.BackgroundFill.BackgroundFill
instance Data.Aeson.Types.ToJSON.ToJSON API.BackgroundFill.BackgroundFill
instance Data.Aeson.Types.FromJSON.FromJSON API.BackgroundFill.BackgroundFill

module API.BackgroundType

-- | Describes the type of a background
data BackgroundType

-- | A wallpaper in JPEG format
--   
--   <b>is_blurred</b> True, if the wallpaper must be downscaled to fit in
--   450x450 square and then box-blurred with radius 12
--   
--   <b>is_moving</b> True, if the background needs to be slightly moved
--   when device is tilted
BackgroundTypeWallpaper :: Maybe Bool -> Maybe Bool -> BackgroundType
[is_moving] :: BackgroundType -> Maybe Bool
[is_blurred] :: BackgroundType -> Maybe Bool

-- | A PNG or TGV (gzipped subset of SVG with MIME type
--   "application/x-tgwallpattern") pattern to be combined with the
--   background fill chosen by the user
--   
--   <b>fill</b> Description of the background fill
--   
--   <b>intensity</b> Intensity of the pattern when it is shown above the
--   filled background; 0-100.
--   
--   <b>is_inverted</b> True, if the background fill must be applied only
--   to the pattern itself. All other pixels are black in this case. For
--   dark themes only
--   
--   <b>is_moving</b> True, if the background needs to be slightly moved
--   when device is tilted
BackgroundTypePattern :: Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe BackgroundFill -> BackgroundType
[is_moving] :: BackgroundType -> Maybe Bool
[is_inverted] :: BackgroundType -> Maybe Bool
[intensity] :: BackgroundType -> Maybe Int
[fill] :: BackgroundType -> Maybe BackgroundFill

-- | A filled background
--   
--   <b>fill</b> Description of the background fill
BackgroundTypeFill :: Maybe BackgroundFill -> BackgroundType
[fill] :: BackgroundType -> Maybe BackgroundFill
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.BackgroundType.BackgroundType
instance GHC.Show.Show API.BackgroundType.BackgroundType
instance Data.Aeson.Types.ToJSON.ToJSON API.BackgroundType.BackgroundType
instance Data.Aeson.Types.FromJSON.FromJSON API.BackgroundType.BackgroundType

module API.Backgrounds

-- | Contains a list of backgrounds
--   
--   <b>backgrounds</b> A list of backgrounds
data Backgrounds
Backgrounds :: Maybe [Background] -> Backgrounds
[backgrounds] :: Backgrounds -> Maybe [Background]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Backgrounds.Backgrounds
instance GHC.Show.Show API.Backgrounds.Backgrounds
instance Data.Aeson.Types.ToJSON.ToJSON API.Backgrounds.Backgrounds
instance Data.Aeson.Types.FromJSON.FromJSON API.Backgrounds.Backgrounds

module API.BankCardActionOpenUrl

-- | Describes an action associated with a bank card number
--   
--   <b>text</b> Action text
--   
--   <b>url</b> The URL to be opened
data BankCardActionOpenUrl
BankCardActionOpenUrl :: Maybe String -> Maybe String -> BankCardActionOpenUrl
[url] :: BankCardActionOpenUrl -> Maybe String
[text] :: BankCardActionOpenUrl -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.BankCardActionOpenUrl.BankCardActionOpenUrl
instance GHC.Show.Show API.BankCardActionOpenUrl.BankCardActionOpenUrl
instance Data.Aeson.Types.ToJSON.ToJSON API.BankCardActionOpenUrl.BankCardActionOpenUrl
instance Data.Aeson.Types.FromJSON.FromJSON API.BankCardActionOpenUrl.BankCardActionOpenUrl

module API.BankCardInfo

-- | Information about a bank card
--   
--   <b>title</b> Title of the bank card description
--   
--   <b>actions</b> Actions that can be done with the bank card number
data BankCardInfo
BankCardInfo :: Maybe [BankCardActionOpenUrl] -> Maybe String -> BankCardInfo
[actions] :: BankCardInfo -> Maybe [BankCardActionOpenUrl]
[title] :: BankCardInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.BankCardInfo.BankCardInfo
instance GHC.Show.Show API.BankCardInfo.BankCardInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.BankCardInfo.BankCardInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.BankCardInfo.BankCardInfo

module API.BotCommand

-- | Represents a command supported by a bot
--   
--   <b>command</b> Text of the bot command
--   
--   <b>param_description</b> Description of the bot command
data BotCommand
BotCommand :: Maybe String -> Maybe String -> BotCommand
[description] :: BotCommand -> Maybe String
[command] :: BotCommand -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.BotCommand.BotCommand
instance GHC.Show.Show API.BotCommand.BotCommand
instance Data.Aeson.Types.ToJSON.ToJSON API.BotCommand.BotCommand
instance Data.Aeson.Types.FromJSON.FromJSON API.BotCommand.BotCommand

module API.BotCommandScope

-- | Represents the scope to which bot commands are relevant
data BotCommandScope

-- | A scope covering all users
BotCommandScopeDefault :: BotCommandScope

-- | A scope covering all private chats
BotCommandScopeAllPrivateChats :: BotCommandScope

-- | A scope covering all group and supergroup chats
BotCommandScopeAllGroupChats :: BotCommandScope

-- | A scope covering all group and supergroup chat administrators
BotCommandScopeAllChatAdministrators :: BotCommandScope

-- | A scope covering all members of a chat
--   
--   <b>chat_id</b> Chat identifier
BotCommandScopeChat :: Maybe Int -> BotCommandScope
[chat_id] :: BotCommandScope -> Maybe Int

-- | A scope covering all administrators of a chat
--   
--   <b>chat_id</b> Chat identifier
BotCommandScopeChatAdministrators :: Maybe Int -> BotCommandScope
[chat_id] :: BotCommandScope -> Maybe Int

-- | A scope covering a member of a chat
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>user_id</b> User identifier
BotCommandScopeChatMember :: Maybe Int -> Maybe Int -> BotCommandScope
[user_id] :: BotCommandScope -> Maybe Int
[chat_id] :: BotCommandScope -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.BotCommandScope.BotCommandScope
instance GHC.Show.Show API.BotCommandScope.BotCommandScope
instance Data.Aeson.Types.ToJSON.ToJSON API.BotCommandScope.BotCommandScope
instance Data.Aeson.Types.FromJSON.FromJSON API.BotCommandScope.BotCommandScope

module API.BotCommands

-- | Contains a list of bot commands
--   
--   <b>bot_user_id</b> Bot's user identifier
--   
--   <b>commands</b> List of bot commands
data BotCommands
BotCommands :: Maybe [BotCommand] -> Maybe Int -> BotCommands
[commands] :: BotCommands -> Maybe [BotCommand]
[bot_user_id] :: BotCommands -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.BotCommands.BotCommands
instance GHC.Show.Show API.BotCommands.BotCommands
instance Data.Aeson.Types.ToJSON.ToJSON API.BotCommands.BotCommands
instance Data.Aeson.Types.FromJSON.FromJSON API.BotCommands.BotCommands

module API.CallDiscardReason

-- | Describes the reason why a call was discarded
data CallDiscardReason

-- | The call wasn't discarded, or the reason is unknown
CallDiscardReasonEmpty :: CallDiscardReason

-- | The call was ended before the conversation started. It was canceled by
--   the caller or missed by the other party
CallDiscardReasonMissed :: CallDiscardReason

-- | The call was ended before the conversation started. It was declined by
--   the other party
CallDiscardReasonDeclined :: CallDiscardReason

-- | The call was ended during the conversation because the users were
--   disconnected
CallDiscardReasonDisconnected :: CallDiscardReason

-- | The call was ended because one of the parties hung up
CallDiscardReasonHungUp :: CallDiscardReason
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CallDiscardReason.CallDiscardReason
instance GHC.Show.Show API.CallDiscardReason.CallDiscardReason
instance Data.Aeson.Types.ToJSON.ToJSON API.CallDiscardReason.CallDiscardReason
instance Data.Aeson.Types.FromJSON.FromJSON API.CallDiscardReason.CallDiscardReason

module API.CallId

-- | Contains the call identifier
--   
--   <b>id</b> Call identifier
data CallId
CallId :: Maybe Int -> CallId
[_id] :: CallId -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CallId.CallId
instance GHC.Show.Show API.CallId.CallId
instance Data.Aeson.Types.ToJSON.ToJSON API.CallId.CallId
instance Data.Aeson.Types.FromJSON.FromJSON API.CallId.CallId

module API.CallProblem

-- | Describes the exact type of a problem with a call
data CallProblem

-- | The user heard their own voice
CallProblemEcho :: CallProblem

-- | The user heard background noise
CallProblemNoise :: CallProblem

-- | The other side kept disappearing
CallProblemInterruptions :: CallProblem

-- | The speech was distorted
CallProblemDistortedSpeech :: CallProblem

-- | The user couldn't hear the other side
CallProblemSilentLocal :: CallProblem

-- | The other side couldn't hear the user
CallProblemSilentRemote :: CallProblem

-- | The call ended unexpectedly
CallProblemDropped :: CallProblem

-- | The video was distorted
CallProblemDistortedVideo :: CallProblem

-- | The video was pixelated
CallProblemPixelatedVideo :: CallProblem
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CallProblem.CallProblem
instance GHC.Show.Show API.CallProblem.CallProblem
instance Data.Aeson.Types.ToJSON.ToJSON API.CallProblem.CallProblem
instance Data.Aeson.Types.FromJSON.FromJSON API.CallProblem.CallProblem

module API.CallProtocol

-- | Specifies the supported call protocols
--   
--   <b>udp_p2p</b> True, if UDP peer-to-peer connections are supported
--   
--   <b>udp_reflector</b> True, if connection through UDP reflectors is
--   supported
--   
--   <b>min_layer</b> The minimum supported API layer; use 65
--   
--   <b>max_layer</b> The maximum supported API layer; use 65
--   
--   <b>library_versions</b> List of supported tgcalls versions
data CallProtocol
CallProtocol :: Maybe [String] -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe Bool -> CallProtocol
[library_versions] :: CallProtocol -> Maybe [String]
[max_layer] :: CallProtocol -> Maybe Int
[min_layer] :: CallProtocol -> Maybe Int
[udp_reflector] :: CallProtocol -> Maybe Bool
[udp_p2p] :: CallProtocol -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CallProtocol.CallProtocol
instance GHC.Show.Show API.CallProtocol.CallProtocol
instance Data.Aeson.Types.ToJSON.ToJSON API.CallProtocol.CallProtocol
instance Data.Aeson.Types.FromJSON.FromJSON API.CallProtocol.CallProtocol

module API.CallServer

-- | Describes a server for relaying call data
--   
--   <b>id</b> Server identifier
--   
--   <b>ip_address</b> Server IPv4 address
--   
--   <b>ipv6_address</b> Server IPv6 address
--   
--   <b>port</b> Server port number
--   
--   <b>type</b> Server type
data CallServer
CallServer :: Maybe CallServerType -> Maybe Int -> Maybe String -> Maybe String -> Maybe Int -> CallServer
[_type] :: CallServer -> Maybe CallServerType
[port] :: CallServer -> Maybe Int
[ipv6_address] :: CallServer -> Maybe String
[ip_address] :: CallServer -> Maybe String
[_id] :: CallServer -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CallServer.CallServer
instance GHC.Show.Show API.CallServer.CallServer
instance Data.Aeson.Types.ToJSON.ToJSON API.CallServer.CallServer
instance Data.Aeson.Types.FromJSON.FromJSON API.CallServer.CallServer

module API.CallServerType

-- | Describes the type of a call server
data CallServerType

-- | A Telegram call reflector
--   
--   <b>peer_tag</b> A peer tag to be used with the reflector
CallServerTypeTelegramReflector :: Maybe String -> CallServerType
[peer_tag] :: CallServerType -> Maybe String

-- | A WebRTC server
--   
--   <b>username</b> Username to be used for authentication
--   
--   <b>password</b> Authentication password
--   
--   <b>supports_turn</b> True, if the server supports TURN
--   
--   <b>supports_stun</b> True, if the server supports STUN
CallServerTypeWebrtc :: Maybe Bool -> Maybe Bool -> Maybe String -> Maybe String -> CallServerType
[supports_stun] :: CallServerType -> Maybe Bool
[supports_turn] :: CallServerType -> Maybe Bool
[password] :: CallServerType -> Maybe String
[username] :: CallServerType -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CallServerType.CallServerType
instance GHC.Show.Show API.CallServerType.CallServerType
instance Data.Aeson.Types.ToJSON.ToJSON API.CallServerType.CallServerType
instance Data.Aeson.Types.FromJSON.FromJSON API.CallServerType.CallServerType

module API.Call

-- | Describes a call
--   
--   <b>id</b> Call identifier, not persistent
--   
--   <b>user_id</b> Peer user identifier
--   
--   <b>is_outgoing</b> True, if the call is outgoing
--   
--   <b>is_video</b> True, if the call is a video call
--   
--   <b>state</b> Call state
data Call
Call :: Maybe CallState -> Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe Int -> Call
[state] :: Call -> Maybe CallState
[is_video] :: Call -> Maybe Bool
[is_outgoing] :: Call -> Maybe Bool
[user_id] :: Call -> Maybe Int
[_id] :: Call -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Call.Call
instance GHC.Show.Show API.Call.Call
instance Data.Aeson.Types.ToJSON.ToJSON API.Call.Call
instance Data.Aeson.Types.FromJSON.FromJSON API.Call.Call

module API.CallbackQueryAnswer

-- | Contains a bot's answer to a callback query
--   
--   <b>text</b> Text of the answer
--   
--   <b>show_alert</b> True, if an alert must be shown to the user instead
--   of a toast notification
--   
--   <b>url</b> URL to be opened
data CallbackQueryAnswer
CallbackQueryAnswer :: Maybe String -> Maybe Bool -> Maybe String -> CallbackQueryAnswer
[url] :: CallbackQueryAnswer -> Maybe String
[show_alert] :: CallbackQueryAnswer -> Maybe Bool
[text] :: CallbackQueryAnswer -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CallbackQueryAnswer.CallbackQueryAnswer
instance GHC.Show.Show API.CallbackQueryAnswer.CallbackQueryAnswer
instance Data.Aeson.Types.ToJSON.ToJSON API.CallbackQueryAnswer.CallbackQueryAnswer
instance Data.Aeson.Types.FromJSON.FromJSON API.CallbackQueryAnswer.CallbackQueryAnswer

module API.CallbackQueryPayload

-- | Represents a payload of a callback query
data CallbackQueryPayload

-- | The payload for a general callback button
--   
--   <b>data</b> Data that was attached to the callback button
CallbackQueryPayloadData :: Maybe String -> CallbackQueryPayload
[_data] :: CallbackQueryPayload -> Maybe String

-- | The payload for a callback button requiring password
--   
--   <b>password</b> The password for the current user
--   
--   <b>data</b> Data that was attached to the callback button
CallbackQueryPayloadDataWithPassword :: Maybe String -> Maybe String -> CallbackQueryPayload
[_data] :: CallbackQueryPayload -> Maybe String
[password] :: CallbackQueryPayload -> Maybe String

-- | The payload for a game callback button
--   
--   <b>game_short_name</b> A short name of the game that was attached to
--   the callback button
CallbackQueryPayloadGame :: Maybe String -> CallbackQueryPayload
[game_short_name] :: CallbackQueryPayload -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CallbackQueryPayload.CallbackQueryPayload
instance GHC.Show.Show API.CallbackQueryPayload.CallbackQueryPayload
instance Data.Aeson.Types.ToJSON.ToJSON API.CallbackQueryPayload.CallbackQueryPayload
instance Data.Aeson.Types.FromJSON.FromJSON API.CallbackQueryPayload.CallbackQueryPayload

module API.CanTransferOwnershipResult

-- | Represents result of checking whether the current session can be used
--   to transfer a chat ownership to another user
data CanTransferOwnershipResult

-- | The session can be used
CanTransferOwnershipResultOk :: CanTransferOwnershipResult

-- | The 2-step verification needs to be enabled first
CanTransferOwnershipResultPasswordNeeded :: CanTransferOwnershipResult

-- | The 2-step verification was enabled recently, user needs to wait
--   
--   <b>retry_after</b> Time left before the session can be used to
--   transfer ownership of a chat, in seconds
CanTransferOwnershipResultPasswordTooFresh :: Maybe Int -> CanTransferOwnershipResult
[retry_after] :: CanTransferOwnershipResult -> Maybe Int

-- | The session was created recently, user needs to wait
--   
--   <b>retry_after</b> Time left before the session can be used to
--   transfer ownership of a chat, in seconds
CanTransferOwnershipResultSessionTooFresh :: Maybe Int -> CanTransferOwnershipResult
[retry_after] :: CanTransferOwnershipResult -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CanTransferOwnershipResult.CanTransferOwnershipResult
instance GHC.Show.Show API.CanTransferOwnershipResult.CanTransferOwnershipResult
instance Data.Aeson.Types.ToJSON.ToJSON API.CanTransferOwnershipResult.CanTransferOwnershipResult
instance Data.Aeson.Types.FromJSON.FromJSON API.CanTransferOwnershipResult.CanTransferOwnershipResult

module API.ChatAction

-- | Describes the different types of activity in a chat
data ChatAction

-- | The user is typing a message
ChatActionTyping :: ChatAction

-- | The user is recording a video
ChatActionRecordingVideo :: ChatAction

-- | The user is uploading a video
--   
--   <b>progress</b> Upload progress, as a percentage
ChatActionUploadingVideo :: Maybe Int -> ChatAction
[progress] :: ChatAction -> Maybe Int

-- | The user is recording a voice note
ChatActionRecordingVoiceNote :: ChatAction

-- | The user is uploading a voice note
--   
--   <b>progress</b> Upload progress, as a percentage
ChatActionUploadingVoiceNote :: Maybe Int -> ChatAction
[progress] :: ChatAction -> Maybe Int

-- | The user is uploading a photo
--   
--   <b>progress</b> Upload progress, as a percentage
ChatActionUploadingPhoto :: Maybe Int -> ChatAction
[progress] :: ChatAction -> Maybe Int

-- | The user is uploading a document
--   
--   <b>progress</b> Upload progress, as a percentage
ChatActionUploadingDocument :: Maybe Int -> ChatAction
[progress] :: ChatAction -> Maybe Int

-- | The user is picking a sticker to send
ChatActionChoosingSticker :: ChatAction

-- | The user is picking a location or venue to send
ChatActionChoosingLocation :: ChatAction

-- | The user is picking a contact to send
ChatActionChoosingContact :: ChatAction

-- | The user has started to play a game
ChatActionStartPlayingGame :: ChatAction

-- | The user is recording a video note
ChatActionRecordingVideoNote :: ChatAction

-- | The user is uploading a video note
--   
--   <b>progress</b> Upload progress, as a percentage
ChatActionUploadingVideoNote :: Maybe Int -> ChatAction
[progress] :: ChatAction -> Maybe Int

-- | The user is watching animations sent by the other party by clicking on
--   an animated emoji
--   
--   <b>emoji</b> The animated emoji
ChatActionWatchingAnimations :: Maybe String -> ChatAction
[emoji] :: ChatAction -> Maybe String

-- | The user has canceled the previous action
ChatActionCancel :: ChatAction
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatAction.ChatAction
instance GHC.Show.Show API.ChatAction.ChatAction
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatAction.ChatAction
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatAction.ChatAction

module API.ChatActionBar

-- | Describes actions which must be possible to do through a chat action
--   bar
data ChatActionBar

-- | The chat can be reported as spam using the method reportChat with the
--   reason chatReportReasonSpam
--   
--   <b>can_unarchive</b> If true, the chat was automatically archived and
--   can be moved back to the main chat list using addChatToList
--   simultaneously with setting chat notification settings to default
--   using setChatNotificationSettings
ChatActionBarReportSpam :: Maybe Bool -> ChatActionBar
[can_unarchive] :: ChatActionBar -> Maybe Bool

-- | The chat is a location-based supergroup, which can be reported as
--   having unrelated location using the method reportChat with the reason
--   chatReportReasonUnrelatedLocation
ChatActionBarReportUnrelatedLocation :: ChatActionBar

-- | The chat is a recently created group chat, to which new members can be
--   invited
ChatActionBarInviteMembers :: ChatActionBar

-- | The chat is a private or secret chat, which can be reported using the
--   method reportChat, or the other user can be blocked using the method
--   toggleMessageSenderIsBlocked, or the other user can be added to the
--   contact list using the method addContact
--   
--   <b>can_unarchive</b> If true, the chat was automatically archived and
--   can be moved back to the main chat list using addChatToList
--   simultaneously with setting chat notification settings to default
--   using setChatNotificationSettings
--   
--   <b>distance</b> If non-negative, the current user was found by the
--   peer through searchChatsNearby and this is the distance between the
--   users
ChatActionBarReportAddBlock :: Maybe Int -> Maybe Bool -> ChatActionBar
[distance] :: ChatActionBar -> Maybe Int
[can_unarchive] :: ChatActionBar -> Maybe Bool

-- | The chat is a private or secret chat and the other user can be added
--   to the contact list using the method addContact
ChatActionBarAddContact :: ChatActionBar

-- | The chat is a private or secret chat with a mutual contact and the
--   user's phone number can be shared with the other user using the method
--   sharePhoneNumber
ChatActionBarSharePhoneNumber :: ChatActionBar
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatActionBar.ChatActionBar
instance GHC.Show.Show API.ChatActionBar.ChatActionBar
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatActionBar.ChatActionBar
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatActionBar.ChatActionBar

module API.ChatAdministrator

-- | Contains information about a chat administrator
--   
--   <b>user_id</b> User identifier of the administrator
--   
--   <b>custom_title</b> Custom title of the administrator
--   
--   <b>is_owner</b> True, if the user is the owner of the chat
data ChatAdministrator
ChatAdministrator :: Maybe Bool -> Maybe String -> Maybe Int -> ChatAdministrator
[is_owner] :: ChatAdministrator -> Maybe Bool
[custom_title] :: ChatAdministrator -> Maybe String
[user_id] :: ChatAdministrator -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatAdministrator.ChatAdministrator
instance GHC.Show.Show API.ChatAdministrator.ChatAdministrator
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatAdministrator.ChatAdministrator
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatAdministrator.ChatAdministrator

module API.ChatAdministrators

-- | Represents a list of chat administrators
--   
--   <b>administrators</b> A list of chat administrators
data ChatAdministrators
ChatAdministrators :: Maybe [ChatAdministrator] -> ChatAdministrators
[administrators] :: ChatAdministrators -> Maybe [ChatAdministrator]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatAdministrators.ChatAdministrators
instance GHC.Show.Show API.ChatAdministrators.ChatAdministrators
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatAdministrators.ChatAdministrators
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatAdministrators.ChatAdministrators

module API.ChatEvent

-- | Represents a chat event
--   
--   <b>id</b> Chat event identifier
--   
--   <b>date</b> Point in time (Unix timestamp) when the event happened
--   
--   <b>user_id</b> Identifier of the user who performed the action that
--   triggered the event
--   
--   <b>action</b> Action performed by the user
data ChatEvent
ChatEvent :: Maybe ChatEventAction -> Maybe Int -> Maybe Int -> Maybe Int -> ChatEvent
[action] :: ChatEvent -> Maybe ChatEventAction
[user_id] :: ChatEvent -> Maybe Int
[date] :: ChatEvent -> Maybe Int
[_id] :: ChatEvent -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatEvent.ChatEvent
instance GHC.Show.Show API.ChatEvent.ChatEvent
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatEvent.ChatEvent
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatEvent.ChatEvent

module API.ChatEventLogFilters

-- | Represents a set of filters used to obtain a chat event log
--   
--   <b>message_edits</b> True, if message edits need to be returned
--   
--   <b>message_deletions</b> True, if message deletions need to be
--   returned
--   
--   <b>message_pins</b> True, if pin/unpin events need to be returned
--   
--   <b>member_joins</b> True, if members joining events need to be
--   returned
--   
--   <b>member_leaves</b> True, if members leaving events need to be
--   returned
--   
--   <b>member_invites</b> True, if invited member events need to be
--   returned
--   
--   <b>member_promotions</b> True, if member promotion/demotion events
--   need to be returned
--   
--   <b>member_restrictions</b> True, if member
--   restricted<i>unrestricted</i>banned/unbanned events need to be
--   returned
--   
--   <b>info_changes</b> True, if changes in chat information need to be
--   returned
--   
--   <b>setting_changes</b> True, if changes in chat settings need to be
--   returned
--   
--   <b>invite_link_changes</b> True, if changes to invite links need to be
--   returned
--   
--   <b>voice_chat_changes</b> True, if voice chat actions need to be
--   returned
data ChatEventLogFilters
ChatEventLogFilters :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> ChatEventLogFilters
[voice_chat_changes] :: ChatEventLogFilters -> Maybe Bool
[invite_link_changes] :: ChatEventLogFilters -> Maybe Bool
[setting_changes] :: ChatEventLogFilters -> Maybe Bool
[info_changes] :: ChatEventLogFilters -> Maybe Bool
[member_restrictions] :: ChatEventLogFilters -> Maybe Bool
[member_promotions] :: ChatEventLogFilters -> Maybe Bool
[member_invites] :: ChatEventLogFilters -> Maybe Bool
[member_leaves] :: ChatEventLogFilters -> Maybe Bool
[member_joins] :: ChatEventLogFilters -> Maybe Bool
[message_pins] :: ChatEventLogFilters -> Maybe Bool
[message_deletions] :: ChatEventLogFilters -> Maybe Bool
[message_edits] :: ChatEventLogFilters -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatEventLogFilters.ChatEventLogFilters
instance GHC.Show.Show API.ChatEventLogFilters.ChatEventLogFilters
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatEventLogFilters.ChatEventLogFilters
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatEventLogFilters.ChatEventLogFilters

module API.ChatEvents

-- | Contains a list of chat events
--   
--   <b>events</b> List of events
data ChatEvents
ChatEvents :: Maybe [ChatEvent] -> ChatEvents
[events] :: ChatEvents -> Maybe [ChatEvent]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatEvents.ChatEvents
instance GHC.Show.Show API.ChatEvents.ChatEvents
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatEvents.ChatEvents
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatEvents.ChatEvents

module API.ChatFilter

-- | Represents a filter of user chats
--   
--   <b>title</b> The title of the filter; 1-12 characters without line
--   feeds
--   
--   <b>icon_name</b> The icon name for short filter representation. If
--   non-empty, must be one of <a>All</a>, <a>Unread</a>, <a>Unmuted</a>,
--   <a>Bots</a>, <a>Channels</a>, <a>Groups</a>, <a>Private</a>,
--   <a>Custom</a>, <a>Setup</a>, <a>Cat</a>, <a>Crown</a>,
--   <a>Favorite</a>, <a>Flower</a>, <a>Game</a>, <a>Home</a>, <a>Love</a>,
--   <a>Mask</a>, <a>Party</a>, <a>Sport</a>, <a>Study</a>, <a>Trade</a>,
--   <a>Travel</a>, <a>Work</a>.
--   
--   <ul>
--   <li>If empty, use getChatFilterDefaultIconName to get default icon
--   name for the filter</li>
--   </ul>
--   
--   <b>pinned_chat_ids</b> The chat identifiers of pinned chats in the
--   filtered chat list
--   
--   <b>included_chat_ids</b> The chat identifiers of always included chats
--   in the filtered chat list
--   
--   <b>excluded_chat_ids</b> The chat identifiers of always excluded chats
--   in the filtered chat list
--   
--   <b>exclude_muted</b> True, if muted chats need to be excluded
--   
--   <b>exclude_read</b> True, if read chats need to be excluded
--   
--   <b>exclude_archived</b> True, if archived chats need to be excluded
--   
--   <b>include_contacts</b> True, if contacts need to be included
--   
--   <b>include_non_contacts</b> True, if non-contact users need to be
--   included
--   
--   <b>include_bots</b> True, if bots need to be included
--   
--   <b>include_groups</b> True, if basic groups and supergroups need to be
--   included
--   
--   <b>include_channels</b> True, if channels need to be included
data ChatFilter
ChatFilter :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe [Int] -> Maybe [Int] -> Maybe [Int] -> Maybe String -> Maybe String -> ChatFilter
[include_channels] :: ChatFilter -> Maybe Bool
[include_groups] :: ChatFilter -> Maybe Bool
[include_bots] :: ChatFilter -> Maybe Bool
[include_non_contacts] :: ChatFilter -> Maybe Bool
[include_contacts] :: ChatFilter -> Maybe Bool
[exclude_archived] :: ChatFilter -> Maybe Bool
[exclude_read] :: ChatFilter -> Maybe Bool
[exclude_muted] :: ChatFilter -> Maybe Bool
[excluded_chat_ids] :: ChatFilter -> Maybe [Int]
[included_chat_ids] :: ChatFilter -> Maybe [Int]
[pinned_chat_ids] :: ChatFilter -> Maybe [Int]
[icon_name] :: ChatFilter -> Maybe String
[title] :: ChatFilter -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatFilter.ChatFilter
instance GHC.Show.Show API.ChatFilter.ChatFilter
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatFilter.ChatFilter
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatFilter.ChatFilter

module API.ChatFilterInfo

-- | Contains basic information about a chat filter
--   
--   <b>id</b> Unique chat filter identifier
--   
--   <b>title</b> The title of the filter; 1-12 characters without line
--   feeds
--   
--   <b>icon_name</b> The icon name for short filter representation. One of
--   <a>All</a>, <a>Unread</a>, <a>Unmuted</a>, <a>Bots</a>,
--   <a>Channels</a>, <a>Groups</a>, <a>Private</a>, <a>Custom</a>,
--   <a>Setup</a>, <a>Cat</a>, <a>Crown</a>, <a>Favorite</a>,
--   <a>Flower</a>, <a>Game</a>, <a>Home</a>, <a>Love</a>, <a>Mask</a>,
--   <a>Party</a>, <a>Sport</a>, <a>Study</a>, <a>Trade</a>, <a>Travel</a>,
--   <a>Work</a>
data ChatFilterInfo
ChatFilterInfo :: Maybe String -> Maybe String -> Maybe Int -> ChatFilterInfo
[icon_name] :: ChatFilterInfo -> Maybe String
[title] :: ChatFilterInfo -> Maybe String
[_id] :: ChatFilterInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatFilterInfo.ChatFilterInfo
instance GHC.Show.Show API.ChatFilterInfo.ChatFilterInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatFilterInfo.ChatFilterInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatFilterInfo.ChatFilterInfo

module API.ChatInviteLink

-- | Contains a chat invite link
--   
--   <b>invite_link</b> Chat invite link
--   
--   <b>creator_user_id</b> User identifier of an administrator created the
--   link
--   
--   <b>date</b> Point in time (Unix timestamp) when the link was created
--   
--   <b>edit_date</b> Point in time (Unix timestamp) when the link was last
--   edited; 0 if never or unknown
--   
--   <b>expire_date</b> Point in time (Unix timestamp) when the link will
--   expire; 0 if never
--   
--   <b>member_limit</b> The maximum number of members, which can join the
--   chat using the link simultaneously; 0 if not limited
--   
--   <b>member_count</b> Number of chat members, which joined the chat
--   using the link
--   
--   <b>is_primary</b> True, if the link is primary. Primary invite link
--   can't have expire date or usage limit. There is exactly one primary
--   invite link for each administrator with can_invite_users right at a
--   given time
--   
--   <b>is_revoked</b> True, if the link was revoked
data ChatInviteLink
ChatInviteLink :: Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe String -> ChatInviteLink
[is_revoked] :: ChatInviteLink -> Maybe Bool
[is_primary] :: ChatInviteLink -> Maybe Bool
[member_count] :: ChatInviteLink -> Maybe Int
[member_limit] :: ChatInviteLink -> Maybe Int
[expire_date] :: ChatInviteLink -> Maybe Int
[edit_date] :: ChatInviteLink -> Maybe Int
[date] :: ChatInviteLink -> Maybe Int
[creator_user_id] :: ChatInviteLink -> Maybe Int
[invite_link] :: ChatInviteLink -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatInviteLink.ChatInviteLink
instance GHC.Show.Show API.ChatInviteLink.ChatInviteLink
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatInviteLink.ChatInviteLink
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatInviteLink.ChatInviteLink

module API.ChatInviteLinkCount

-- | Describes a chat administrator with a number of active and revoked
--   chat invite links
--   
--   <b>user_id</b> Administrator's user identifier
--   
--   <b>invite_link_count</b> Number of active invite links
--   
--   <b>revoked_invite_link_count</b> Number of revoked invite links
data ChatInviteLinkCount
ChatInviteLinkCount :: Maybe Int -> Maybe Int -> Maybe Int -> ChatInviteLinkCount
[revoked_invite_link_count] :: ChatInviteLinkCount -> Maybe Int
[invite_link_count] :: ChatInviteLinkCount -> Maybe Int
[user_id] :: ChatInviteLinkCount -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatInviteLinkCount.ChatInviteLinkCount
instance GHC.Show.Show API.ChatInviteLinkCount.ChatInviteLinkCount
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatInviteLinkCount.ChatInviteLinkCount
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatInviteLinkCount.ChatInviteLinkCount

module API.ChatInviteLinkCounts

-- | Contains a list of chat invite link counts
--   
--   <b>invite_link_counts</b> List of invite linkcounts
data ChatInviteLinkCounts
ChatInviteLinkCounts :: Maybe [ChatInviteLinkCount] -> ChatInviteLinkCounts
[invite_link_counts] :: ChatInviteLinkCounts -> Maybe [ChatInviteLinkCount]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatInviteLinkCounts.ChatInviteLinkCounts
instance GHC.Show.Show API.ChatInviteLinkCounts.ChatInviteLinkCounts
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatInviteLinkCounts.ChatInviteLinkCounts
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatInviteLinkCounts.ChatInviteLinkCounts

module API.ChatInviteLinkMember

-- | Describes a chat member joined a chat by an invite link
--   
--   <b>user_id</b> User identifier
--   
--   <b>joined_chat_date</b> Point in time (Unix timestamp) when the user
--   joined the chat
data ChatInviteLinkMember
ChatInviteLinkMember :: Maybe Int -> Maybe Int -> ChatInviteLinkMember
[joined_chat_date] :: ChatInviteLinkMember -> Maybe Int
[user_id] :: ChatInviteLinkMember -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatInviteLinkMember.ChatInviteLinkMember
instance GHC.Show.Show API.ChatInviteLinkMember.ChatInviteLinkMember
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatInviteLinkMember.ChatInviteLinkMember
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatInviteLinkMember.ChatInviteLinkMember

module API.ChatInviteLinkMembers

-- | Contains a list of chat members joined a chat by an invite link
--   
--   <b>total_count</b> Approximate total count of chat members found
--   
--   <b>members</b> List of chat members, joined a chat by an invite link
data ChatInviteLinkMembers
ChatInviteLinkMembers :: Maybe [ChatInviteLinkMember] -> Maybe Int -> ChatInviteLinkMembers
[members] :: ChatInviteLinkMembers -> Maybe [ChatInviteLinkMember]
[total_count] :: ChatInviteLinkMembers -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatInviteLinkMembers.ChatInviteLinkMembers
instance GHC.Show.Show API.ChatInviteLinkMembers.ChatInviteLinkMembers
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatInviteLinkMembers.ChatInviteLinkMembers
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatInviteLinkMembers.ChatInviteLinkMembers

module API.ChatInviteLinks

-- | Contains a list of chat invite links
--   
--   <b>total_count</b> Approximate total count of chat invite links found
--   
--   <b>invite_links</b> List of invite links
data ChatInviteLinks
ChatInviteLinks :: Maybe [ChatInviteLink] -> Maybe Int -> ChatInviteLinks
[invite_links] :: ChatInviteLinks -> Maybe [ChatInviteLink]
[total_count] :: ChatInviteLinks -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatInviteLinks.ChatInviteLinks
instance GHC.Show.Show API.ChatInviteLinks.ChatInviteLinks
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatInviteLinks.ChatInviteLinks
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatInviteLinks.ChatInviteLinks

module API.ChatList

-- | Describes a list of chats
data ChatList

-- | A main list of chats
ChatListMain :: ChatList

-- | A list of chats usually located at the top of the main chat list.
--   Unmuted chats are automatically moved from the Archive to the Main
--   chat list when a new message arrives
ChatListArchive :: ChatList

-- | A list of chats belonging to a chat filter
--   
--   <b>chat_filter_id</b> Chat filter identifier
ChatListFilter :: Maybe Int -> ChatList
[chat_filter_id] :: ChatList -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatList.ChatList
instance GHC.Show.Show API.ChatList.ChatList
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatList.ChatList
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatList.ChatList

module API.ChatLists

-- | Contains a list of chat lists
--   
--   <b>chat_lists</b> List of chat lists
data ChatLists
ChatLists :: Maybe [ChatList] -> ChatLists
[chat_lists] :: ChatLists -> Maybe [ChatList]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatLists.ChatLists
instance GHC.Show.Show API.ChatLists.ChatLists
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatLists.ChatLists
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatLists.ChatLists

module API.BasicGroup

-- | Represents a basic group of 0-200 users (must be upgraded to a
--   supergroup to accommodate more than 200 users)
--   
--   <b>id</b> Group identifier
--   
--   <b>member_count</b> Number of members in the group
--   
--   <b>status</b> Status of the current user in the group
--   
--   <b>is_active</b> True, if the group is active
--   
--   <b>upgraded_to_supergroup_id</b> Identifier of the supergroup to which
--   this group was upgraded; 0 if none
data BasicGroup
BasicGroup :: Maybe Int -> Maybe Bool -> Maybe ChatMemberStatus -> Maybe Int -> Maybe Int -> BasicGroup
[upgraded_to_supergroup_id] :: BasicGroup -> Maybe Int
[is_active] :: BasicGroup -> Maybe Bool
[status] :: BasicGroup -> Maybe ChatMemberStatus
[member_count] :: BasicGroup -> Maybe Int
[_id] :: BasicGroup -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.BasicGroup.BasicGroup
instance GHC.Show.Show API.BasicGroup.BasicGroup
instance Data.Aeson.Types.ToJSON.ToJSON API.BasicGroup.BasicGroup
instance Data.Aeson.Types.FromJSON.FromJSON API.BasicGroup.BasicGroup

module API.ChatMembers

-- | Contains a list of chat members
--   
--   <b>total_count</b> Approximate total count of chat members found
--   
--   <b>members</b> A list of chat members
data ChatMembers
ChatMembers :: Maybe [ChatMember] -> Maybe Int -> ChatMembers
[members] :: ChatMembers -> Maybe [ChatMember]
[total_count] :: ChatMembers -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatMembers.ChatMembers
instance GHC.Show.Show API.ChatMembers.ChatMembers
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatMembers.ChatMembers
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatMembers.ChatMembers

module API.ChatMembersFilter

-- | Specifies the kind of chat members to return in searchChatMembers
data ChatMembersFilter

-- | Returns contacts of the user
ChatMembersFilterContacts :: ChatMembersFilter

-- | Returns the owner and administrators
ChatMembersFilterAdministrators :: ChatMembersFilter

-- | Returns all chat members, including restricted chat members
ChatMembersFilterMembers :: ChatMembersFilter

-- | Returns users which can be mentioned in the chat
--   
--   <b>message_thread_id</b> If non-zero, the identifier of the current
--   message thread
ChatMembersFilterMention :: Maybe Int -> ChatMembersFilter
[message_thread_id] :: ChatMembersFilter -> Maybe Int

-- | Returns users under certain restrictions in the chat; can be used only
--   by administrators in a supergroup
ChatMembersFilterRestricted :: ChatMembersFilter

-- | Returns users banned from the chat; can be used only by administrators
--   in a supergroup or in a channel
ChatMembersFilterBanned :: ChatMembersFilter

-- | Returns bot members of the chat
ChatMembersFilterBots :: ChatMembersFilter
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatMembersFilter.ChatMembersFilter
instance GHC.Show.Show API.ChatMembersFilter.ChatMembersFilter
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatMembersFilter.ChatMembersFilter
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatMembersFilter.ChatMembersFilter

module API.ChatNearby

-- | Describes a chat located nearby
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>distance</b> Distance to the chat location, in meters
data ChatNearby
ChatNearby :: Maybe Int -> Maybe Int -> ChatNearby
[distance] :: ChatNearby -> Maybe Int
[chat_id] :: ChatNearby -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatNearby.ChatNearby
instance GHC.Show.Show API.ChatNearby.ChatNearby
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatNearby.ChatNearby
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatNearby.ChatNearby

module API.ChatNotificationSettings

-- | Contains information about notification settings for a chat
--   
--   <b>use_default_mute_for</b> If true, mute_for is ignored and the value
--   for the relevant type of chat is used instead
--   
--   <b>mute_for</b> Time left before notifications will be unmuted, in
--   seconds
--   
--   <b>use_default_sound</b> If true, sound is ignored and the value for
--   the relevant type of chat is used instead
--   
--   <b>sound</b> The name of an audio file to be used for notification
--   sounds; only applies to iOS applications
--   
--   <b>use_default_show_preview</b> If true, show_preview is ignored and
--   the value for the relevant type of chat is used instead
--   
--   <b>show_preview</b> True, if message content must be displayed in
--   notifications
--   
--   <b>use_default_disable_pinned_message_notifications</b> If true,
--   disable_pinned_message_notifications is ignored and the value for the
--   relevant type of chat is used instead
--   
--   <b>disable_pinned_message_notifications</b> If true, notifications for
--   incoming pinned messages will be created as for an ordinary unread
--   message
--   
--   <b>use_default_disable_mention_notifications</b> If true,
--   disable_mention_notifications is ignored and the value for the
--   relevant type of chat is used instead
--   
--   <b>disable_mention_notifications</b> If true, notifications for
--   messages with mentions will be created as for an ordinary unread
--   message
data ChatNotificationSettings
ChatNotificationSettings :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe String -> Maybe Bool -> Maybe Int -> Maybe Bool -> ChatNotificationSettings
[disable_mention_notifications] :: ChatNotificationSettings -> Maybe Bool
[use_default_disable_mention_notifications] :: ChatNotificationSettings -> Maybe Bool
[disable_pinned_message_notifications] :: ChatNotificationSettings -> Maybe Bool
[use_default_disable_pinned_message_notifications] :: ChatNotificationSettings -> Maybe Bool
[show_preview] :: ChatNotificationSettings -> Maybe Bool
[use_default_show_preview] :: ChatNotificationSettings -> Maybe Bool
[sound] :: ChatNotificationSettings -> Maybe String
[use_default_sound] :: ChatNotificationSettings -> Maybe Bool
[mute_for] :: ChatNotificationSettings -> Maybe Int
[use_default_mute_for] :: ChatNotificationSettings -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatNotificationSettings.ChatNotificationSettings
instance GHC.Show.Show API.ChatNotificationSettings.ChatNotificationSettings
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatNotificationSettings.ChatNotificationSettings
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatNotificationSettings.ChatNotificationSettings

module API.ChatMemberStatus

-- | Provides information about the status of a member in a chat
data ChatMemberStatus

-- | The user is the owner of the chat and has all the administrator
--   privileges
--   
--   <b>custom_title</b> A custom title of the owner; 0-16 characters
--   without emojis; applicable to supergroups only
--   
--   <b>is_anonymous</b> True, if the creator isn't shown in the chat
--   member list and sends messages anonymously; applicable to supergroups
--   only
--   
--   <b>is_member</b> True, if the user is a member of the chat
ChatMemberStatusCreator :: Maybe Bool -> Maybe Bool -> Maybe String -> ChatMemberStatus
[is_member] :: ChatMemberStatus -> Maybe Bool
[is_anonymous] :: ChatMemberStatus -> Maybe Bool
[custom_title] :: ChatMemberStatus -> Maybe String

-- | The user is a member of the chat and has some additional privileges.
--   In basic groups, administrators can edit and delete messages sent by
--   others, add new members, ban unprivileged members, and manage voice
--   chats. In supergroups and channels, there are more detailed options
--   for administrator privileges
--   
--   <b>custom_title</b> A custom title of the administrator; 0-16
--   characters without emojis; applicable to supergroups only
--   
--   <b>can_be_edited</b> True, if the current user can edit the
--   administrator privileges for the called user
--   
--   <b>can_manage_chat</b> True, if the administrator can get chat event
--   log, get chat statistics, get message statistics in channels, get
--   channel members, see anonymous administrators in supergroups and
--   ignore slow mode. Implied by any other privilege; applicable to
--   supergroups and channels only
--   
--   <b>can_change_info</b> True, if the administrator can change the chat
--   title, photo, and other settings
--   
--   <b>can_post_messages</b> True, if the administrator can create channel
--   posts; applicable to channels only
--   
--   <b>can_edit_messages</b> True, if the administrator can edit messages
--   of other users and pin messages; applicable to channels only
--   
--   <b>can_delete_messages</b> True, if the administrator can delete
--   messages of other users
--   
--   <b>can_invite_users</b> True, if the administrator can invite new
--   users to the chat
--   
--   <b>can_restrict_members</b> True, if the administrator can restrict,
--   ban, or unban chat members; always true for channels
--   
--   <b>can_pin_messages</b> True, if the administrator can pin messages;
--   applicable to basic groups and supergroups only
--   
--   <b>can_promote_members</b> True, if the administrator can add new
--   administrators with a subset of their own privileges or demote
--   administrators that were directly or indirectly promoted by them
--   
--   <b>can_manage_voice_chats</b> True, if the administrator can manage
--   voice chats
--   
--   <b>is_anonymous</b> True, if the administrator isn't shown in the chat
--   member list and sends messages anonymously; applicable to supergroups
--   only
ChatMemberStatusAdministrator :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe String -> ChatMemberStatus
[is_anonymous] :: ChatMemberStatus -> Maybe Bool
[can_manage_voice_chats] :: ChatMemberStatus -> Maybe Bool
[can_promote_members] :: ChatMemberStatus -> Maybe Bool
[can_pin_messages] :: ChatMemberStatus -> Maybe Bool
[can_restrict_members] :: ChatMemberStatus -> Maybe Bool
[can_invite_users] :: ChatMemberStatus -> Maybe Bool
[can_delete_messages] :: ChatMemberStatus -> Maybe Bool
[can_edit_messages] :: ChatMemberStatus -> Maybe Bool
[can_post_messages] :: ChatMemberStatus -> Maybe Bool
[can_change_info] :: ChatMemberStatus -> Maybe Bool
[can_manage_chat] :: ChatMemberStatus -> Maybe Bool
[can_be_edited] :: ChatMemberStatus -> Maybe Bool
[custom_title] :: ChatMemberStatus -> Maybe String

-- | The user is a member of the chat, without any additional privileges or
--   restrictions
ChatMemberStatusMember :: ChatMemberStatus

-- | The user is under certain restrictions in the chat. Not supported in
--   basic groups and channels
--   
--   <b>is_member</b> True, if the user is a member of the chat
--   
--   <b>restricted_until_date</b> Point in time (Unix timestamp) when
--   restrictions will be lifted from the user; 0 if never. If the user is
--   restricted for more than 366 days or for less than 30 seconds from the
--   current time, the user is considered to be restricted forever
--   
--   <b>permissions</b> User permissions in the chat
ChatMemberStatusRestricted :: Maybe ChatPermissions -> Maybe Int -> Maybe Bool -> ChatMemberStatus
[permissions] :: ChatMemberStatus -> Maybe ChatPermissions
[restricted_until_date] :: ChatMemberStatus -> Maybe Int
[is_member] :: ChatMemberStatus -> Maybe Bool

-- | The user or the chat is not a chat member
ChatMemberStatusLeft :: ChatMemberStatus

-- | The user or the chat was banned (and hence is not a member of the
--   chat). Implies the user can't return to the chat, view messages, or be
--   used as a participant identifier to join a voice chat of the chat
--   
--   <b>banned_until_date</b> Point in time (Unix timestamp) when the user
--   will be unbanned; 0 if never. If the user is banned for more than 366
--   days or for less than 30 seconds from the current time, the user is
--   considered to be banned forever. Always 0 in basic groups
ChatMemberStatusBanned :: Maybe Int -> ChatMemberStatus
[banned_until_date] :: ChatMemberStatus -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatMemberStatus.ChatMemberStatus
instance GHC.Show.Show API.ChatMemberStatus.ChatMemberStatus
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatMemberStatus.ChatMemberStatus
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatMemberStatus.ChatMemberStatus

module API.ChatPermissions

-- | Describes actions that a user is allowed to take in a chat
--   
--   <b>can_send_messages</b> True, if the user can send text messages,
--   contacts, locations, and venues
--   
--   <b>can_send_media_messages</b> True, if the user can send audio files,
--   documents, photos, videos, video notes, and voice notes. Implies
--   can_send_messages permissions
--   
--   <b>can_send_polls</b> True, if the user can send polls. Implies
--   can_send_messages permissions
--   
--   <b>can_send_other_messages</b> True, if the user can send animations,
--   games, stickers, and dice and use inline bots. Implies
--   can_send_messages permissions
--   
--   <b>can_add_web_page_previews</b> True, if the user may add a web page
--   preview to their messages. Implies can_send_messages permissions
--   
--   <b>can_change_info</b> True, if the user can change the chat title,
--   photo, and other settings
--   
--   <b>can_invite_users</b> True, if the user can invite new users to the
--   chat
--   
--   <b>can_pin_messages</b> True, if the user can pin messages
data ChatPermissions
ChatPermissions :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> ChatPermissions
[can_pin_messages] :: ChatPermissions -> Maybe Bool
[can_invite_users] :: ChatPermissions -> Maybe Bool
[can_change_info] :: ChatPermissions -> Maybe Bool
[can_add_web_page_previews] :: ChatPermissions -> Maybe Bool
[can_send_other_messages] :: ChatPermissions -> Maybe Bool
[can_send_polls] :: ChatPermissions -> Maybe Bool
[can_send_media_messages] :: ChatPermissions -> Maybe Bool
[can_send_messages] :: ChatPermissions -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatPermissions.ChatPermissions
instance GHC.Show.Show API.ChatPermissions.ChatPermissions
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatPermissions.ChatPermissions
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatPermissions.ChatPermissions

module API.BasicGroupFullInfo

-- | Contains full information about a basic group
--   
--   <b>photo</b> Chat photo; may be null
--   
--   <b>param_description</b> Group description. Updated only after the
--   basic group is opened
--   
--   <b>creator_user_id</b> User identifier of the creator of the group; 0
--   if unknown
--   
--   <b>members</b> Group members
--   
--   <b>invite_link</b> Primary invite link for this group; may be null.
--   For chat administrators with can_invite_users right only. Updated only
--   after the basic group is opened
--   
--   <b>bot_commands</b> List of commands of bots in the group
data BasicGroupFullInfo
BasicGroupFullInfo :: Maybe [BotCommands] -> Maybe ChatInviteLink -> Maybe [ChatMember] -> Maybe Int -> Maybe String -> Maybe ChatPhoto -> BasicGroupFullInfo
[bot_commands] :: BasicGroupFullInfo -> Maybe [BotCommands]
[invite_link] :: BasicGroupFullInfo -> Maybe ChatInviteLink
[members] :: BasicGroupFullInfo -> Maybe [ChatMember]
[creator_user_id] :: BasicGroupFullInfo -> Maybe Int
[description] :: BasicGroupFullInfo -> Maybe String
[photo] :: BasicGroupFullInfo -> Maybe ChatPhoto
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.BasicGroupFullInfo.BasicGroupFullInfo
instance GHC.Show.Show API.BasicGroupFullInfo.BasicGroupFullInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.BasicGroupFullInfo.BasicGroupFullInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.BasicGroupFullInfo.BasicGroupFullInfo

module API.ChatPhotos

-- | Contains a list of chat or user profile photos
--   
--   <b>total_count</b> Total number of photos
--   
--   <b>photos</b> List of photos
data ChatPhotos
ChatPhotos :: Maybe [ChatPhoto] -> Maybe Int -> ChatPhotos
[photos] :: ChatPhotos -> Maybe [ChatPhoto]
[total_count] :: ChatPhotos -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatPhotos.ChatPhotos
instance GHC.Show.Show API.ChatPhotos.ChatPhotos
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatPhotos.ChatPhotos
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatPhotos.ChatPhotos

module API.ChatReportReason

-- | Describes the reason why a chat is reported
data ChatReportReason

-- | The chat contains spam messages
ChatReportReasonSpam :: ChatReportReason

-- | The chat promotes violence
ChatReportReasonViolence :: ChatReportReason

-- | The chat contains pornographic messages
ChatReportReasonPornography :: ChatReportReason

-- | The chat has child abuse related content
ChatReportReasonChildAbuse :: ChatReportReason

-- | The chat contains copyrighted content
ChatReportReasonCopyright :: ChatReportReason

-- | The location-based chat is unrelated to its stated location
ChatReportReasonUnrelatedLocation :: ChatReportReason

-- | The chat represents a fake account
ChatReportReasonFake :: ChatReportReason

-- | A custom reason provided by the user
ChatReportReasonCustom :: ChatReportReason
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatReportReason.ChatReportReason
instance GHC.Show.Show API.ChatReportReason.ChatReportReason
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatReportReason.ChatReportReason
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatReportReason.ChatReportReason

module API.ChatPosition

-- | Describes a position of a chat in a chat list
--   
--   <b>list</b> The chat list
--   
--   <b>order</b> A parameter used to determine order of the chat in the
--   chat list. Chats must be sorted by the pair (order, chat.id) in
--   descending order
--   
--   <b>is_pinned</b> True, if the chat is pinned in the chat list
--   
--   <b>source</b> Source of the chat in the chat list; may be null
data ChatPosition
ChatPosition :: Maybe ChatSource -> Maybe Bool -> Maybe Int -> Maybe ChatList -> ChatPosition
[source] :: ChatPosition -> Maybe ChatSource
[is_pinned] :: ChatPosition -> Maybe Bool
[order] :: ChatPosition -> Maybe Int
[list] :: ChatPosition -> Maybe ChatList
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatPosition.ChatPosition
instance GHC.Show.Show API.ChatPosition.ChatPosition
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatPosition.ChatPosition
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatPosition.ChatPosition

module API.ChatSource

-- | Describes a reason why an external chat is shown in a chat list
data ChatSource

-- | The chat is sponsored by the user's MTProxy server
ChatSourceMtprotoProxy :: ChatSource

-- | The chat contains a public service announcement
--   
--   <b>type</b> The type of the announcement
--   
--   <b>text</b> The text of the announcement
ChatSourcePublicServiceAnnouncement :: Maybe String -> Maybe String -> ChatSource
[text] :: ChatSource -> Maybe String
[_type] :: ChatSource -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatSource.ChatSource
instance GHC.Show.Show API.ChatSource.ChatSource
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatSource.ChatSource
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatSource.ChatSource

module API.ChatStatisticsAdministratorActionsInfo

-- | Contains statistics about administrator actions done by a user
--   
--   <b>user_id</b> Administrator user identifier
--   
--   <b>deleted_message_count</b> Number of messages deleted by the
--   administrator
--   
--   <b>banned_user_count</b> Number of users banned by the administrator
--   
--   <b>restricted_user_count</b> Number of users restricted by the
--   administrator
data ChatStatisticsAdministratorActionsInfo
ChatStatisticsAdministratorActionsInfo :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> ChatStatisticsAdministratorActionsInfo
[restricted_user_count] :: ChatStatisticsAdministratorActionsInfo -> Maybe Int
[banned_user_count] :: ChatStatisticsAdministratorActionsInfo -> Maybe Int
[deleted_message_count] :: ChatStatisticsAdministratorActionsInfo -> Maybe Int
[user_id] :: ChatStatisticsAdministratorActionsInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatStatisticsAdministratorActionsInfo.ChatStatisticsAdministratorActionsInfo
instance GHC.Show.Show API.ChatStatisticsAdministratorActionsInfo.ChatStatisticsAdministratorActionsInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatStatisticsAdministratorActionsInfo.ChatStatisticsAdministratorActionsInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatStatisticsAdministratorActionsInfo.ChatStatisticsAdministratorActionsInfo

module API.ChatStatisticsInviterInfo

-- | Contains statistics about number of new members invited by a user
--   
--   <b>user_id</b> User identifier
--   
--   <b>added_member_count</b> Number of new members invited by the user
data ChatStatisticsInviterInfo
ChatStatisticsInviterInfo :: Maybe Int -> Maybe Int -> ChatStatisticsInviterInfo
[added_member_count] :: ChatStatisticsInviterInfo -> Maybe Int
[user_id] :: ChatStatisticsInviterInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatStatisticsInviterInfo.ChatStatisticsInviterInfo
instance GHC.Show.Show API.ChatStatisticsInviterInfo.ChatStatisticsInviterInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatStatisticsInviterInfo.ChatStatisticsInviterInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatStatisticsInviterInfo.ChatStatisticsInviterInfo

module API.ChatStatisticsMessageInteractionInfo

-- | Contains statistics about interactions with a message
--   
--   <b>message_id</b> Message identifier
--   
--   <b>view_count</b> Number of times the message was viewed
--   
--   <b>forward_count</b> Number of times the message was forwarded
data ChatStatisticsMessageInteractionInfo
ChatStatisticsMessageInteractionInfo :: Maybe Int -> Maybe Int -> Maybe Int -> ChatStatisticsMessageInteractionInfo
[forward_count] :: ChatStatisticsMessageInteractionInfo -> Maybe Int
[view_count] :: ChatStatisticsMessageInteractionInfo -> Maybe Int
[message_id] :: ChatStatisticsMessageInteractionInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatStatisticsMessageInteractionInfo.ChatStatisticsMessageInteractionInfo
instance GHC.Show.Show API.ChatStatisticsMessageInteractionInfo.ChatStatisticsMessageInteractionInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatStatisticsMessageInteractionInfo.ChatStatisticsMessageInteractionInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatStatisticsMessageInteractionInfo.ChatStatisticsMessageInteractionInfo

module API.ChatStatisticsMessageSenderInfo

-- | Contains statistics about messages sent by a user
--   
--   <b>user_id</b> User identifier
--   
--   <b>sent_message_count</b> Number of sent messages
--   
--   <b>average_character_count</b> Average number of characters in sent
--   messages; 0 if unknown
data ChatStatisticsMessageSenderInfo
ChatStatisticsMessageSenderInfo :: Maybe Int -> Maybe Int -> Maybe Int -> ChatStatisticsMessageSenderInfo
[average_character_count] :: ChatStatisticsMessageSenderInfo -> Maybe Int
[sent_message_count] :: ChatStatisticsMessageSenderInfo -> Maybe Int
[user_id] :: ChatStatisticsMessageSenderInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatStatisticsMessageSenderInfo.ChatStatisticsMessageSenderInfo
instance GHC.Show.Show API.ChatStatisticsMessageSenderInfo.ChatStatisticsMessageSenderInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatStatisticsMessageSenderInfo.ChatStatisticsMessageSenderInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatStatisticsMessageSenderInfo.ChatStatisticsMessageSenderInfo

module API.ChatInviteLinkInfo

-- | Contains information about a chat invite link
--   
--   <b>chat_id</b> Chat identifier of the invite link; 0 if the user has
--   no access to the chat before joining
--   
--   <b>accessible_for</b> If non-zero, the amount of time for which read
--   access to the chat will remain available, in seconds
--   
--   <b>type</b> Contains information about the type of the chat
--   
--   <b>title</b> Title of the chat
--   
--   <b>photo</b> Chat photo; may be null
--   
--   <b>member_count</b> Number of members in the chat
--   
--   <b>member_user_ids</b> User identifiers of some chat members that may
--   be known to the current user
--   
--   <b>is_public</b> True, if the chat is a public supergroup or channel,
--   i.e. it has a username or it is a location-based supergroup
data ChatInviteLinkInfo
ChatInviteLinkInfo :: Maybe Bool -> Maybe [Int] -> Maybe Int -> Maybe ChatPhotoInfo -> Maybe String -> Maybe ChatType -> Maybe Int -> Maybe Int -> ChatInviteLinkInfo
[is_public] :: ChatInviteLinkInfo -> Maybe Bool
[member_user_ids] :: ChatInviteLinkInfo -> Maybe [Int]
[member_count] :: ChatInviteLinkInfo -> Maybe Int
[photo] :: ChatInviteLinkInfo -> Maybe ChatPhotoInfo
[title] :: ChatInviteLinkInfo -> Maybe String
[_type] :: ChatInviteLinkInfo -> Maybe ChatType
[accessible_for] :: ChatInviteLinkInfo -> Maybe Int
[chat_id] :: ChatInviteLinkInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatInviteLinkInfo.ChatInviteLinkInfo
instance GHC.Show.Show API.ChatInviteLinkInfo.ChatInviteLinkInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatInviteLinkInfo.ChatInviteLinkInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatInviteLinkInfo.ChatInviteLinkInfo

module API.ChatType

-- | Describes the type of a chat
data ChatType

-- | An ordinary chat with a user
--   
--   <b>user_id</b> User identifier
ChatTypePrivate :: Maybe Int -> ChatType
[user_id] :: ChatType -> Maybe Int

-- | A basic group (a chat with 0-200 other users)
--   
--   <b>basic_group_id</b> Basic group identifier
ChatTypeBasicGroup :: Maybe Int -> ChatType
[basic_group_id] :: ChatType -> Maybe Int

-- | A supergroup or channel (with unlimited members)
--   
--   <b>supergroup_id</b> Supergroup or channel identifier
--   
--   <b>is_channel</b> True, if the supergroup is a channel
ChatTypeSupergroup :: Maybe Bool -> Maybe Int -> ChatType
[is_channel] :: ChatType -> Maybe Bool
[supergroup_id] :: ChatType -> Maybe Int

-- | A secret chat with a user
--   
--   <b>secret_chat_id</b> Secret chat identifier
--   
--   <b>user_id</b> User identifier of the secret chat peer
ChatTypeSecret :: Maybe Int -> Maybe Int -> ChatType
[user_id] :: ChatType -> Maybe Int
[secret_chat_id] :: ChatType -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatType.ChatType
instance GHC.Show.Show API.ChatType.ChatType
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatType.ChatType
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatType.ChatType

module API.Chats

-- | Represents a list of chats
--   
--   <b>total_count</b> Approximate total count of chats found
--   
--   <b>chat_ids</b> List of chat identifiers
data Chats
Chats :: Maybe [Int] -> Maybe Int -> Chats
[chat_ids] :: Chats -> Maybe [Int]
[total_count] :: Chats -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Chats.Chats
instance GHC.Show.Show API.Chats.Chats
instance Data.Aeson.Types.ToJSON.ToJSON API.Chats.Chats
instance Data.Aeson.Types.FromJSON.FromJSON API.Chats.Chats

module API.ChatsNearby

-- | Represents a list of chats located nearby
--   
--   <b>users_nearby</b> List of users nearby
--   
--   <b>supergroups_nearby</b> List of location-based supergroups nearby
data ChatsNearby
ChatsNearby :: Maybe [ChatNearby] -> Maybe [ChatNearby] -> ChatsNearby
[supergroups_nearby] :: ChatsNearby -> Maybe [ChatNearby]
[users_nearby] :: ChatsNearby -> Maybe [ChatNearby]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatsNearby.ChatsNearby
instance GHC.Show.Show API.ChatsNearby.ChatsNearby
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatsNearby.ChatsNearby
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatsNearby.ChatsNearby

module API.CheckChatUsernameResult

-- | Represents result of checking whether a username can be set for a chat
data CheckChatUsernameResult

-- | The username can be set
CheckChatUsernameResultOk :: CheckChatUsernameResult

-- | The username is invalid
CheckChatUsernameResultUsernameInvalid :: CheckChatUsernameResult

-- | The username is occupied
CheckChatUsernameResultUsernameOccupied :: CheckChatUsernameResult

-- | The user has too much chats with username, one of them must be made
--   private first
CheckChatUsernameResultPublicChatsTooMuch :: CheckChatUsernameResult

-- | The user can't be a member of a public supergroup
CheckChatUsernameResultPublicGroupsUnavailable :: CheckChatUsernameResult
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CheckChatUsernameResult.CheckChatUsernameResult
instance GHC.Show.Show API.CheckChatUsernameResult.CheckChatUsernameResult
instance Data.Aeson.Types.ToJSON.ToJSON API.CheckChatUsernameResult.CheckChatUsernameResult
instance Data.Aeson.Types.FromJSON.FromJSON API.CheckChatUsernameResult.CheckChatUsernameResult

module API.CheckStickerSetNameResult

-- | Represents result of checking whether a name can be used for a new
--   sticker set
data CheckStickerSetNameResult

-- | The name can be set
CheckStickerSetNameResultOk :: CheckStickerSetNameResult

-- | The name is invalid
CheckStickerSetNameResultNameInvalid :: CheckStickerSetNameResult

-- | The name is occupied
CheckStickerSetNameResultNameOccupied :: CheckStickerSetNameResult
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CheckStickerSetNameResult.CheckStickerSetNameResult
instance GHC.Show.Show API.CheckStickerSetNameResult.CheckStickerSetNameResult
instance Data.Aeson.Types.ToJSON.ToJSON API.CheckStickerSetNameResult.CheckStickerSetNameResult
instance Data.Aeson.Types.FromJSON.FromJSON API.CheckStickerSetNameResult.CheckStickerSetNameResult

module API.ConnectedWebsite

-- | Contains information about one website the current user is logged in
--   with Telegram
--   
--   <b>id</b> Website identifier
--   
--   <b>domain_name</b> The domain name of the website
--   
--   <b>bot_user_id</b> User identifier of a bot linked with the website
--   
--   <b>browser</b> The version of a browser used to log in
--   
--   <b>platform</b> Operating system the browser is running on
--   
--   <b>log_in_date</b> Point in time (Unix timestamp) when the user was
--   logged in
--   
--   <b>last_active_date</b> Point in time (Unix timestamp) when obtained
--   authorization was last used
--   
--   <b>ip</b> IP address from which the user was logged in, in
--   human-readable format
--   
--   <b>location</b> Human-readable description of a country and a region,
--   from which the user was logged in, based on the IP address
data ConnectedWebsite
ConnectedWebsite :: Maybe String -> Maybe String -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> Maybe Int -> Maybe String -> Maybe Int -> ConnectedWebsite
[location] :: ConnectedWebsite -> Maybe String
[ip] :: ConnectedWebsite -> Maybe String
[last_active_date] :: ConnectedWebsite -> Maybe Int
[log_in_date] :: ConnectedWebsite -> Maybe Int
[platform] :: ConnectedWebsite -> Maybe String
[browser] :: ConnectedWebsite -> Maybe String
[bot_user_id] :: ConnectedWebsite -> Maybe Int
[domain_name] :: ConnectedWebsite -> Maybe String
[_id] :: ConnectedWebsite -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ConnectedWebsite.ConnectedWebsite
instance GHC.Show.Show API.ConnectedWebsite.ConnectedWebsite
instance Data.Aeson.Types.ToJSON.ToJSON API.ConnectedWebsite.ConnectedWebsite
instance Data.Aeson.Types.FromJSON.FromJSON API.ConnectedWebsite.ConnectedWebsite

module API.ConnectedWebsites

-- | Contains a list of websites the current user is logged in with
--   Telegram
--   
--   <b>websites</b> List of connected websites
data ConnectedWebsites
ConnectedWebsites :: Maybe [ConnectedWebsite] -> ConnectedWebsites
[websites] :: ConnectedWebsites -> Maybe [ConnectedWebsite]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ConnectedWebsites.ConnectedWebsites
instance GHC.Show.Show API.ConnectedWebsites.ConnectedWebsites
instance Data.Aeson.Types.ToJSON.ToJSON API.ConnectedWebsites.ConnectedWebsites
instance Data.Aeson.Types.FromJSON.FromJSON API.ConnectedWebsites.ConnectedWebsites

module API.ConnectionState

-- | Describes the current state of the connection to Telegram servers
data ConnectionState

-- | Currently waiting for the network to become available. Use
--   setNetworkType to change the available network type
ConnectionStateWaitingForNetwork :: ConnectionState

-- | Currently establishing a connection with a proxy server
ConnectionStateConnectingToProxy :: ConnectionState

-- | Currently establishing a connection to the Telegram servers
ConnectionStateConnecting :: ConnectionState

-- | Downloading data received while the application was offline
ConnectionStateUpdating :: ConnectionState

-- | There is a working connection to the Telegram servers
ConnectionStateReady :: ConnectionState
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ConnectionState.ConnectionState
instance GHC.Show.Show API.ConnectionState.ConnectionState
instance Data.Aeson.Types.ToJSON.ToJSON API.ConnectionState.ConnectionState
instance Data.Aeson.Types.FromJSON.FromJSON API.ConnectionState.ConnectionState

module API.Contact

-- | Describes a user contact
--   
--   <b>phone_number</b> Phone number of the user
--   
--   <b>first_name</b> First name of the user; 1-255 characters in length
--   
--   <b>last_name</b> Last name of the user
--   
--   <b>vcard</b> Additional data about the user in a form of vCard; 0-2048
--   bytes in length
--   
--   <b>user_id</b> Identifier of the user, if known; otherwise 0
data Contact
Contact :: Maybe Int -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Contact
[user_id] :: Contact -> Maybe Int
[vcard] :: Contact -> Maybe String
[last_name] :: Contact -> Maybe String
[first_name] :: Contact -> Maybe String
[phone_number] :: Contact -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Contact.Contact
instance GHC.Show.Show API.Contact.Contact
instance Data.Aeson.Types.ToJSON.ToJSON API.Contact.Contact
instance Data.Aeson.Types.FromJSON.FromJSON API.Contact.Contact

module API.Count

-- | Contains a counter
--   
--   <b>count</b> Count
data Count
Count :: Maybe Int -> Count
[count] :: Count -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Count.Count
instance GHC.Show.Show API.Count.Count
instance Data.Aeson.Types.ToJSON.ToJSON API.Count.Count
instance Data.Aeson.Types.FromJSON.FromJSON API.Count.Count

module API.Countries

-- | Contains information about countries
--   
--   <b>countries</b> The list of countries
data Countries
Countries :: Maybe [CountryInfo] -> Countries
[countries] :: Countries -> Maybe [CountryInfo]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Countries.Countries
instance GHC.Show.Show API.Countries.Countries
instance Data.Aeson.Types.ToJSON.ToJSON API.Countries.Countries
instance Data.Aeson.Types.FromJSON.FromJSON API.Countries.Countries

module API.CountryInfo

-- | Contains information about a country
--   
--   <b>country_code</b> A two-letter ISO 3166-1 alpha-2 country code
--   
--   <b>name</b> Native name of the country
--   
--   <b>english_name</b> English name of the country
--   
--   <b>is_hidden</b> True, if the country must be hidden from the list of
--   all countries
--   
--   <b>calling_codes</b> List of country calling codes
data CountryInfo
CountryInfo :: Maybe [String] -> Maybe Bool -> Maybe String -> Maybe String -> Maybe String -> CountryInfo
[calling_codes] :: CountryInfo -> Maybe [String]
[is_hidden] :: CountryInfo -> Maybe Bool
[english_name] :: CountryInfo -> Maybe String
[name] :: CountryInfo -> Maybe String
[country_code] :: CountryInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CountryInfo.CountryInfo
instance GHC.Show.Show API.CountryInfo.CountryInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.CountryInfo.CountryInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.CountryInfo.CountryInfo

module API.CustomRequestResult

-- | Contains the result of a custom request
--   
--   <b>result</b> A JSON-serialized result
data CustomRequestResult
CustomRequestResult :: Maybe String -> CustomRequestResult
[result] :: CustomRequestResult -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CustomRequestResult.CustomRequestResult
instance GHC.Show.Show API.CustomRequestResult.CustomRequestResult
instance Data.Aeson.Types.ToJSON.ToJSON API.CustomRequestResult.CustomRequestResult
instance Data.Aeson.Types.FromJSON.FromJSON API.CustomRequestResult.CustomRequestResult

module API.DatabaseStatistics

-- | Contains database statistics
--   
--   <b>statistics</b> Database statistics in an unspecified human-readable
--   format
data DatabaseStatistics
DatabaseStatistics :: Maybe String -> DatabaseStatistics
[statistics] :: DatabaseStatistics -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.DatabaseStatistics.DatabaseStatistics
instance GHC.Show.Show API.DatabaseStatistics.DatabaseStatistics
instance Data.Aeson.Types.ToJSON.ToJSON API.DatabaseStatistics.DatabaseStatistics
instance Data.Aeson.Types.FromJSON.FromJSON API.DatabaseStatistics.DatabaseStatistics

module API.Date

-- | Represents a date according to the Gregorian calendar
--   
--   <b>day</b> Day of the month; 1-31
--   
--   <b>month</b> Month; 1-12
--   
--   <b>year</b> Year; 1-9999
data Date
Date :: Maybe Int -> Maybe Int -> Maybe Int -> Date
[year] :: Date -> Maybe Int
[month] :: Date -> Maybe Int
[day] :: Date -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Date.Date
instance GHC.Show.Show API.Date.Date
instance Data.Aeson.Types.ToJSON.ToJSON API.Date.Date
instance Data.Aeson.Types.FromJSON.FromJSON API.Date.Date

module API.DateRange

-- | Represents a date range
--   
--   <b>start_date</b> Point in time (Unix timestamp) at which the date
--   range begins
--   
--   <b>end_date</b> Point in time (Unix timestamp) at which the date range
--   ends
data DateRange
DateRange :: Maybe Int -> Maybe Int -> DateRange
[end_date] :: DateRange -> Maybe Int
[start_date] :: DateRange -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.DateRange.DateRange
instance GHC.Show.Show API.DateRange.DateRange
instance Data.Aeson.Types.ToJSON.ToJSON API.DateRange.DateRange
instance Data.Aeson.Types.FromJSON.FromJSON API.DateRange.DateRange

module API.DeviceToken

-- | Represents a data needed to subscribe for push notifications through
--   registerDevice method. To use specific push notification service, the
--   correct application platform must be specified and a valid server
--   authentication data must be uploaded at <a>https://my.telegram.org</a>
data DeviceToken

-- | A token for Firebase Cloud Messaging
--   
--   <b>token</b> Device registration token; may be empty to de-register a
--   device
--   
--   <b>encrypt</b> True, if push notifications must be additionally
--   encrypted
DeviceTokenFirebaseCloudMessaging :: Maybe Bool -> Maybe String -> DeviceToken
[encrypt] :: DeviceToken -> Maybe Bool
[token] :: DeviceToken -> Maybe String

-- | A token for Apple Push Notification service
--   
--   <b>device_token</b> Device token; may be empty to de-register a device
--   
--   <b>is_app_sandbox</b> True, if App Sandbox is enabled
DeviceTokenApplePush :: Maybe Bool -> Maybe String -> DeviceToken
[is_app_sandbox] :: DeviceToken -> Maybe Bool
[device_token] :: DeviceToken -> Maybe String

-- | A token for Apple Push Notification service VoIP notifications
--   
--   <b>device_token</b> Device token; may be empty to de-register a device
--   
--   <b>is_app_sandbox</b> True, if App Sandbox is enabled
--   
--   <b>encrypt</b> True, if push notifications must be additionally
--   encrypted
DeviceTokenApplePushVoIP :: Maybe Bool -> Maybe Bool -> Maybe String -> DeviceToken
[encrypt] :: DeviceToken -> Maybe Bool
[is_app_sandbox] :: DeviceToken -> Maybe Bool
[device_token] :: DeviceToken -> Maybe String

-- | A token for Windows Push Notification Services
--   
--   <b>access_token</b> The access token that will be used to send
--   notifications; may be empty to de-register a device
DeviceTokenWindowsPush :: Maybe String -> DeviceToken
[access_token] :: DeviceToken -> Maybe String

-- | A token for Microsoft Push Notification Service
--   
--   <b>channel_uri</b> Push notification channel URI; may be empty to
--   de-register a device
DeviceTokenMicrosoftPush :: Maybe String -> DeviceToken
[channel_uri] :: DeviceToken -> Maybe String

-- | A token for Microsoft Push Notification Service VoIP channel
--   
--   <b>channel_uri</b> Push notification channel URI; may be empty to
--   de-register a device
DeviceTokenMicrosoftPushVoIP :: Maybe String -> DeviceToken
[channel_uri] :: DeviceToken -> Maybe String

-- | A token for web Push API
--   
--   <b>endpoint</b> Absolute URL exposed by the push service where the
--   application server can send push messages; may be empty to de-register
--   a device
--   
--   <b>p256dh_base64url</b> Base64url-encoded P-256 elliptic curve
--   Diffie-Hellman public key
--   
--   <b>auth_base64url</b> Base64url-encoded authentication secret
DeviceTokenWebPush :: Maybe String -> Maybe String -> Maybe String -> DeviceToken
[auth_base64url] :: DeviceToken -> Maybe String
[p256dh_base64url] :: DeviceToken -> Maybe String
[endpoint] :: DeviceToken -> Maybe String

-- | A token for Simple Push API for Firefox OS
--   
--   <b>endpoint</b> Absolute URL exposed by the push service where the
--   application server can send push messages; may be empty to de-register
--   a device
DeviceTokenSimplePush :: Maybe String -> DeviceToken
[endpoint] :: DeviceToken -> Maybe String

-- | A token for Ubuntu Push Client service
--   
--   <b>token</b> Token; may be empty to de-register a device
DeviceTokenUbuntuPush :: Maybe String -> DeviceToken
[token] :: DeviceToken -> Maybe String

-- | A token for BlackBerry Push Service
--   
--   <b>token</b> Token; may be empty to de-register a device
DeviceTokenBlackBerryPush :: Maybe String -> DeviceToken
[token] :: DeviceToken -> Maybe String

-- | A token for Tizen Push Service
--   
--   <b>reg_id</b> Push service registration identifier; may be empty to
--   de-register a device
DeviceTokenTizenPush :: Maybe String -> DeviceToken
[reg_id] :: DeviceToken -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.DeviceToken.DeviceToken
instance GHC.Show.Show API.DeviceToken.DeviceToken
instance Data.Aeson.Types.ToJSON.ToJSON API.DeviceToken.DeviceToken
instance Data.Aeson.Types.FromJSON.FromJSON API.DeviceToken.DeviceToken

module API.Background

-- | Describes a chat background
--   
--   <b>id</b> Unique background identifier
--   
--   <b>is_default</b> True, if this is one of default backgrounds
--   
--   <b>is_dark</b> True, if the background is dark and is recommended to
--   be used with dark theme
--   
--   <b>name</b> Unique background name
--   
--   <b>document</b> Document with the background; may be null. Null only
--   for filled backgrounds
--   
--   <b>type</b> Type of the background
data Background
Background :: Maybe BackgroundType -> Maybe Document -> Maybe String -> Maybe Bool -> Maybe Bool -> Maybe Int -> Background
[_type] :: Background -> Maybe BackgroundType
[document] :: Background -> Maybe Document
[name] :: Background -> Maybe String
[is_dark] :: Background -> Maybe Bool
[is_default] :: Background -> Maybe Bool
[_id] :: Background -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Background.Background
instance GHC.Show.Show API.Background.Background
instance Data.Aeson.Types.ToJSON.ToJSON API.Background.Background
instance Data.Aeson.Types.FromJSON.FromJSON API.Background.Background

module API.EmailAddressAuthenticationCodeInfo

-- | Information about the email address authentication code that was sent
--   
--   <b>email_address_pattern</b> Pattern of the email address to which an
--   authentication code was sent
--   
--   <b>length</b> Length of the code; 0 if unknown
data EmailAddressAuthenticationCodeInfo
EmailAddressAuthenticationCodeInfo :: Maybe Int -> Maybe String -> EmailAddressAuthenticationCodeInfo
[_length] :: EmailAddressAuthenticationCodeInfo -> Maybe Int
[email_address_pattern] :: EmailAddressAuthenticationCodeInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.EmailAddressAuthenticationCodeInfo.EmailAddressAuthenticationCodeInfo
instance GHC.Show.Show API.EmailAddressAuthenticationCodeInfo.EmailAddressAuthenticationCodeInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.EmailAddressAuthenticationCodeInfo.EmailAddressAuthenticationCodeInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.EmailAddressAuthenticationCodeInfo.EmailAddressAuthenticationCodeInfo

module API.Emojis

-- | Represents a list of emoji
--   
--   <b>emojis</b> List of emojis
data Emojis
Emojis :: Maybe [String] -> Emojis
[emojis] :: Emojis -> Maybe [String]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Emojis.Emojis
instance GHC.Show.Show API.Emojis.Emojis
instance Data.Aeson.Types.ToJSON.ToJSON API.Emojis.Emojis
instance Data.Aeson.Types.FromJSON.FromJSON API.Emojis.Emojis

module API.EncryptedCredentials

-- | Contains encrypted Telegram Passport data credentials
--   
--   <b>data</b> The encrypted credentials
--   
--   <b>hash</b> The decrypted data hash
--   
--   <b>secret</b> Secret for data decryption, encrypted with the service's
--   public key
data EncryptedCredentials
EncryptedCredentials :: Maybe String -> Maybe String -> Maybe String -> EncryptedCredentials
[secret] :: EncryptedCredentials -> Maybe String
[hash] :: EncryptedCredentials -> Maybe String
[_data] :: EncryptedCredentials -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.EncryptedCredentials.EncryptedCredentials
instance GHC.Show.Show API.EncryptedCredentials.EncryptedCredentials
instance Data.Aeson.Types.ToJSON.ToJSON API.EncryptedCredentials.EncryptedCredentials
instance Data.Aeson.Types.FromJSON.FromJSON API.EncryptedCredentials.EncryptedCredentials

module API.CallState

-- | Describes the current call state
data CallState

-- | The call is pending, waiting to be accepted by a user
--   
--   <b>is_created</b> True, if the call has already been created by the
--   server
--   
--   <b>is_received</b> True, if the call has already been received by the
--   other party
CallStatePending :: Maybe Bool -> Maybe Bool -> CallState
[is_received] :: CallState -> Maybe Bool
[is_created] :: CallState -> Maybe Bool

-- | The call has been answered and encryption keys are being exchanged
CallStateExchangingKeys :: CallState

-- | The call is ready to use
--   
--   <b>protocol</b> Call protocols supported by the peer
--   
--   <b>servers</b> List of available call servers
--   
--   <b>config</b> A JSON-encoded call config
--   
--   <b>encryption_key</b> Call encryption key
--   
--   <b>emojis</b> Encryption key emojis fingerprint
--   
--   <b>allow_p2p</b> True, if peer-to-peer connection is allowed by users
--   privacy settings
CallStateReady :: Maybe Bool -> Maybe [String] -> Maybe String -> Maybe String -> Maybe [CallServer] -> Maybe CallProtocol -> CallState
[allow_p2p] :: CallState -> Maybe Bool
[emojis] :: CallState -> Maybe [String]
[encryption_key] :: CallState -> Maybe String
[config] :: CallState -> Maybe String
[servers] :: CallState -> Maybe [CallServer]
[protocol] :: CallState -> Maybe CallProtocol

-- | The call is hanging up after discardCall has been called
CallStateHangingUp :: CallState

-- | The call has ended successfully
--   
--   <b>reason</b> The reason, why the call has ended
--   
--   <b>need_rating</b> True, if the call rating must be sent to the server
--   
--   <b>need_debug_information</b> True, if the call debug information must
--   be sent to the server
CallStateDiscarded :: Maybe Bool -> Maybe Bool -> Maybe CallDiscardReason -> CallState
[need_debug_information] :: CallState -> Maybe Bool
[need_rating] :: CallState -> Maybe Bool
[reason] :: CallState -> Maybe CallDiscardReason

-- | The call has ended with an error
--   
--   <b>error</b> Error. An error with the code 4005000 will be returned if
--   an outgoing call is missed because of an expired timeout
CallStateError :: Maybe Error -> CallState
[_error] :: CallState -> Maybe Error
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.CallState.CallState
instance GHC.Show.Show API.CallState.CallState
instance Data.Aeson.Types.ToJSON.ToJSON API.CallState.CallState
instance Data.Aeson.Types.FromJSON.FromJSON API.CallState.CallState

module API.Error

-- | An object of this type can be returned on every function call, in case
--   of an error
--   
--   <b>code</b> Error code; subject to future changes. If the error code
--   is 406, the error message must not be processed in any way and must
--   not be displayed to the user
--   
--   <b>message</b> Error message; subject to future changes
data Error
Error :: Maybe String -> Maybe Int -> Error
[message] :: Error -> Maybe String
[code] :: Error -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Error.Error
instance GHC.Show.Show API.Error.Error
instance Data.Aeson.Types.ToJSON.ToJSON API.Error.Error
instance Data.Aeson.Types.FromJSON.FromJSON API.Error.Error

module API.DatedFile

-- | File with the date it was uploaded
--   
--   <b>file</b> The file
--   
--   <b>date</b> Point in time (Unix timestamp) when the file was uploaded
data DatedFile
DatedFile :: Maybe Int -> Maybe File -> DatedFile
[date] :: DatedFile -> Maybe Int
[file] :: DatedFile -> Maybe File
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.DatedFile.DatedFile
instance GHC.Show.Show API.DatedFile.DatedFile
instance Data.Aeson.Types.ToJSON.ToJSON API.DatedFile.DatedFile
instance Data.Aeson.Types.FromJSON.FromJSON API.DatedFile.DatedFile

module API.AnimatedChatPhoto

-- | Animated variant of a chat photo in MPEG4 format
--   
--   <b>length</b> Animation width and height
--   
--   <b>file</b> Information about the animation file
--   
--   <b>main_frame_timestamp</b> Timestamp of the frame, used as a static
--   chat photo
data AnimatedChatPhoto
AnimatedChatPhoto :: Maybe Float -> Maybe File -> Maybe Int -> AnimatedChatPhoto
[main_frame_timestamp] :: AnimatedChatPhoto -> Maybe Float
[file] :: AnimatedChatPhoto -> Maybe File
[_length] :: AnimatedChatPhoto -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.AnimatedChatPhoto.AnimatedChatPhoto
instance GHC.Show.Show API.AnimatedChatPhoto.AnimatedChatPhoto
instance Data.Aeson.Types.ToJSON.ToJSON API.AnimatedChatPhoto.AnimatedChatPhoto
instance Data.Aeson.Types.FromJSON.FromJSON API.AnimatedChatPhoto.AnimatedChatPhoto

module API.FilePart

-- | Contains a part of a file
--   
--   <b>data</b> File bytes
data FilePart
FilePart :: Maybe String -> FilePart
[_data] :: FilePart -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.FilePart.FilePart
instance GHC.Show.Show API.FilePart.FilePart
instance Data.Aeson.Types.ToJSON.ToJSON API.FilePart.FilePart
instance Data.Aeson.Types.FromJSON.FromJSON API.FilePart.FilePart

module API.FileType

-- | Represents the type of a file
data FileType

-- | The data is not a file
FileTypeNone :: FileType

-- | The file is an animation
FileTypeAnimation :: FileType

-- | The file is an audio file
FileTypeAudio :: FileType

-- | The file is a document
FileTypeDocument :: FileType

-- | The file is a photo
FileTypePhoto :: FileType

-- | The file is a profile photo
FileTypeProfilePhoto :: FileType

-- | The file was sent to a secret chat (the file type is not known to the
--   server)
FileTypeSecret :: FileType

-- | The file is a thumbnail of a file from a secret chat
FileTypeSecretThumbnail :: FileType

-- | The file is a file from Secure storage used for storing Telegram
--   Passport files
FileTypeSecure :: FileType

-- | The file is a sticker
FileTypeSticker :: FileType

-- | The file is a thumbnail of another file
FileTypeThumbnail :: FileType

-- | The file type is not yet known
FileTypeUnknown :: FileType

-- | The file is a video
FileTypeVideo :: FileType

-- | The file is a video note
FileTypeVideoNote :: FileType

-- | The file is a voice note
FileTypeVoiceNote :: FileType

-- | The file is a wallpaper or a background pattern
FileTypeWallpaper :: FileType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.FileType.FileType
instance GHC.Show.Show API.FileType.FileType
instance Data.Aeson.Types.ToJSON.ToJSON API.FileType.FileType
instance Data.Aeson.Types.FromJSON.FromJSON API.FileType.FileType

module API.DeepLinkInfo

-- | Contains information about a tg: deep link
--   
--   <b>text</b> Text to be shown to the user
--   
--   <b>need_update_application</b> True, if the user must be asked to
--   update the application
data DeepLinkInfo
DeepLinkInfo :: Maybe Bool -> Maybe FormattedText -> DeepLinkInfo
[need_update_application] :: DeepLinkInfo -> Maybe Bool
[text] :: DeepLinkInfo -> Maybe FormattedText
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.DeepLinkInfo.DeepLinkInfo
instance GHC.Show.Show API.DeepLinkInfo.DeepLinkInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.DeepLinkInfo.DeepLinkInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.DeepLinkInfo.DeepLinkInfo

module API.Functions.AcceptCall

-- | Accepts an incoming call
--   
--   <b>call_id</b> Call identifier
--   
--   <b>protocol</b> Description of the call protocols supported by the
--   application
data AcceptCall
AcceptCall :: Maybe CallProtocol -> Maybe Int -> AcceptCall
[protocol] :: AcceptCall -> Maybe CallProtocol
[call_id] :: AcceptCall -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AcceptCall.AcceptCall
instance GHC.Show.Show API.Functions.AcceptCall.AcceptCall
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AcceptCall.AcceptCall
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AcceptCall.AcceptCall

module API.Functions.AcceptTermsOfService

-- | Accepts Telegram terms of services
--   
--   <b>terms_of_service_id</b> Terms of service identifier
data AcceptTermsOfService
AcceptTermsOfService :: Maybe String -> AcceptTermsOfService
[terms_of_service_id] :: AcceptTermsOfService -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AcceptTermsOfService.AcceptTermsOfService
instance GHC.Show.Show API.Functions.AcceptTermsOfService.AcceptTermsOfService
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AcceptTermsOfService.AcceptTermsOfService
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AcceptTermsOfService.AcceptTermsOfService

module API.Functions.AddChatMember

-- | Adds a new member to a chat. Members can't be added to private or
--   secret chats
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>user_id</b> Identifier of the user
--   
--   <b>forward_limit</b> The number of earlier messages from the chat to
--   be forwarded to the new member; up to 100. Ignored for supergroups and
--   channels, or if the added user is a bot
data AddChatMember
AddChatMember :: Maybe Int -> Maybe Int -> Maybe Int -> AddChatMember
[forward_limit] :: AddChatMember -> Maybe Int
[user_id] :: AddChatMember -> Maybe Int
[chat_id] :: AddChatMember -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddChatMember.AddChatMember
instance GHC.Show.Show API.Functions.AddChatMember.AddChatMember
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddChatMember.AddChatMember
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddChatMember.AddChatMember

module API.Functions.AddChatMembers

-- | Adds multiple new members to a chat. Currently this method is only
--   available for supergroups and channels. This method can't be used to
--   join a chat. Members can't be added to a channel if it has more than
--   200 members
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>user_ids</b> Identifiers of the users to be added to the chat. The
--   maximum number of added users is 20 for supergroups and 100 for
--   channels
data AddChatMembers
AddChatMembers :: Maybe [Int] -> Maybe Int -> AddChatMembers
[user_ids] :: AddChatMembers -> Maybe [Int]
[chat_id] :: AddChatMembers -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddChatMembers.AddChatMembers
instance GHC.Show.Show API.Functions.AddChatMembers.AddChatMembers
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddChatMembers.AddChatMembers
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddChatMembers.AddChatMembers

module API.Functions.AddChatToList

-- | Adds a chat to a chat list. A chat can't be simultaneously in Main and
--   Archive chat lists, so it is automatically removed from another one if
--   needed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>chat_list</b> The chat list. Use getChatListsToAddChat to get
--   suitable chat lists
data AddChatToList
AddChatToList :: Maybe ChatList -> Maybe Int -> AddChatToList
[chat_list] :: AddChatToList -> Maybe ChatList
[chat_id] :: AddChatToList -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddChatToList.AddChatToList
instance GHC.Show.Show API.Functions.AddChatToList.AddChatToList
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddChatToList.AddChatToList
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddChatToList.AddChatToList

module API.Functions.AddContact

-- | Adds a user to the contact list or edits an existing contact by their
--   user identifier
--   
--   <b>contact</b> The contact to add or edit; phone number can be empty
--   and needs to be specified only if known, vCard is ignored
--   
--   <b>share_phone_number</b> True, if the new contact needs to be allowed
--   to see current user's phone number. A corresponding rule to
--   userPrivacySettingShowPhoneNumber will be added if needed. Use the
--   field userFullInfo.need_phone_number_privacy_exception to check
--   whether the current user needs to be asked to share their phone number
data AddContact
AddContact :: Maybe Bool -> Maybe Contact -> AddContact
[share_phone_number] :: AddContact -> Maybe Bool
[contact] :: AddContact -> Maybe Contact
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddContact.AddContact
instance GHC.Show.Show API.Functions.AddContact.AddContact
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddContact.AddContact
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddContact.AddContact

module API.Functions.AddCustomServerLanguagePack

-- | Adds a custom server language pack to the list of installed language
--   packs in current localization target. Can be called before
--   authorization
--   
--   <b>language_pack_id</b> Identifier of a language pack to be added; may
--   be different from a name that is used in an
--   "<a>https://t.me/setlanguage/"</a> link
data AddCustomServerLanguagePack
AddCustomServerLanguagePack :: Maybe String -> AddCustomServerLanguagePack
[language_pack_id] :: AddCustomServerLanguagePack -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddCustomServerLanguagePack.AddCustomServerLanguagePack
instance GHC.Show.Show API.Functions.AddCustomServerLanguagePack.AddCustomServerLanguagePack
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddCustomServerLanguagePack.AddCustomServerLanguagePack
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddCustomServerLanguagePack.AddCustomServerLanguagePack

module API.Functions.AddLogMessage

-- | Adds a message to TDLib internal log. Can be called synchronously
--   
--   <b>verbosity_level</b> The minimum verbosity level needed for the
--   message to be logged; 0-1023
--   
--   <b>text</b> Text of a message to log
data AddLogMessage
AddLogMessage :: Maybe String -> Maybe Int -> AddLogMessage
[text] :: AddLogMessage -> Maybe String
[verbosity_level] :: AddLogMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddLogMessage.AddLogMessage
instance GHC.Show.Show API.Functions.AddLogMessage.AddLogMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddLogMessage.AddLogMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddLogMessage.AddLogMessage

module API.Functions.AddRecentlyFoundChat

-- | Adds a chat to the list of recently found chats. The chat is added to
--   the beginning of the list. If the chat is already in the list, it will
--   be removed from the list first
--   
--   <b>chat_id</b> Identifier of the chat to add
data AddRecentlyFoundChat
AddRecentlyFoundChat :: Maybe Int -> AddRecentlyFoundChat
[chat_id] :: AddRecentlyFoundChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddRecentlyFoundChat.AddRecentlyFoundChat
instance GHC.Show.Show API.Functions.AddRecentlyFoundChat.AddRecentlyFoundChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddRecentlyFoundChat.AddRecentlyFoundChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddRecentlyFoundChat.AddRecentlyFoundChat

module API.Functions.AnswerCallbackQuery

-- | Sets the result of a callback query; for bots only
--   
--   <b>callback_query_id</b> Identifier of the callback query
--   
--   <b>text</b> Text of the answer
--   
--   <b>show_alert</b> If true, an alert must be shown to the user instead
--   of a toast notification
--   
--   <b>url</b> URL to be opened
--   
--   <b>cache_time</b> Time during which the result of the query can be
--   cached, in seconds
data AnswerCallbackQuery
AnswerCallbackQuery :: Maybe Int -> Maybe String -> Maybe Bool -> Maybe String -> Maybe Int -> AnswerCallbackQuery
[cache_time] :: AnswerCallbackQuery -> Maybe Int
[url] :: AnswerCallbackQuery -> Maybe String
[show_alert] :: AnswerCallbackQuery -> Maybe Bool
[text] :: AnswerCallbackQuery -> Maybe String
[callback_query_id] :: AnswerCallbackQuery -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AnswerCallbackQuery.AnswerCallbackQuery
instance GHC.Show.Show API.Functions.AnswerCallbackQuery.AnswerCallbackQuery
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AnswerCallbackQuery.AnswerCallbackQuery
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AnswerCallbackQuery.AnswerCallbackQuery

module API.Functions.AnswerCustomQuery

-- | Answers a custom query; for bots only
--   
--   <b>custom_query_id</b> Identifier of a custom query
--   
--   <b>data</b> JSON-serialized answer to the query
data AnswerCustomQuery
AnswerCustomQuery :: Maybe String -> Maybe Int -> AnswerCustomQuery
[_data] :: AnswerCustomQuery -> Maybe String
[custom_query_id] :: AnswerCustomQuery -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AnswerCustomQuery.AnswerCustomQuery
instance GHC.Show.Show API.Functions.AnswerCustomQuery.AnswerCustomQuery
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AnswerCustomQuery.AnswerCustomQuery
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AnswerCustomQuery.AnswerCustomQuery

module API.Functions.AnswerPreCheckoutQuery

-- | Sets the result of a pre-checkout query; for bots only
--   
--   <b>pre_checkout_query_id</b> Identifier of the pre-checkout query
--   
--   <b>error_message</b> An error message, empty on success
data AnswerPreCheckoutQuery
AnswerPreCheckoutQuery :: Maybe String -> Maybe Int -> AnswerPreCheckoutQuery
[error_message] :: AnswerPreCheckoutQuery -> Maybe String
[pre_checkout_query_id] :: AnswerPreCheckoutQuery -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AnswerPreCheckoutQuery.AnswerPreCheckoutQuery
instance GHC.Show.Show API.Functions.AnswerPreCheckoutQuery.AnswerPreCheckoutQuery
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AnswerPreCheckoutQuery.AnswerPreCheckoutQuery
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AnswerPreCheckoutQuery.AnswerPreCheckoutQuery

module API.Functions.BlockMessageSenderFromReplies

-- | Blocks an original sender of a message in the Replies chat
--   
--   <b>message_id</b> The identifier of an incoming message in the Replies
--   chat
--   
--   <b>delete_message</b> Pass true if the message must be deleted
--   
--   <b>delete_all_messages</b> Pass true if all messages from the same
--   sender must be deleted
--   
--   <b>report_spam</b> Pass true if the sender must be reported to the
--   Telegram moderators
data BlockMessageSenderFromReplies
BlockMessageSenderFromReplies :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Int -> BlockMessageSenderFromReplies
[report_spam] :: BlockMessageSenderFromReplies -> Maybe Bool
[delete_all_messages] :: BlockMessageSenderFromReplies -> Maybe Bool
[delete_message] :: BlockMessageSenderFromReplies -> Maybe Bool
[message_id] :: BlockMessageSenderFromReplies -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.BlockMessageSenderFromReplies.BlockMessageSenderFromReplies
instance GHC.Show.Show API.Functions.BlockMessageSenderFromReplies.BlockMessageSenderFromReplies
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.BlockMessageSenderFromReplies.BlockMessageSenderFromReplies
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.BlockMessageSenderFromReplies.BlockMessageSenderFromReplies

module API.Functions.CanTransferOwnership

-- | Checks whether the current session can be used to transfer a chat
--   ownership to another user
data CanTransferOwnership
CanTransferOwnership :: CanTransferOwnership
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CanTransferOwnership.CanTransferOwnership
instance GHC.Show.Show API.Functions.CanTransferOwnership.CanTransferOwnership
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CanTransferOwnership.CanTransferOwnership
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CanTransferOwnership.CanTransferOwnership

module API.Functions.CancelDownloadFile

-- | Stops the downloading of a file. If a file has already been
--   downloaded, does nothing
--   
--   <b>file_id</b> Identifier of a file to stop downloading
--   
--   <b>only_if_pending</b> Pass true to stop downloading only if it hasn't
--   been started, i.e. request hasn't been sent to server
data CancelDownloadFile
CancelDownloadFile :: Maybe Bool -> Maybe Int -> CancelDownloadFile
[only_if_pending] :: CancelDownloadFile -> Maybe Bool
[file_id] :: CancelDownloadFile -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CancelDownloadFile.CancelDownloadFile
instance GHC.Show.Show API.Functions.CancelDownloadFile.CancelDownloadFile
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CancelDownloadFile.CancelDownloadFile
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CancelDownloadFile.CancelDownloadFile

module API.Functions.CancelPasswordReset

-- | Cancels reset of 2-step verification password. The method can be
--   called if passwordState.pending_reset_date &gt; 0
data CancelPasswordReset
CancelPasswordReset :: CancelPasswordReset
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CancelPasswordReset.CancelPasswordReset
instance GHC.Show.Show API.Functions.CancelPasswordReset.CancelPasswordReset
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CancelPasswordReset.CancelPasswordReset
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CancelPasswordReset.CancelPasswordReset

module API.Functions.CancelUploadFile

-- | Stops the uploading of a file. Supported only for files uploaded by
--   using uploadFile. For other files the behavior is undefined
--   
--   <b>file_id</b> Identifier of the file to stop uploading
data CancelUploadFile
CancelUploadFile :: Maybe Int -> CancelUploadFile
[file_id] :: CancelUploadFile -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CancelUploadFile.CancelUploadFile
instance GHC.Show.Show API.Functions.CancelUploadFile.CancelUploadFile
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CancelUploadFile.CancelUploadFile
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CancelUploadFile.CancelUploadFile

module API.Functions.ChangeImportedContacts

-- | Changes imported contacts using the list of contacts saved on the
--   device. Imports newly added contacts and, if at least the file
--   database is enabled, deletes recently deleted contacts.
--   
--   <ul>
--   <li>Query result depends on the result of the previous query, so only
--   one query is possible at the same time</li>
--   </ul>
--   
--   <b>contacts</b> The new list of contacts, contact's vCard are ignored
--   and are not imported
data ChangeImportedContacts
ChangeImportedContacts :: Maybe [Contact] -> ChangeImportedContacts
[contacts] :: ChangeImportedContacts -> Maybe [Contact]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ChangeImportedContacts.ChangeImportedContacts
instance GHC.Show.Show API.Functions.ChangeImportedContacts.ChangeImportedContacts
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ChangeImportedContacts.ChangeImportedContacts
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ChangeImportedContacts.ChangeImportedContacts

module API.Functions.ChangeStickerSet

-- | Installs<i>uninstalls or activates</i>archives a sticker set
--   
--   <b>set_id</b> Identifier of the sticker set
--   
--   <b>is_installed</b> The new value of is_installed
--   
--   <b>is_archived</b> The new value of is_archived. A sticker set can't
--   be installed and archived simultaneously
data ChangeStickerSet
ChangeStickerSet :: Maybe Bool -> Maybe Bool -> Maybe Int -> ChangeStickerSet
[is_archived] :: ChangeStickerSet -> Maybe Bool
[is_installed] :: ChangeStickerSet -> Maybe Bool
[set_id] :: ChangeStickerSet -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ChangeStickerSet.ChangeStickerSet
instance GHC.Show.Show API.Functions.ChangeStickerSet.ChangeStickerSet
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ChangeStickerSet.ChangeStickerSet
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ChangeStickerSet.ChangeStickerSet

module API.Functions.CheckAuthenticationBotToken

-- | Checks the authentication token of a bot; to log in as a bot. Works
--   only when the current authorization state is
--   authorizationStateWaitPhoneNumber. Can be used instead of
--   setAuthenticationPhoneNumber and checkAuthenticationCode to log in
--   
--   <b>token</b> The bot token
data CheckAuthenticationBotToken
CheckAuthenticationBotToken :: Maybe String -> CheckAuthenticationBotToken
[token] :: CheckAuthenticationBotToken -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckAuthenticationBotToken.CheckAuthenticationBotToken
instance GHC.Show.Show API.Functions.CheckAuthenticationBotToken.CheckAuthenticationBotToken
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckAuthenticationBotToken.CheckAuthenticationBotToken
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckAuthenticationBotToken.CheckAuthenticationBotToken

module API.Functions.CheckAuthenticationCode

-- | Checks the authentication code. Works only when the current
--   authorization state is authorizationStateWaitCode
--   
--   <b>code</b> The verification code received via SMS, Telegram message,
--   phone call, or flash call
data CheckAuthenticationCode
CheckAuthenticationCode :: Maybe String -> CheckAuthenticationCode
[code] :: CheckAuthenticationCode -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckAuthenticationCode.CheckAuthenticationCode
instance GHC.Show.Show API.Functions.CheckAuthenticationCode.CheckAuthenticationCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckAuthenticationCode.CheckAuthenticationCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckAuthenticationCode.CheckAuthenticationCode

module API.Functions.CheckAuthenticationPassword

-- | Checks the authentication password for correctness. Works only when
--   the current authorization state is authorizationStateWaitPassword
--   
--   <b>password</b> The password to check
data CheckAuthenticationPassword
CheckAuthenticationPassword :: Maybe String -> CheckAuthenticationPassword
[password] :: CheckAuthenticationPassword -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckAuthenticationPassword.CheckAuthenticationPassword
instance GHC.Show.Show API.Functions.CheckAuthenticationPassword.CheckAuthenticationPassword
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckAuthenticationPassword.CheckAuthenticationPassword
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckAuthenticationPassword.CheckAuthenticationPassword

module API.Functions.CheckAuthenticationPasswordRecoveryCode

-- | Checks whether a password recovery code sent to an email address is
--   valid. Works only when the current authorization state is
--   authorizationStateWaitPassword
--   
--   <b>recovery_code</b> Recovery code to check
data CheckAuthenticationPasswordRecoveryCode
CheckAuthenticationPasswordRecoveryCode :: Maybe String -> CheckAuthenticationPasswordRecoveryCode
[recovery_code] :: CheckAuthenticationPasswordRecoveryCode -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckAuthenticationPasswordRecoveryCode.CheckAuthenticationPasswordRecoveryCode
instance GHC.Show.Show API.Functions.CheckAuthenticationPasswordRecoveryCode.CheckAuthenticationPasswordRecoveryCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckAuthenticationPasswordRecoveryCode.CheckAuthenticationPasswordRecoveryCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckAuthenticationPasswordRecoveryCode.CheckAuthenticationPasswordRecoveryCode

module API.Functions.CheckChangePhoneNumberCode

-- | Checks the authentication code sent to confirm a new phone number of
--   the user
--   
--   <b>code</b> Verification code received by SMS, phone call or flash
--   call
data CheckChangePhoneNumberCode
CheckChangePhoneNumberCode :: Maybe String -> CheckChangePhoneNumberCode
[code] :: CheckChangePhoneNumberCode -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckChangePhoneNumberCode.CheckChangePhoneNumberCode
instance GHC.Show.Show API.Functions.CheckChangePhoneNumberCode.CheckChangePhoneNumberCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckChangePhoneNumberCode.CheckChangePhoneNumberCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckChangePhoneNumberCode.CheckChangePhoneNumberCode

module API.Functions.CheckChatInviteLink

-- | Checks the validity of an invite link for a chat and returns
--   information about the corresponding chat
--   
--   <b>invite_link</b> Invite link to be checked
data CheckChatInviteLink
CheckChatInviteLink :: Maybe String -> CheckChatInviteLink
[invite_link] :: CheckChatInviteLink -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckChatInviteLink.CheckChatInviteLink
instance GHC.Show.Show API.Functions.CheckChatInviteLink.CheckChatInviteLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckChatInviteLink.CheckChatInviteLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckChatInviteLink.CheckChatInviteLink

module API.Functions.CheckChatUsername

-- | Checks whether a username can be set for a chat
--   
--   <b>chat_id</b> Chat identifier; must be identifier of a supergroup
--   chat, or a channel chat, or a private chat with self, or zero if the
--   chat is being created
--   
--   <b>username</b> Username to be checked
data CheckChatUsername
CheckChatUsername :: Maybe String -> Maybe Int -> CheckChatUsername
[username] :: CheckChatUsername -> Maybe String
[chat_id] :: CheckChatUsername -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckChatUsername.CheckChatUsername
instance GHC.Show.Show API.Functions.CheckChatUsername.CheckChatUsername
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckChatUsername.CheckChatUsername
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckChatUsername.CheckChatUsername

module API.Functions.CheckDatabaseEncryptionKey

-- | Checks the database encryption key for correctness. Works only when
--   the current authorization state is authorizationStateWaitEncryptionKey
--   
--   <b>encryption_key</b> Encryption key to check or set up
data CheckDatabaseEncryptionKey
CheckDatabaseEncryptionKey :: Maybe String -> CheckDatabaseEncryptionKey
[encryption_key] :: CheckDatabaseEncryptionKey -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckDatabaseEncryptionKey.CheckDatabaseEncryptionKey
instance GHC.Show.Show API.Functions.CheckDatabaseEncryptionKey.CheckDatabaseEncryptionKey
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckDatabaseEncryptionKey.CheckDatabaseEncryptionKey
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckDatabaseEncryptionKey.CheckDatabaseEncryptionKey

module API.Functions.CheckEmailAddressVerificationCode

-- | Checks the email address verification code for Telegram Passport
--   
--   <b>code</b> Verification code
data CheckEmailAddressVerificationCode
CheckEmailAddressVerificationCode :: Maybe String -> CheckEmailAddressVerificationCode
[code] :: CheckEmailAddressVerificationCode -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckEmailAddressVerificationCode.CheckEmailAddressVerificationCode
instance GHC.Show.Show API.Functions.CheckEmailAddressVerificationCode.CheckEmailAddressVerificationCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckEmailAddressVerificationCode.CheckEmailAddressVerificationCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckEmailAddressVerificationCode.CheckEmailAddressVerificationCode

module API.Functions.CheckPasswordRecoveryCode

-- | Checks whether a 2-step verification password recovery code sent to an
--   email address is valid
--   
--   <b>recovery_code</b> Recovery code to check
data CheckPasswordRecoveryCode
CheckPasswordRecoveryCode :: Maybe String -> CheckPasswordRecoveryCode
[recovery_code] :: CheckPasswordRecoveryCode -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckPasswordRecoveryCode.CheckPasswordRecoveryCode
instance GHC.Show.Show API.Functions.CheckPasswordRecoveryCode.CheckPasswordRecoveryCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckPasswordRecoveryCode.CheckPasswordRecoveryCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckPasswordRecoveryCode.CheckPasswordRecoveryCode

module API.Functions.CheckPhoneNumberConfirmationCode

-- | Checks phone number confirmation code
--   
--   <b>code</b> The phone number confirmation code
data CheckPhoneNumberConfirmationCode
CheckPhoneNumberConfirmationCode :: Maybe String -> CheckPhoneNumberConfirmationCode
[code] :: CheckPhoneNumberConfirmationCode -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckPhoneNumberConfirmationCode.CheckPhoneNumberConfirmationCode
instance GHC.Show.Show API.Functions.CheckPhoneNumberConfirmationCode.CheckPhoneNumberConfirmationCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckPhoneNumberConfirmationCode.CheckPhoneNumberConfirmationCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckPhoneNumberConfirmationCode.CheckPhoneNumberConfirmationCode

module API.Functions.CheckPhoneNumberVerificationCode

-- | Checks the phone number verification code for Telegram Passport
--   
--   <b>code</b> Verification code
data CheckPhoneNumberVerificationCode
CheckPhoneNumberVerificationCode :: Maybe String -> CheckPhoneNumberVerificationCode
[code] :: CheckPhoneNumberVerificationCode -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckPhoneNumberVerificationCode.CheckPhoneNumberVerificationCode
instance GHC.Show.Show API.Functions.CheckPhoneNumberVerificationCode.CheckPhoneNumberVerificationCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckPhoneNumberVerificationCode.CheckPhoneNumberVerificationCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckPhoneNumberVerificationCode.CheckPhoneNumberVerificationCode

module API.Functions.CheckRecoveryEmailAddressCode

-- | Checks the 2-step verification recovery email address verification
--   code
--   
--   <b>code</b> Verification code
data CheckRecoveryEmailAddressCode
CheckRecoveryEmailAddressCode :: Maybe String -> CheckRecoveryEmailAddressCode
[code] :: CheckRecoveryEmailAddressCode -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckRecoveryEmailAddressCode.CheckRecoveryEmailAddressCode
instance GHC.Show.Show API.Functions.CheckRecoveryEmailAddressCode.CheckRecoveryEmailAddressCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckRecoveryEmailAddressCode.CheckRecoveryEmailAddressCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckRecoveryEmailAddressCode.CheckRecoveryEmailAddressCode

module API.Functions.CheckStickerSetName

-- | Checks whether a name can be used for a new sticker set
--   
--   <b>name</b> Name to be checked
data CheckStickerSetName
CheckStickerSetName :: Maybe String -> CheckStickerSetName
[name] :: CheckStickerSetName -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckStickerSetName.CheckStickerSetName
instance GHC.Show.Show API.Functions.CheckStickerSetName.CheckStickerSetName
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckStickerSetName.CheckStickerSetName
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckStickerSetName.CheckStickerSetName

module API.Functions.CleanFileName

-- | Removes potentially dangerous characters from the name of a file. The
--   encoding of the file name is supposed to be UTF-8. Returns an empty
--   string on failure. Can be called synchronously
--   
--   <b>file_name</b> File name or path to the file
data CleanFileName
CleanFileName :: Maybe String -> CleanFileName
[file_name] :: CleanFileName -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CleanFileName.CleanFileName
instance GHC.Show.Show API.Functions.CleanFileName.CleanFileName
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CleanFileName.CleanFileName
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CleanFileName.CleanFileName

module API.Functions.ClearAllDraftMessages

-- | Clears draft messages in all chats
--   
--   <b>exclude_secret_chats</b> If true, local draft messages in secret
--   chats will not be cleared
data ClearAllDraftMessages
ClearAllDraftMessages :: Maybe Bool -> ClearAllDraftMessages
[exclude_secret_chats] :: ClearAllDraftMessages -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ClearAllDraftMessages.ClearAllDraftMessages
instance GHC.Show.Show API.Functions.ClearAllDraftMessages.ClearAllDraftMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ClearAllDraftMessages.ClearAllDraftMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ClearAllDraftMessages.ClearAllDraftMessages

module API.Functions.ClearImportedContacts

-- | Clears all imported contacts, contact list remains unchanged
data ClearImportedContacts
ClearImportedContacts :: ClearImportedContacts
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ClearImportedContacts.ClearImportedContacts
instance GHC.Show.Show API.Functions.ClearImportedContacts.ClearImportedContacts
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ClearImportedContacts.ClearImportedContacts
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ClearImportedContacts.ClearImportedContacts

module API.Functions.ClearRecentStickers

-- | Clears the list of recently used stickers
--   
--   <b>is_attached</b> Pass true to clear the list of stickers recently
--   attached to photo or video files; pass false to clear the list of
--   recently sent stickers
data ClearRecentStickers
ClearRecentStickers :: Maybe Bool -> ClearRecentStickers
[is_attached] :: ClearRecentStickers -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ClearRecentStickers.ClearRecentStickers
instance GHC.Show.Show API.Functions.ClearRecentStickers.ClearRecentStickers
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ClearRecentStickers.ClearRecentStickers
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ClearRecentStickers.ClearRecentStickers

module API.Functions.ClearRecentlyFoundChats

-- | Clears the list of recently found chats
data ClearRecentlyFoundChats
ClearRecentlyFoundChats :: ClearRecentlyFoundChats
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ClearRecentlyFoundChats.ClearRecentlyFoundChats
instance GHC.Show.Show API.Functions.ClearRecentlyFoundChats.ClearRecentlyFoundChats
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ClearRecentlyFoundChats.ClearRecentlyFoundChats
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ClearRecentlyFoundChats.ClearRecentlyFoundChats

module API.Functions.ClickAnimatedEmojiMessage

-- | Informs TDLib that a message with an animated emoji was clicked by the
--   user. Returns a big animated sticker to be played or a 404 error if
--   usual animation needs to be played
--   
--   <b>chat_id</b> Chat identifier of the message
--   
--   <b>message_id</b> Identifier of the clicked message
data ClickAnimatedEmojiMessage
ClickAnimatedEmojiMessage :: Maybe Int -> Maybe Int -> ClickAnimatedEmojiMessage
[message_id] :: ClickAnimatedEmojiMessage -> Maybe Int
[chat_id] :: ClickAnimatedEmojiMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ClickAnimatedEmojiMessage.ClickAnimatedEmojiMessage
instance GHC.Show.Show API.Functions.ClickAnimatedEmojiMessage.ClickAnimatedEmojiMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ClickAnimatedEmojiMessage.ClickAnimatedEmojiMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ClickAnimatedEmojiMessage.ClickAnimatedEmojiMessage

module API.Functions.Close

-- | Closes the TDLib instance. All databases will be flushed to disk and
--   properly closed. After the close completes, updateAuthorizationState
--   with authorizationStateClosed will be sent. Can be called before
--   initialization
data Close
Close :: Close
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.Close.Close
instance GHC.Show.Show API.Functions.Close.Close
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.Close.Close
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.Close.Close

module API.Functions.CloseChat

-- | Informs TDLib that the chat is closed by the user. Many useful
--   activities depend on the chat being opened or closed
--   
--   <b>chat_id</b> Chat identifier
data CloseChat
CloseChat :: Maybe Int -> CloseChat
[chat_id] :: CloseChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CloseChat.CloseChat
instance GHC.Show.Show API.Functions.CloseChat.CloseChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CloseChat.CloseChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CloseChat.CloseChat

module API.Functions.CloseSecretChat

-- | Closes a secret chat, effectively transferring its state to
--   secretChatStateClosed
--   
--   <b>secret_chat_id</b> Secret chat identifier
data CloseSecretChat
CloseSecretChat :: Maybe Int -> CloseSecretChat
[secret_chat_id] :: CloseSecretChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CloseSecretChat.CloseSecretChat
instance GHC.Show.Show API.Functions.CloseSecretChat.CloseSecretChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CloseSecretChat.CloseSecretChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CloseSecretChat.CloseSecretChat

module API.Functions.ConfirmQrCodeAuthentication

-- | Confirms QR code authentication on another device. Returns created
--   session on success
--   
--   <b>link</b> A link from a QR code. The link must be scanned by the
--   in-app camera
data ConfirmQrCodeAuthentication
ConfirmQrCodeAuthentication :: Maybe String -> ConfirmQrCodeAuthentication
[link] :: ConfirmQrCodeAuthentication -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ConfirmQrCodeAuthentication.ConfirmQrCodeAuthentication
instance GHC.Show.Show API.Functions.ConfirmQrCodeAuthentication.ConfirmQrCodeAuthentication
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ConfirmQrCodeAuthentication.ConfirmQrCodeAuthentication
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ConfirmQrCodeAuthentication.ConfirmQrCodeAuthentication

module API.Functions.CreateBasicGroupChat

-- | Returns an existing chat corresponding to a known basic group
--   
--   <b>basic_group_id</b> Basic group identifier
--   
--   <b>force</b> If true, the chat will be created without network
--   request. In this case all information about the chat except its type,
--   title and photo can be incorrect
data CreateBasicGroupChat
CreateBasicGroupChat :: Maybe Bool -> Maybe Int -> CreateBasicGroupChat
[force] :: CreateBasicGroupChat -> Maybe Bool
[basic_group_id] :: CreateBasicGroupChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CreateBasicGroupChat.CreateBasicGroupChat
instance GHC.Show.Show API.Functions.CreateBasicGroupChat.CreateBasicGroupChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CreateBasicGroupChat.CreateBasicGroupChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CreateBasicGroupChat.CreateBasicGroupChat

module API.Functions.CreateCall

-- | Creates a new call
--   
--   <b>user_id</b> Identifier of the user to be called
--   
--   <b>protocol</b> Description of the call protocols supported by the
--   application
--   
--   <b>is_video</b> True, if a video call needs to be created
data CreateCall
CreateCall :: Maybe Bool -> Maybe CallProtocol -> Maybe Int -> CreateCall
[is_video] :: CreateCall -> Maybe Bool
[protocol] :: CreateCall -> Maybe CallProtocol
[user_id] :: CreateCall -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CreateCall.CreateCall
instance GHC.Show.Show API.Functions.CreateCall.CreateCall
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CreateCall.CreateCall
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CreateCall.CreateCall

module API.Functions.CreateChatFilter

-- | Creates new chat filter. Returns information about the created chat
--   filter
--   
--   <b>filter</b> Chat filter
data CreateChatFilter
CreateChatFilter :: Maybe ChatFilter -> CreateChatFilter
[_filter] :: CreateChatFilter -> Maybe ChatFilter
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CreateChatFilter.CreateChatFilter
instance GHC.Show.Show API.Functions.CreateChatFilter.CreateChatFilter
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CreateChatFilter.CreateChatFilter
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CreateChatFilter.CreateChatFilter

module API.Functions.CreateChatInviteLink

-- | Creates a new invite link for a chat. Available for basic groups,
--   supergroups, and channels. Requires administrator privileges and
--   can_invite_users right in the chat
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>expire_date</b> Point in time (Unix timestamp) when the link will
--   expire; pass 0 if never
--   
--   <b>member_limit</b> The maximum number of chat members that can join
--   the chat by the link simultaneously; 0-99999; pass 0 if not limited
data CreateChatInviteLink
CreateChatInviteLink :: Maybe Int -> Maybe Int -> Maybe Int -> CreateChatInviteLink
[member_limit] :: CreateChatInviteLink -> Maybe Int
[expire_date] :: CreateChatInviteLink -> Maybe Int
[chat_id] :: CreateChatInviteLink -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CreateChatInviteLink.CreateChatInviteLink
instance GHC.Show.Show API.Functions.CreateChatInviteLink.CreateChatInviteLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CreateChatInviteLink.CreateChatInviteLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CreateChatInviteLink.CreateChatInviteLink

module API.Functions.CreateNewBasicGroupChat

-- | Creates a new basic group and sends a corresponding
--   messageBasicGroupChatCreate. Returns the newly created chat
--   
--   <b>user_ids</b> Identifiers of users to be added to the basic group
--   
--   <b>title</b> Title of the new basic group; 1-128 characters
data CreateNewBasicGroupChat
CreateNewBasicGroupChat :: Maybe String -> Maybe [Int] -> CreateNewBasicGroupChat
[title] :: CreateNewBasicGroupChat -> Maybe String
[user_ids] :: CreateNewBasicGroupChat -> Maybe [Int]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CreateNewBasicGroupChat.CreateNewBasicGroupChat
instance GHC.Show.Show API.Functions.CreateNewBasicGroupChat.CreateNewBasicGroupChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CreateNewBasicGroupChat.CreateNewBasicGroupChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CreateNewBasicGroupChat.CreateNewBasicGroupChat

module API.Functions.CreateNewSecretChat

-- | Creates a new secret chat. Returns the newly created chat
--   
--   <b>user_id</b> Identifier of the target user
data CreateNewSecretChat
CreateNewSecretChat :: Maybe Int -> CreateNewSecretChat
[user_id] :: CreateNewSecretChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CreateNewSecretChat.CreateNewSecretChat
instance GHC.Show.Show API.Functions.CreateNewSecretChat.CreateNewSecretChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CreateNewSecretChat.CreateNewSecretChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CreateNewSecretChat.CreateNewSecretChat

module API.Functions.CreateNewSupergroupChat

-- | Creates a new supergroup or channel and sends a corresponding
--   messageSupergroupChatCreate. Returns the newly created chat
--   
--   <b>title</b> Title of the new chat; 1-128 characters
--   
--   <b>is_channel</b> True, if a channel chat needs to be created
--   
--   <b>param_description</b> Chat description; 0-255 characters
--   
--   <b>location</b> Chat location if a location-based supergroup is being
--   created; pass null to create an ordinary supergroup chat
--   
--   <b>for_import</b> True, if the supergroup is created for importing
--   messages using importMessage
data CreateNewSupergroupChat
CreateNewSupergroupChat :: Maybe Bool -> Maybe ChatLocation -> Maybe String -> Maybe Bool -> Maybe String -> CreateNewSupergroupChat
[for_import] :: CreateNewSupergroupChat -> Maybe Bool
[location] :: CreateNewSupergroupChat -> Maybe ChatLocation
[description] :: CreateNewSupergroupChat -> Maybe String
[is_channel] :: CreateNewSupergroupChat -> Maybe Bool
[title] :: CreateNewSupergroupChat -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CreateNewSupergroupChat.CreateNewSupergroupChat
instance GHC.Show.Show API.Functions.CreateNewSupergroupChat.CreateNewSupergroupChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CreateNewSupergroupChat.CreateNewSupergroupChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CreateNewSupergroupChat.CreateNewSupergroupChat

module API.Functions.CreatePrivateChat

-- | Returns an existing chat corresponding to a given user
--   
--   <b>user_id</b> User identifier
--   
--   <b>force</b> If true, the chat will be created without network
--   request. In this case all information about the chat except its type,
--   title and photo can be incorrect
data CreatePrivateChat
CreatePrivateChat :: Maybe Bool -> Maybe Int -> CreatePrivateChat
[force] :: CreatePrivateChat -> Maybe Bool
[user_id] :: CreatePrivateChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CreatePrivateChat.CreatePrivateChat
instance GHC.Show.Show API.Functions.CreatePrivateChat.CreatePrivateChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CreatePrivateChat.CreatePrivateChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CreatePrivateChat.CreatePrivateChat

module API.Functions.CreateSecretChat

-- | Returns an existing chat corresponding to a known secret chat
--   
--   <b>secret_chat_id</b> Secret chat identifier
data CreateSecretChat
CreateSecretChat :: Maybe Int -> CreateSecretChat
[secret_chat_id] :: CreateSecretChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CreateSecretChat.CreateSecretChat
instance GHC.Show.Show API.Functions.CreateSecretChat.CreateSecretChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CreateSecretChat.CreateSecretChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CreateSecretChat.CreateSecretChat

module API.Functions.CreateSupergroupChat

-- | Returns an existing chat corresponding to a known supergroup or
--   channel
--   
--   <b>supergroup_id</b> Supergroup or channel identifier
--   
--   <b>force</b> If true, the chat will be created without network
--   request. In this case all information about the chat except its type,
--   title and photo can be incorrect
data CreateSupergroupChat
CreateSupergroupChat :: Maybe Bool -> Maybe Int -> CreateSupergroupChat
[force] :: CreateSupergroupChat -> Maybe Bool
[supergroup_id] :: CreateSupergroupChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CreateSupergroupChat.CreateSupergroupChat
instance GHC.Show.Show API.Functions.CreateSupergroupChat.CreateSupergroupChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CreateSupergroupChat.CreateSupergroupChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CreateSupergroupChat.CreateSupergroupChat

module API.Functions.CreateTemporaryPassword

-- | Creates a new temporary password for processing payments
--   
--   <b>password</b> Persistent user password
--   
--   <b>valid_for</b> Time during which the temporary password will be
--   valid, in seconds; must be between 60 and 86400
data CreateTemporaryPassword
CreateTemporaryPassword :: Maybe Int -> Maybe String -> CreateTemporaryPassword
[valid_for] :: CreateTemporaryPassword -> Maybe Int
[password] :: CreateTemporaryPassword -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CreateTemporaryPassword.CreateTemporaryPassword
instance GHC.Show.Show API.Functions.CreateTemporaryPassword.CreateTemporaryPassword
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CreateTemporaryPassword.CreateTemporaryPassword
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CreateTemporaryPassword.CreateTemporaryPassword

module API.Functions.CreateVoiceChat

-- | Creates a voice chat (a group call bound to a chat). Available only
--   for basic groups, supergroups and channels; requires
--   can_manage_voice_chats rights
--   
--   <b>chat_id</b> Chat identifier, in which the voice chat will be
--   created
--   
--   <b>title</b> Group call title; if empty, chat title will be used
--   
--   <b>start_date</b> Point in time (Unix timestamp) when the group call
--   is supposed to be started by an administrator; 0 to start the voice
--   chat immediately. The date must be at least 10 seconds and at most 8
--   days in the future
data CreateVoiceChat
CreateVoiceChat :: Maybe Int -> Maybe String -> Maybe Int -> CreateVoiceChat
[start_date] :: CreateVoiceChat -> Maybe Int
[title] :: CreateVoiceChat -> Maybe String
[chat_id] :: CreateVoiceChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CreateVoiceChat.CreateVoiceChat
instance GHC.Show.Show API.Functions.CreateVoiceChat.CreateVoiceChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CreateVoiceChat.CreateVoiceChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CreateVoiceChat.CreateVoiceChat

module API.Functions.DeleteAccount

-- | Deletes the account of the current user, deleting all information
--   associated with the user from the server. The phone number of the
--   account can be used to create a new account. Can be called before
--   authorization when the current authorization state is
--   authorizationStateWaitPassword
--   
--   <b>reason</b> The reason why the account was deleted; optional
data DeleteAccount
DeleteAccount :: Maybe String -> DeleteAccount
[reason] :: DeleteAccount -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteAccount.DeleteAccount
instance GHC.Show.Show API.Functions.DeleteAccount.DeleteAccount
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteAccount.DeleteAccount
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteAccount.DeleteAccount

module API.Functions.DeleteAllCallMessages

-- | Deletes all call messages
--   
--   <b>revoke</b> Pass true to delete the messages for all users
data DeleteAllCallMessages
DeleteAllCallMessages :: Maybe Bool -> DeleteAllCallMessages
[revoke] :: DeleteAllCallMessages -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteAllCallMessages.DeleteAllCallMessages
instance GHC.Show.Show API.Functions.DeleteAllCallMessages.DeleteAllCallMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteAllCallMessages.DeleteAllCallMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteAllCallMessages.DeleteAllCallMessages

module API.Functions.DeleteAllRevokedChatInviteLinks

-- | Deletes all revoked chat invite links created by a given chat
--   administrator. Requires administrator privileges and can_invite_users
--   right in the chat for own links and owner privileges for other links
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>creator_user_id</b> User identifier of a chat administrator, which
--   links will be deleted. Must be an identifier of the current user for
--   non-owner
data DeleteAllRevokedChatInviteLinks
DeleteAllRevokedChatInviteLinks :: Maybe Int -> Maybe Int -> DeleteAllRevokedChatInviteLinks
[creator_user_id] :: DeleteAllRevokedChatInviteLinks -> Maybe Int
[chat_id] :: DeleteAllRevokedChatInviteLinks -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteAllRevokedChatInviteLinks.DeleteAllRevokedChatInviteLinks
instance GHC.Show.Show API.Functions.DeleteAllRevokedChatInviteLinks.DeleteAllRevokedChatInviteLinks
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteAllRevokedChatInviteLinks.DeleteAllRevokedChatInviteLinks
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteAllRevokedChatInviteLinks.DeleteAllRevokedChatInviteLinks

module API.Functions.DeleteChat

-- | Deletes a chat along with all messages in the corresponding chat for
--   all chat members; requires owner privileges. For group chats this will
--   release the username and remove all members. Chats with more than 1000
--   members can't be deleted using this method
--   
--   <b>chat_id</b> Chat identifier
data DeleteChat
DeleteChat :: Maybe Int -> DeleteChat
[chat_id] :: DeleteChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteChat.DeleteChat
instance GHC.Show.Show API.Functions.DeleteChat.DeleteChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteChat.DeleteChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteChat.DeleteChat

module API.Functions.DeleteChatFilter

-- | Deletes existing chat filter
--   
--   <b>chat_filter_id</b> Chat filter identifier
data DeleteChatFilter
DeleteChatFilter :: Maybe Int -> DeleteChatFilter
[chat_filter_id] :: DeleteChatFilter -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteChatFilter.DeleteChatFilter
instance GHC.Show.Show API.Functions.DeleteChatFilter.DeleteChatFilter
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteChatFilter.DeleteChatFilter
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteChatFilter.DeleteChatFilter

module API.Functions.DeleteChatHistory

-- | Deletes all messages in the chat. Use
--   chat.can_be_deleted_only_for_self and
--   chat.can_be_deleted_for_all_users fields to find whether and how the
--   method can be applied to the chat
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>remove_from_chat_list</b> Pass true if the chat needs to be removed
--   from the chat list
--   
--   <b>revoke</b> Pass true to try to delete chat history for all users
data DeleteChatHistory
DeleteChatHistory :: Maybe Bool -> Maybe Bool -> Maybe Int -> DeleteChatHistory
[revoke] :: DeleteChatHistory -> Maybe Bool
[remove_from_chat_list] :: DeleteChatHistory -> Maybe Bool
[chat_id] :: DeleteChatHistory -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteChatHistory.DeleteChatHistory
instance GHC.Show.Show API.Functions.DeleteChatHistory.DeleteChatHistory
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteChatHistory.DeleteChatHistory
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteChatHistory.DeleteChatHistory

module API.Functions.DeleteChatMessagesFromUser

-- | Deletes all messages sent by the specified user to a chat. Supported
--   only for supergroups; requires can_delete_messages administrator
--   privileges
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>user_id</b> User identifier
data DeleteChatMessagesFromUser
DeleteChatMessagesFromUser :: Maybe Int -> Maybe Int -> DeleteChatMessagesFromUser
[user_id] :: DeleteChatMessagesFromUser -> Maybe Int
[chat_id] :: DeleteChatMessagesFromUser -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteChatMessagesFromUser.DeleteChatMessagesFromUser
instance GHC.Show.Show API.Functions.DeleteChatMessagesFromUser.DeleteChatMessagesFromUser
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteChatMessagesFromUser.DeleteChatMessagesFromUser
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteChatMessagesFromUser.DeleteChatMessagesFromUser

module API.Functions.DeleteChatReplyMarkup

-- | Deletes the default reply markup from a chat. Must be called after a
--   one-time keyboard or a ForceReply reply markup has been used.
--   UpdateChatReplyMarkup will be sent if the reply markup is changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_id</b> The message identifier of the used keyboard
data DeleteChatReplyMarkup
DeleteChatReplyMarkup :: Maybe Int -> Maybe Int -> DeleteChatReplyMarkup
[message_id] :: DeleteChatReplyMarkup -> Maybe Int
[chat_id] :: DeleteChatReplyMarkup -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteChatReplyMarkup.DeleteChatReplyMarkup
instance GHC.Show.Show API.Functions.DeleteChatReplyMarkup.DeleteChatReplyMarkup
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteChatReplyMarkup.DeleteChatReplyMarkup
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteChatReplyMarkup.DeleteChatReplyMarkup

module API.Functions.DeleteCommands

-- | Deletes commands supported by the bot for the given user scope and
--   language; for bots only
--   
--   <b>scope</b> The scope to which the commands are relevant; pass null
--   to delete commands in the default bot command scope
--   
--   <b>language_code</b> A two-letter ISO 639-1 country code or an empty
--   string
data DeleteCommands
DeleteCommands :: Maybe String -> Maybe BotCommandScope -> DeleteCommands
[language_code] :: DeleteCommands -> Maybe String
[scope] :: DeleteCommands -> Maybe BotCommandScope
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteCommands.DeleteCommands
instance GHC.Show.Show API.Functions.DeleteCommands.DeleteCommands
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteCommands.DeleteCommands
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteCommands.DeleteCommands

module API.Functions.DeleteFile

-- | Deletes a file from the TDLib file cache
--   
--   <b>file_id</b> Identifier of the file to delete
data DeleteFile
DeleteFile :: Maybe Int -> DeleteFile
[file_id] :: DeleteFile -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteFile.DeleteFile
instance GHC.Show.Show API.Functions.DeleteFile.DeleteFile
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteFile.DeleteFile
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteFile.DeleteFile

module API.Functions.DeleteLanguagePack

-- | Deletes all information about a language pack in the current
--   localization target. The language pack which is currently in use
--   (including base language pack) or is being synchronized can't be
--   deleted. Can be called before authorization
--   
--   <b>language_pack_id</b> Identifier of the language pack to delete
data DeleteLanguagePack
DeleteLanguagePack :: Maybe String -> DeleteLanguagePack
[language_pack_id] :: DeleteLanguagePack -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteLanguagePack.DeleteLanguagePack
instance GHC.Show.Show API.Functions.DeleteLanguagePack.DeleteLanguagePack
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteLanguagePack.DeleteLanguagePack
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteLanguagePack.DeleteLanguagePack

module API.Functions.DeleteMessages

-- | Deletes messages
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_ids</b> Identifiers of the messages to be deleted
--   
--   <b>revoke</b> Pass true to try to delete messages for all chat
--   members. Always true for supergroups, channels and secret chats
data DeleteMessages
DeleteMessages :: Maybe Bool -> Maybe [Int] -> Maybe Int -> DeleteMessages
[revoke] :: DeleteMessages -> Maybe Bool
[message_ids] :: DeleteMessages -> Maybe [Int]
[chat_id] :: DeleteMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteMessages.DeleteMessages
instance GHC.Show.Show API.Functions.DeleteMessages.DeleteMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteMessages.DeleteMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteMessages.DeleteMessages

module API.Functions.DeleteProfilePhoto

-- | Deletes a profile photo
--   
--   <b>profile_photo_id</b> Identifier of the profile photo to delete
data DeleteProfilePhoto
DeleteProfilePhoto :: Maybe Int -> DeleteProfilePhoto
[profile_photo_id] :: DeleteProfilePhoto -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteProfilePhoto.DeleteProfilePhoto
instance GHC.Show.Show API.Functions.DeleteProfilePhoto.DeleteProfilePhoto
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteProfilePhoto.DeleteProfilePhoto
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteProfilePhoto.DeleteProfilePhoto

module API.Functions.DeleteRevokedChatInviteLink

-- | Deletes revoked chat invite links. Requires administrator privileges
--   and can_invite_users right in the chat for own links and owner
--   privileges for other links
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>invite_link</b> Invite link to revoke
data DeleteRevokedChatInviteLink
DeleteRevokedChatInviteLink :: Maybe String -> Maybe Int -> DeleteRevokedChatInviteLink
[invite_link] :: DeleteRevokedChatInviteLink -> Maybe String
[chat_id] :: DeleteRevokedChatInviteLink -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteRevokedChatInviteLink.DeleteRevokedChatInviteLink
instance GHC.Show.Show API.Functions.DeleteRevokedChatInviteLink.DeleteRevokedChatInviteLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteRevokedChatInviteLink.DeleteRevokedChatInviteLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteRevokedChatInviteLink.DeleteRevokedChatInviteLink

module API.Functions.DeleteSavedCredentials

-- | Deletes saved credentials for all payment provider bots
data DeleteSavedCredentials
DeleteSavedCredentials :: DeleteSavedCredentials
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteSavedCredentials.DeleteSavedCredentials
instance GHC.Show.Show API.Functions.DeleteSavedCredentials.DeleteSavedCredentials
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteSavedCredentials.DeleteSavedCredentials
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteSavedCredentials.DeleteSavedCredentials

module API.Functions.DeleteSavedOrderInfo

-- | Deletes saved order info
data DeleteSavedOrderInfo
DeleteSavedOrderInfo :: DeleteSavedOrderInfo
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeleteSavedOrderInfo.DeleteSavedOrderInfo
instance GHC.Show.Show API.Functions.DeleteSavedOrderInfo.DeleteSavedOrderInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeleteSavedOrderInfo.DeleteSavedOrderInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeleteSavedOrderInfo.DeleteSavedOrderInfo

module API.Functions.Destroy

-- | Closes the TDLib instance, destroying all local data without a proper
--   logout. The current user session will remain in the list of all active
--   sessions. All local data will be destroyed. After the destruction
--   completes updateAuthorizationState with authorizationStateClosed will
--   be sent. Can be called before authorization
data Destroy
Destroy :: Destroy
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.Destroy.Destroy
instance GHC.Show.Show API.Functions.Destroy.Destroy
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.Destroy.Destroy
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.Destroy.Destroy

module API.Functions.DisableProxy

-- | Disables the currently enabled proxy. Can be called before
--   authorization
data DisableProxy
DisableProxy :: DisableProxy
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DisableProxy.DisableProxy
instance GHC.Show.Show API.Functions.DisableProxy.DisableProxy
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DisableProxy.DisableProxy
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DisableProxy.DisableProxy

module API.Functions.DiscardCall

-- | Discards a call
--   
--   <b>call_id</b> Call identifier
--   
--   <b>is_disconnected</b> True, if the user was disconnected
--   
--   <b>duration</b> The call duration, in seconds
--   
--   <b>is_video</b> True, if the call was a video call
--   
--   <b>connection_id</b> Identifier of the connection used during the call
data DiscardCall
DiscardCall :: Maybe Int -> Maybe Bool -> Maybe Int -> Maybe Bool -> Maybe Int -> DiscardCall
[connection_id] :: DiscardCall -> Maybe Int
[is_video] :: DiscardCall -> Maybe Bool
[duration] :: DiscardCall -> Maybe Int
[is_disconnected] :: DiscardCall -> Maybe Bool
[call_id] :: DiscardCall -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DiscardCall.DiscardCall
instance GHC.Show.Show API.Functions.DiscardCall.DiscardCall
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DiscardCall.DiscardCall
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DiscardCall.DiscardCall

module API.Functions.DiscardGroupCall

-- | Discards a group call. Requires groupCall.can_be_managed
--   
--   <b>group_call_id</b> Group call identifier
data DiscardGroupCall
DiscardGroupCall :: Maybe Int -> DiscardGroupCall
[group_call_id] :: DiscardGroupCall -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DiscardGroupCall.DiscardGroupCall
instance GHC.Show.Show API.Functions.DiscardGroupCall.DiscardGroupCall
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DiscardGroupCall.DiscardGroupCall
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DiscardGroupCall.DiscardGroupCall

module API.Functions.DisconnectAllWebsites

-- | Disconnects all websites from the current user's Telegram account
data DisconnectAllWebsites
DisconnectAllWebsites :: DisconnectAllWebsites
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DisconnectAllWebsites.DisconnectAllWebsites
instance GHC.Show.Show API.Functions.DisconnectAllWebsites.DisconnectAllWebsites
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DisconnectAllWebsites.DisconnectAllWebsites
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DisconnectAllWebsites.DisconnectAllWebsites

module API.Functions.DisconnectWebsite

-- | Disconnects website from the current user's Telegram account
--   
--   <b>website_id</b> Website identifier
data DisconnectWebsite
DisconnectWebsite :: Maybe Int -> DisconnectWebsite
[website_id] :: DisconnectWebsite -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DisconnectWebsite.DisconnectWebsite
instance GHC.Show.Show API.Functions.DisconnectWebsite.DisconnectWebsite
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DisconnectWebsite.DisconnectWebsite
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DisconnectWebsite.DisconnectWebsite

module API.Functions.DownloadFile

-- | Downloads a file from the cloud. Download progress and completion of
--   the download will be notified through updateFile updates
--   
--   <b>file_id</b> Identifier of the file to download
--   
--   <b>priority</b> Priority of the download (1-32). The higher the
--   priority, the earlier the file will be downloaded. If the priorities
--   of two files are equal, then the last one for which downloadFile was
--   called will be downloaded first
--   
--   <b>offset</b> The starting position from which the file needs to be
--   downloaded
--   
--   <b>limit</b> Number of bytes which need to be downloaded starting from
--   the "offset" position before the download will be automatically
--   canceled; use 0 to download without a limit
--   
--   <b>synchronous</b> If false, this request returns file state just
--   after the download has been started. If true, this request returns
--   file state only after
--   
--   <ul>
--   <li>the download has succeeded, has failed, has been canceled or a new
--   downloadFile request with different offset/limit parameters was
--   sent</li>
--   </ul>
data DownloadFile
DownloadFile :: Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> DownloadFile
[synchronous] :: DownloadFile -> Maybe Bool
[limit] :: DownloadFile -> Maybe Int
[offset] :: DownloadFile -> Maybe Int
[priority] :: DownloadFile -> Maybe Int
[file_id] :: DownloadFile -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DownloadFile.DownloadFile
instance GHC.Show.Show API.Functions.DownloadFile.DownloadFile
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DownloadFile.DownloadFile
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DownloadFile.DownloadFile

module API.Functions.EditChatFilter

-- | Edits existing chat filter. Returns information about the edited chat
--   filter
--   
--   <b>chat_filter_id</b> Chat filter identifier
--   
--   <b>filter</b> The edited chat filter
data EditChatFilter
EditChatFilter :: Maybe ChatFilter -> Maybe Int -> EditChatFilter
[_filter] :: EditChatFilter -> Maybe ChatFilter
[chat_filter_id] :: EditChatFilter -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditChatFilter.EditChatFilter
instance GHC.Show.Show API.Functions.EditChatFilter.EditChatFilter
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditChatFilter.EditChatFilter
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditChatFilter.EditChatFilter

module API.Functions.EditChatInviteLink

-- | Edits a non-primary invite link for a chat. Available for basic
--   groups, supergroups, and channels. Requires administrator privileges
--   and can_invite_users right in the chat for own links and owner
--   privileges for other links
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>invite_link</b> Invite link to be edited
--   
--   <b>expire_date</b> Point in time (Unix timestamp) when the link will
--   expire; pass 0 if never
--   
--   <b>member_limit</b> The maximum number of chat members that can join
--   the chat by the link simultaneously; 0-99999; pass 0 if not limited
data EditChatInviteLink
EditChatInviteLink :: Maybe Int -> Maybe Int -> Maybe String -> Maybe Int -> EditChatInviteLink
[member_limit] :: EditChatInviteLink -> Maybe Int
[expire_date] :: EditChatInviteLink -> Maybe Int
[invite_link] :: EditChatInviteLink -> Maybe String
[chat_id] :: EditChatInviteLink -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditChatInviteLink.EditChatInviteLink
instance GHC.Show.Show API.Functions.EditChatInviteLink.EditChatInviteLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditChatInviteLink.EditChatInviteLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditChatInviteLink.EditChatInviteLink

module API.Functions.EnableProxy

-- | Enables a proxy. Only one proxy can be enabled at a time. Can be
--   called before authorization
--   
--   <b>proxy_id</b> Proxy identifier
data EnableProxy
EnableProxy :: Maybe Int -> EnableProxy
[proxy_id] :: EnableProxy -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EnableProxy.EnableProxy
instance GHC.Show.Show API.Functions.EnableProxy.EnableProxy
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EnableProxy.EnableProxy
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EnableProxy.EnableProxy

module API.Functions.EndGroupCallRecording

-- | Ends recording of an active group call. Requires
--   groupCall.can_be_managed group call flag
--   
--   <b>group_call_id</b> Group call identifier
data EndGroupCallRecording
EndGroupCallRecording :: Maybe Int -> EndGroupCallRecording
[group_call_id] :: EndGroupCallRecording -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EndGroupCallRecording.EndGroupCallRecording
instance GHC.Show.Show API.Functions.EndGroupCallRecording.EndGroupCallRecording
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EndGroupCallRecording.EndGroupCallRecording
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EndGroupCallRecording.EndGroupCallRecording

module API.Functions.EndGroupCallScreenSharing

-- | Ends screen sharing in a joined group call
--   
--   <b>group_call_id</b> Group call identifier
data EndGroupCallScreenSharing
EndGroupCallScreenSharing :: Maybe Int -> EndGroupCallScreenSharing
[group_call_id] :: EndGroupCallScreenSharing -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EndGroupCallScreenSharing.EndGroupCallScreenSharing
instance GHC.Show.Show API.Functions.EndGroupCallScreenSharing.EndGroupCallScreenSharing
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EndGroupCallScreenSharing.EndGroupCallScreenSharing
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EndGroupCallScreenSharing.EndGroupCallScreenSharing

module API.Functions.FinishFileGeneration

-- | Finishes the file generation
--   
--   <b>generation_id</b> The identifier of the generation process
--   
--   <b>error</b> If passed, the file generation has failed and must be
--   terminated; pass null if the file generation succeeded
data FinishFileGeneration
FinishFileGeneration :: Maybe Error -> Maybe Int -> FinishFileGeneration
[_error] :: FinishFileGeneration -> Maybe Error
[generation_id] :: FinishFileGeneration -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.FinishFileGeneration.FinishFileGeneration
instance GHC.Show.Show API.Functions.FinishFileGeneration.FinishFileGeneration
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.FinishFileGeneration.FinishFileGeneration
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.FinishFileGeneration.FinishFileGeneration

module API.Functions.GetAccountTtl

-- | Returns the period of inactivity after which the account of the
--   current user will automatically be deleted
data GetAccountTtl
GetAccountTtl :: GetAccountTtl
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetAccountTtl.GetAccountTtl
instance GHC.Show.Show API.Functions.GetAccountTtl.GetAccountTtl
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetAccountTtl.GetAccountTtl
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetAccountTtl.GetAccountTtl

module API.Functions.GetActiveLiveLocationMessages

-- | Returns all active live locations that need to be updated by the
--   application. The list is persistent across application restarts only
--   if the message database is used
data GetActiveLiveLocationMessages
GetActiveLiveLocationMessages :: GetActiveLiveLocationMessages
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetActiveLiveLocationMessages.GetActiveLiveLocationMessages
instance GHC.Show.Show API.Functions.GetActiveLiveLocationMessages.GetActiveLiveLocationMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetActiveLiveLocationMessages.GetActiveLiveLocationMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetActiveLiveLocationMessages.GetActiveLiveLocationMessages

module API.Functions.GetActiveSessions

-- | Returns all active sessions of the current user
data GetActiveSessions
GetActiveSessions :: GetActiveSessions
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetActiveSessions.GetActiveSessions
instance GHC.Show.Show API.Functions.GetActiveSessions.GetActiveSessions
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetActiveSessions.GetActiveSessions
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetActiveSessions.GetActiveSessions

module API.Functions.GetAllPassportElements

-- | Returns all available Telegram Passport elements
--   
--   <b>password</b> Password of the current user
data GetAllPassportElements
GetAllPassportElements :: Maybe String -> GetAllPassportElements
[password] :: GetAllPassportElements -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetAllPassportElements.GetAllPassportElements
instance GHC.Show.Show API.Functions.GetAllPassportElements.GetAllPassportElements
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetAllPassportElements.GetAllPassportElements
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetAllPassportElements.GetAllPassportElements

module API.Functions.GetApplicationConfig

-- | Returns application config, provided by the server. Can be called
--   before authorization
data GetApplicationConfig
GetApplicationConfig :: GetApplicationConfig
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetApplicationConfig.GetApplicationConfig
instance GHC.Show.Show API.Functions.GetApplicationConfig.GetApplicationConfig
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetApplicationConfig.GetApplicationConfig
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetApplicationConfig.GetApplicationConfig

module API.Functions.GetApplicationDownloadLink

-- | Returns the link for downloading official Telegram application to be
--   used when the current user invites friends to Telegram
data GetApplicationDownloadLink
GetApplicationDownloadLink :: GetApplicationDownloadLink
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetApplicationDownloadLink.GetApplicationDownloadLink
instance GHC.Show.Show API.Functions.GetApplicationDownloadLink.GetApplicationDownloadLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetApplicationDownloadLink.GetApplicationDownloadLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetApplicationDownloadLink.GetApplicationDownloadLink

module API.Functions.GetArchivedStickerSets

-- | Returns a list of archived sticker sets
--   
--   <b>is_masks</b> Pass true to return mask stickers sets; pass false to
--   return ordinary sticker sets
--   
--   <b>offset_sticker_set_id</b> Identifier of the sticker set from which
--   to return the result
--   
--   <b>limit</b> The maximum number of sticker sets to return
data GetArchivedStickerSets
GetArchivedStickerSets :: Maybe Int -> Maybe Int -> Maybe Bool -> GetArchivedStickerSets
[limit] :: GetArchivedStickerSets -> Maybe Int
[offset_sticker_set_id] :: GetArchivedStickerSets -> Maybe Int
[is_masks] :: GetArchivedStickerSets -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetArchivedStickerSets.GetArchivedStickerSets
instance GHC.Show.Show API.Functions.GetArchivedStickerSets.GetArchivedStickerSets
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetArchivedStickerSets.GetArchivedStickerSets
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetArchivedStickerSets.GetArchivedStickerSets

module API.Functions.GetAttachedStickerSets

-- | Returns a list of sticker sets attached to a file. Currently only
--   photos and videos can have attached sticker sets
--   
--   <b>file_id</b> File identifier
data GetAttachedStickerSets
GetAttachedStickerSets :: Maybe Int -> GetAttachedStickerSets
[file_id] :: GetAttachedStickerSets -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetAttachedStickerSets.GetAttachedStickerSets
instance GHC.Show.Show API.Functions.GetAttachedStickerSets.GetAttachedStickerSets
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetAttachedStickerSets.GetAttachedStickerSets
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetAttachedStickerSets.GetAttachedStickerSets

module API.Functions.GetAuthorizationState

-- | Returns the current authorization state; this is an offline request.
--   For informational purposes only. Use updateAuthorizationState instead
--   to maintain the current authorization state. Can be called before
--   initialization
data GetAuthorizationState
GetAuthorizationState :: GetAuthorizationState
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetAuthorizationState.GetAuthorizationState
instance GHC.Show.Show API.Functions.GetAuthorizationState.GetAuthorizationState
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetAuthorizationState.GetAuthorizationState
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetAuthorizationState.GetAuthorizationState

module API.Functions.GetAutoDownloadSettingsPresets

-- | Returns auto-download settings presets for the current user
data GetAutoDownloadSettingsPresets
GetAutoDownloadSettingsPresets :: GetAutoDownloadSettingsPresets
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetAutoDownloadSettingsPresets.GetAutoDownloadSettingsPresets
instance GHC.Show.Show API.Functions.GetAutoDownloadSettingsPresets.GetAutoDownloadSettingsPresets
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetAutoDownloadSettingsPresets.GetAutoDownloadSettingsPresets
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetAutoDownloadSettingsPresets.GetAutoDownloadSettingsPresets

module API.Functions.GetBackgroundUrl

-- | Constructs a persistent HTTP URL for a background
--   
--   <b>name</b> Background name
--   
--   <b>type</b> Background type
data GetBackgroundUrl
GetBackgroundUrl :: Maybe BackgroundType -> Maybe String -> GetBackgroundUrl
[_type] :: GetBackgroundUrl -> Maybe BackgroundType
[name] :: GetBackgroundUrl -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetBackgroundUrl.GetBackgroundUrl
instance GHC.Show.Show API.Functions.GetBackgroundUrl.GetBackgroundUrl
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetBackgroundUrl.GetBackgroundUrl
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetBackgroundUrl.GetBackgroundUrl

module API.Functions.GetBackgrounds

-- | Returns backgrounds installed by the user
--   
--   <b>for_dark_theme</b> True, if the backgrounds must be ordered for
--   dark theme
data GetBackgrounds
GetBackgrounds :: Maybe Bool -> GetBackgrounds
[for_dark_theme] :: GetBackgrounds -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetBackgrounds.GetBackgrounds
instance GHC.Show.Show API.Functions.GetBackgrounds.GetBackgrounds
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetBackgrounds.GetBackgrounds
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetBackgrounds.GetBackgrounds

module API.Functions.GetBankCardInfo

-- | Returns information about a bank card
--   
--   <b>bank_card_number</b> The bank card number
data GetBankCardInfo
GetBankCardInfo :: Maybe String -> GetBankCardInfo
[bank_card_number] :: GetBankCardInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetBankCardInfo.GetBankCardInfo
instance GHC.Show.Show API.Functions.GetBankCardInfo.GetBankCardInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetBankCardInfo.GetBankCardInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetBankCardInfo.GetBankCardInfo

module API.Functions.GetBasicGroup

-- | Returns information about a basic group by its identifier. This is an
--   offline request if the current user is not a bot
--   
--   <b>basic_group_id</b> Basic group identifier
data GetBasicGroup
GetBasicGroup :: Maybe Int -> GetBasicGroup
[basic_group_id] :: GetBasicGroup -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetBasicGroup.GetBasicGroup
instance GHC.Show.Show API.Functions.GetBasicGroup.GetBasicGroup
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetBasicGroup.GetBasicGroup
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetBasicGroup.GetBasicGroup

module API.Functions.GetBasicGroupFullInfo

-- | Returns full information about a basic group by its identifier
--   
--   <b>basic_group_id</b> Basic group identifier
data GetBasicGroupFullInfo
GetBasicGroupFullInfo :: Maybe Int -> GetBasicGroupFullInfo
[basic_group_id] :: GetBasicGroupFullInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetBasicGroupFullInfo.GetBasicGroupFullInfo
instance GHC.Show.Show API.Functions.GetBasicGroupFullInfo.GetBasicGroupFullInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetBasicGroupFullInfo.GetBasicGroupFullInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetBasicGroupFullInfo.GetBasicGroupFullInfo

module API.Functions.GetBlockedMessageSenders

-- | Returns users and chats that were blocked by the current user
--   
--   <b>offset</b> Number of users and chats to skip in the result; must be
--   non-negative
--   
--   <b>limit</b> The maximum number of users and chats to return; up to
--   100
data GetBlockedMessageSenders
GetBlockedMessageSenders :: Maybe Int -> Maybe Int -> GetBlockedMessageSenders
[limit] :: GetBlockedMessageSenders -> Maybe Int
[offset] :: GetBlockedMessageSenders -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetBlockedMessageSenders.GetBlockedMessageSenders
instance GHC.Show.Show API.Functions.GetBlockedMessageSenders.GetBlockedMessageSenders
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetBlockedMessageSenders.GetBlockedMessageSenders
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetBlockedMessageSenders.GetBlockedMessageSenders

module API.Functions.GetCallbackQueryAnswer

-- | Sends a callback query to a bot and returns an answer. Returns an
--   error with code 502 if the bot fails to answer the query before the
--   query timeout expires
--   
--   <b>chat_id</b> Identifier of the chat with the message
--   
--   <b>message_id</b> Identifier of the message from which the query
--   originated
--   
--   <b>payload</b> Query payload
data GetCallbackQueryAnswer
GetCallbackQueryAnswer :: Maybe CallbackQueryPayload -> Maybe Int -> Maybe Int -> GetCallbackQueryAnswer
[payload] :: GetCallbackQueryAnswer -> Maybe CallbackQueryPayload
[message_id] :: GetCallbackQueryAnswer -> Maybe Int
[chat_id] :: GetCallbackQueryAnswer -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetCallbackQueryAnswer.GetCallbackQueryAnswer
instance GHC.Show.Show API.Functions.GetCallbackQueryAnswer.GetCallbackQueryAnswer
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetCallbackQueryAnswer.GetCallbackQueryAnswer
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetCallbackQueryAnswer.GetCallbackQueryAnswer

module API.Functions.GetCallbackQueryMessage

-- | Returns information about a message with the callback button that
--   originated a callback query; for bots only
--   
--   <b>chat_id</b> Identifier of the chat the message belongs to
--   
--   <b>message_id</b> Message identifier
--   
--   <b>callback_query_id</b> Identifier of the callback query
data GetCallbackQueryMessage
GetCallbackQueryMessage :: Maybe Int -> Maybe Int -> Maybe Int -> GetCallbackQueryMessage
[callback_query_id] :: GetCallbackQueryMessage -> Maybe Int
[message_id] :: GetCallbackQueryMessage -> Maybe Int
[chat_id] :: GetCallbackQueryMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetCallbackQueryMessage.GetCallbackQueryMessage
instance GHC.Show.Show API.Functions.GetCallbackQueryMessage.GetCallbackQueryMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetCallbackQueryMessage.GetCallbackQueryMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetCallbackQueryMessage.GetCallbackQueryMessage

module API.Functions.GetChat

-- | Returns information about a chat by its identifier, this is an offline
--   request if the current user is not a bot
--   
--   <b>chat_id</b> Chat identifier
data GetChat
GetChat :: Maybe Int -> GetChat
[chat_id] :: GetChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChat.GetChat
instance GHC.Show.Show API.Functions.GetChat.GetChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChat.GetChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChat.GetChat

module API.Functions.GetChatAdministrators

-- | Returns a list of administrators of the chat with their custom titles
--   
--   <b>chat_id</b> Chat identifier
data GetChatAdministrators
GetChatAdministrators :: Maybe Int -> GetChatAdministrators
[chat_id] :: GetChatAdministrators -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatAdministrators.GetChatAdministrators
instance GHC.Show.Show API.Functions.GetChatAdministrators.GetChatAdministrators
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatAdministrators.GetChatAdministrators
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatAdministrators.GetChatAdministrators

module API.Functions.GetChatEventLog

-- | Returns a list of service actions taken by chat members and
--   administrators in the last 48 hours. Available only for supergroups
--   and channels. Requires administrator rights. Returns results in
--   reverse chronological order (i. e., in order of decreasing event_id)
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>query</b> Search query by which to filter events
--   
--   <b>from_event_id</b> Identifier of an event from which to return
--   results. Use 0 to get results from the latest events
--   
--   <b>limit</b> The maximum number of events to return; up to 100
--   
--   <b>filters</b> The types of events to return; pass null to get chat
--   events of all types
--   
--   <b>user_ids</b> User identifiers by which to filter events. By
--   default, events relating to all users will be returned
data GetChatEventLog
GetChatEventLog :: Maybe [Int] -> Maybe ChatEventLogFilters -> Maybe Int -> Maybe Int -> Maybe String -> Maybe Int -> GetChatEventLog
[user_ids] :: GetChatEventLog -> Maybe [Int]
[filters] :: GetChatEventLog -> Maybe ChatEventLogFilters
[limit] :: GetChatEventLog -> Maybe Int
[from_event_id] :: GetChatEventLog -> Maybe Int
[query] :: GetChatEventLog -> Maybe String
[chat_id] :: GetChatEventLog -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatEventLog.GetChatEventLog
instance GHC.Show.Show API.Functions.GetChatEventLog.GetChatEventLog
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatEventLog.GetChatEventLog
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatEventLog.GetChatEventLog

module API.Functions.GetChatFilter

-- | Returns information about a chat filter by its identifier
--   
--   <b>chat_filter_id</b> Chat filter identifier
data GetChatFilter
GetChatFilter :: Maybe Int -> GetChatFilter
[chat_filter_id] :: GetChatFilter -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatFilter.GetChatFilter
instance GHC.Show.Show API.Functions.GetChatFilter.GetChatFilter
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatFilter.GetChatFilter
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatFilter.GetChatFilter

module API.Functions.GetChatFilterDefaultIconName

-- | Returns default icon name for a filter. Can be called synchronously
--   
--   <b>filter</b> Chat filter
data GetChatFilterDefaultIconName
GetChatFilterDefaultIconName :: Maybe ChatFilter -> GetChatFilterDefaultIconName
[_filter] :: GetChatFilterDefaultIconName -> Maybe ChatFilter
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatFilterDefaultIconName.GetChatFilterDefaultIconName
instance GHC.Show.Show API.Functions.GetChatFilterDefaultIconName.GetChatFilterDefaultIconName
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatFilterDefaultIconName.GetChatFilterDefaultIconName
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatFilterDefaultIconName.GetChatFilterDefaultIconName

module API.Functions.GetChatHistory

-- | Returns messages in a chat. The messages are returned in a reverse
--   chronological order (i.e., in order of decreasing message_id).
--   
--   <ul>
--   <li>For optimal performance, the number of returned messages is chosen
--   by TDLib. This is an offline request if only_local is true</li>
--   </ul>
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>from_message_id</b> Identifier of the message starting from which
--   history must be fetched; use 0 to get results from the last message
--   
--   <b>offset</b> Specify 0 to get results from exactly the
--   from_message_id or a negative offset up to 99 to get additionally some
--   newer messages
--   
--   <b>limit</b> The maximum number of messages to be returned; must be
--   positive and can't be greater than 100. If the offset is negative, the
--   limit must be greater than or equal to -offset. For optimal
--   performance, the number of returned messages is chosen by TDLib and
--   can be smaller than the specified limit
--   
--   <b>only_local</b> If true, returns only messages that are available
--   locally without sending network requests
data GetChatHistory
GetChatHistory :: Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> GetChatHistory
[only_local] :: GetChatHistory -> Maybe Bool
[limit] :: GetChatHistory -> Maybe Int
[offset] :: GetChatHistory -> Maybe Int
[from_message_id] :: GetChatHistory -> Maybe Int
[chat_id] :: GetChatHistory -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatHistory.GetChatHistory
instance GHC.Show.Show API.Functions.GetChatHistory.GetChatHistory
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatHistory.GetChatHistory
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatHistory.GetChatHistory

module API.Functions.GetChatInviteLink

-- | Returns information about an invite link. Requires administrator
--   privileges and can_invite_users right in the chat to get own links and
--   owner privileges to get other links
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>invite_link</b> Invite link to get
data GetChatInviteLink
GetChatInviteLink :: Maybe String -> Maybe Int -> GetChatInviteLink
[invite_link] :: GetChatInviteLink -> Maybe String
[chat_id] :: GetChatInviteLink -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatInviteLink.GetChatInviteLink
instance GHC.Show.Show API.Functions.GetChatInviteLink.GetChatInviteLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatInviteLink.GetChatInviteLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatInviteLink.GetChatInviteLink

module API.Functions.GetChatInviteLinkCounts

-- | Returns list of chat administrators with number of their invite links.
--   Requires owner privileges in the chat
--   
--   <b>chat_id</b> Chat identifier
data GetChatInviteLinkCounts
GetChatInviteLinkCounts :: Maybe Int -> GetChatInviteLinkCounts
[chat_id] :: GetChatInviteLinkCounts -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatInviteLinkCounts.GetChatInviteLinkCounts
instance GHC.Show.Show API.Functions.GetChatInviteLinkCounts.GetChatInviteLinkCounts
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatInviteLinkCounts.GetChatInviteLinkCounts
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatInviteLinkCounts.GetChatInviteLinkCounts

module API.Functions.GetChatInviteLinkMembers

-- | Returns chat members joined a chat by an invite link. Requires
--   administrator privileges and can_invite_users right in the chat for
--   own links and owner privileges for other links
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>invite_link</b> Invite link for which to return chat members
--   
--   <b>offset_member</b> A chat member from which to return next chat
--   members; pass null to get results from the beginning
--   
--   <b>limit</b> The maximum number of chat members to return
data GetChatInviteLinkMembers
GetChatInviteLinkMembers :: Maybe Int -> Maybe ChatInviteLinkMember -> Maybe String -> Maybe Int -> GetChatInviteLinkMembers
[limit] :: GetChatInviteLinkMembers -> Maybe Int
[offset_member] :: GetChatInviteLinkMembers -> Maybe ChatInviteLinkMember
[invite_link] :: GetChatInviteLinkMembers -> Maybe String
[chat_id] :: GetChatInviteLinkMembers -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatInviteLinkMembers.GetChatInviteLinkMembers
instance GHC.Show.Show API.Functions.GetChatInviteLinkMembers.GetChatInviteLinkMembers
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatInviteLinkMembers.GetChatInviteLinkMembers
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatInviteLinkMembers.GetChatInviteLinkMembers

module API.Functions.GetChatInviteLinks

-- | Returns invite links for a chat created by specified administrator.
--   Requires administrator privileges and can_invite_users right in the
--   chat to get own links and owner privileges to get other links
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>creator_user_id</b> User identifier of a chat administrator. Must
--   be an identifier of the current user for non-owner
--   
--   <b>is_revoked</b> Pass true if revoked links needs to be returned
--   instead of active or expired
--   
--   <b>offset_date</b> Creation date of an invite link starting after
--   which to return invite links; use 0 to get results from the beginning
--   
--   <b>offset_invite_link</b> Invite link starting after which to return
--   invite links; use empty string to get results from the beginning
--   
--   <b>limit</b> The maximum number of invite links to return
data GetChatInviteLinks
GetChatInviteLinks :: Maybe Int -> Maybe String -> Maybe Int -> Maybe Bool -> Maybe Int -> Maybe Int -> GetChatInviteLinks
[limit] :: GetChatInviteLinks -> Maybe Int
[offset_invite_link] :: GetChatInviteLinks -> Maybe String
[offset_date] :: GetChatInviteLinks -> Maybe Int
[is_revoked] :: GetChatInviteLinks -> Maybe Bool
[creator_user_id] :: GetChatInviteLinks -> Maybe Int
[chat_id] :: GetChatInviteLinks -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatInviteLinks.GetChatInviteLinks
instance GHC.Show.Show API.Functions.GetChatInviteLinks.GetChatInviteLinks
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatInviteLinks.GetChatInviteLinks
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatInviteLinks.GetChatInviteLinks

module API.Functions.GetChatListsToAddChat

-- | Returns chat lists to which the chat can be added. This is an offline
--   request
--   
--   <b>chat_id</b> Chat identifier
data GetChatListsToAddChat
GetChatListsToAddChat :: Maybe Int -> GetChatListsToAddChat
[chat_id] :: GetChatListsToAddChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatListsToAddChat.GetChatListsToAddChat
instance GHC.Show.Show API.Functions.GetChatListsToAddChat.GetChatListsToAddChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatListsToAddChat.GetChatListsToAddChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatListsToAddChat.GetChatListsToAddChat

module API.Functions.GetChatMessageByDate

-- | Returns the last message sent in a chat no later than the specified
--   date
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>date</b> Point in time (Unix timestamp) relative to which to search
--   for messages
data GetChatMessageByDate
GetChatMessageByDate :: Maybe Int -> Maybe Int -> GetChatMessageByDate
[date] :: GetChatMessageByDate -> Maybe Int
[chat_id] :: GetChatMessageByDate -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatMessageByDate.GetChatMessageByDate
instance GHC.Show.Show API.Functions.GetChatMessageByDate.GetChatMessageByDate
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatMessageByDate.GetChatMessageByDate
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatMessageByDate.GetChatMessageByDate

module API.Functions.GetChatPinnedMessage

-- | Returns information about a newest pinned message in the chat
--   
--   <b>chat_id</b> Identifier of the chat the message belongs to
data GetChatPinnedMessage
GetChatPinnedMessage :: Maybe Int -> GetChatPinnedMessage
[chat_id] :: GetChatPinnedMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatPinnedMessage.GetChatPinnedMessage
instance GHC.Show.Show API.Functions.GetChatPinnedMessage.GetChatPinnedMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatPinnedMessage.GetChatPinnedMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatPinnedMessage.GetChatPinnedMessage

module API.Functions.GetChatScheduledMessages

-- | Returns all scheduled messages in a chat. The messages are returned in
--   a reverse chronological order (i.e., in order of decreasing
--   message_id)
--   
--   <b>chat_id</b> Chat identifier
data GetChatScheduledMessages
GetChatScheduledMessages :: Maybe Int -> GetChatScheduledMessages
[chat_id] :: GetChatScheduledMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatScheduledMessages.GetChatScheduledMessages
instance GHC.Show.Show API.Functions.GetChatScheduledMessages.GetChatScheduledMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatScheduledMessages.GetChatScheduledMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatScheduledMessages.GetChatScheduledMessages

module API.Functions.GetChatSponsoredMessages

-- | Returns sponsored messages to be shown in a chat; for channel chats
--   only
--   
--   <b>chat_id</b> Identifier of the chat
data GetChatSponsoredMessages
GetChatSponsoredMessages :: Maybe Int -> GetChatSponsoredMessages
[chat_id] :: GetChatSponsoredMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatSponsoredMessages.GetChatSponsoredMessages
instance GHC.Show.Show API.Functions.GetChatSponsoredMessages.GetChatSponsoredMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatSponsoredMessages.GetChatSponsoredMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatSponsoredMessages.GetChatSponsoredMessages

module API.Functions.GetChatStatistics

-- | Returns detailed statistics about a chat. Currently this method can be
--   used only for supergroups and channels. Can be used only if
--   supergroupFullInfo.can_get_statistics == true
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>is_dark</b> Pass true if a dark theme is used by the application
data GetChatStatistics
GetChatStatistics :: Maybe Bool -> Maybe Int -> GetChatStatistics
[is_dark] :: GetChatStatistics -> Maybe Bool
[chat_id] :: GetChatStatistics -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatStatistics.GetChatStatistics
instance GHC.Show.Show API.Functions.GetChatStatistics.GetChatStatistics
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatStatistics.GetChatStatistics
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatStatistics.GetChatStatistics

module API.Functions.GetChats

-- | Returns an ordered list of chats from the beginning of a chat list.
--   For informational purposes only. Use loadChats and updates processing
--   instead to maintain chat lists in a consistent state
--   
--   <b>chat_list</b> The chat list in which to return chats; pass null to
--   get chats from the main chat list
--   
--   <b>limit</b> The maximum number of chats to be returned
data GetChats
GetChats :: Maybe Int -> Maybe ChatList -> GetChats
[limit] :: GetChats -> Maybe Int
[chat_list] :: GetChats -> Maybe ChatList
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChats.GetChats
instance GHC.Show.Show API.Functions.GetChats.GetChats
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChats.GetChats
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChats.GetChats

module API.Functions.GetCommands

-- | Returns the list of commands supported by the bot for the given user
--   scope and language; for bots only
--   
--   <b>scope</b> The scope to which the commands are relevant; pass null
--   to get commands in the default bot command scope
--   
--   <b>language_code</b> A two-letter ISO 639-1 country code or an empty
--   string
data GetCommands
GetCommands :: Maybe String -> Maybe BotCommandScope -> GetCommands
[language_code] :: GetCommands -> Maybe String
[scope] :: GetCommands -> Maybe BotCommandScope
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetCommands.GetCommands
instance GHC.Show.Show API.Functions.GetCommands.GetCommands
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetCommands.GetCommands
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetCommands.GetCommands

module API.Functions.GetConnectedWebsites

-- | Returns all website where the current user used Telegram to log in
data GetConnectedWebsites
GetConnectedWebsites :: GetConnectedWebsites
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetConnectedWebsites.GetConnectedWebsites
instance GHC.Show.Show API.Functions.GetConnectedWebsites.GetConnectedWebsites
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetConnectedWebsites.GetConnectedWebsites
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetConnectedWebsites.GetConnectedWebsites

module API.Functions.GetContacts

-- | Returns all user contacts
data GetContacts
GetContacts :: GetContacts
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetContacts.GetContacts
instance GHC.Show.Show API.Functions.GetContacts.GetContacts
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetContacts.GetContacts
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetContacts.GetContacts

module API.Functions.GetCountries

-- | Returns information about existing countries. Can be called before
--   authorization
data GetCountries
GetCountries :: GetCountries
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetCountries.GetCountries
instance GHC.Show.Show API.Functions.GetCountries.GetCountries
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetCountries.GetCountries
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetCountries.GetCountries

module API.Functions.GetCountryCode

-- | Uses the current IP address to find the current country. Returns
--   two-letter ISO 3166-1 alpha-2 country code. Can be called before
--   authorization
data GetCountryCode
GetCountryCode :: GetCountryCode
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetCountryCode.GetCountryCode
instance GHC.Show.Show API.Functions.GetCountryCode.GetCountryCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetCountryCode.GetCountryCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetCountryCode.GetCountryCode

module API.Functions.GetCurrentState

-- | Returns all updates needed to restore current TDLib state, i.e. all
--   actual UpdateAuthorizationState<i>UpdateUser</i>UpdateNewChat and
--   others. This is especially useful if TDLib is run in a separate
--   process. Can be called before initialization
data GetCurrentState
GetCurrentState :: GetCurrentState
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetCurrentState.GetCurrentState
instance GHC.Show.Show API.Functions.GetCurrentState.GetCurrentState
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetCurrentState.GetCurrentState
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetCurrentState.GetCurrentState

module API.Functions.GetDatabaseStatistics

-- | Returns database statistics
data GetDatabaseStatistics
GetDatabaseStatistics :: GetDatabaseStatistics
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetDatabaseStatistics.GetDatabaseStatistics
instance GHC.Show.Show API.Functions.GetDatabaseStatistics.GetDatabaseStatistics
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetDatabaseStatistics.GetDatabaseStatistics
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetDatabaseStatistics.GetDatabaseStatistics

module API.Functions.GetDeepLinkInfo

-- | Returns information about a tg:/<i> deep link. Use
--   "tg:</i>/need_update_for_some_feature" or
--   "tg:some_unsupported_feature" for testing. Returns a 404 error for
--   unknown links. Can be called before authorization
--   
--   <b>link</b> The link
data GetDeepLinkInfo
GetDeepLinkInfo :: Maybe String -> GetDeepLinkInfo
[link] :: GetDeepLinkInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetDeepLinkInfo.GetDeepLinkInfo
instance GHC.Show.Show API.Functions.GetDeepLinkInfo.GetDeepLinkInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetDeepLinkInfo.GetDeepLinkInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetDeepLinkInfo.GetDeepLinkInfo

module API.Functions.GetEmojiSuggestionsUrl

-- | Returns an HTTP URL which can be used to automatically log in to the
--   translation platform and suggest new emoji replacements. The URL will
--   be valid for 30 seconds after generation
--   
--   <b>language_code</b> Language code for which the emoji replacements
--   will be suggested
data GetEmojiSuggestionsUrl
GetEmojiSuggestionsUrl :: Maybe String -> GetEmojiSuggestionsUrl
[language_code] :: GetEmojiSuggestionsUrl -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetEmojiSuggestionsUrl.GetEmojiSuggestionsUrl
instance GHC.Show.Show API.Functions.GetEmojiSuggestionsUrl.GetEmojiSuggestionsUrl
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetEmojiSuggestionsUrl.GetEmojiSuggestionsUrl
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetEmojiSuggestionsUrl.GetEmojiSuggestionsUrl

module API.Functions.GetExternalLink

-- | Returns an HTTP URL which can be used to automatically authorize the
--   current user on a website after clicking an HTTP link. Use the method
--   getExternalLinkInfo to find whether a prior user confirmation is
--   needed
--   
--   <b>link</b> The HTTP link
--   
--   <b>allow_write_access</b> True, if the current user allowed the bot,
--   returned in getExternalLinkInfo, to send them messages
data GetExternalLink
GetExternalLink :: Maybe Bool -> Maybe String -> GetExternalLink
[allow_write_access] :: GetExternalLink -> Maybe Bool
[link] :: GetExternalLink -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetExternalLink.GetExternalLink
instance GHC.Show.Show API.Functions.GetExternalLink.GetExternalLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetExternalLink.GetExternalLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetExternalLink.GetExternalLink

module API.Functions.GetExternalLinkInfo

-- | Returns information about an action to be done when the current user
--   clicks an external link. Don't use this method for links from secret
--   chats if web page preview is disabled in secret chats
--   
--   <b>link</b> The link
data GetExternalLinkInfo
GetExternalLinkInfo :: Maybe String -> GetExternalLinkInfo
[link] :: GetExternalLinkInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetExternalLinkInfo.GetExternalLinkInfo
instance GHC.Show.Show API.Functions.GetExternalLinkInfo.GetExternalLinkInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetExternalLinkInfo.GetExternalLinkInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetExternalLinkInfo.GetExternalLinkInfo

module API.Functions.GetFavoriteStickers

-- | Returns favorite stickers
data GetFavoriteStickers
GetFavoriteStickers :: GetFavoriteStickers
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetFavoriteStickers.GetFavoriteStickers
instance GHC.Show.Show API.Functions.GetFavoriteStickers.GetFavoriteStickers
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetFavoriteStickers.GetFavoriteStickers
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetFavoriteStickers.GetFavoriteStickers

module API.Functions.GetFile

-- | Returns information about a file; this is an offline request
--   
--   <b>file_id</b> Identifier of the file to get
data GetFile
GetFile :: Maybe Int -> GetFile
[file_id] :: GetFile -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetFile.GetFile
instance GHC.Show.Show API.Functions.GetFile.GetFile
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetFile.GetFile
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetFile.GetFile

module API.Functions.GetFileDownloadedPrefixSize

-- | Returns file downloaded prefix size from a given offset, in bytes
--   
--   <b>file_id</b> Identifier of the file
--   
--   <b>offset</b> Offset from which downloaded prefix size needs to be
--   calculated
data GetFileDownloadedPrefixSize
GetFileDownloadedPrefixSize :: Maybe Int -> Maybe Int -> GetFileDownloadedPrefixSize
[offset] :: GetFileDownloadedPrefixSize -> Maybe Int
[file_id] :: GetFileDownloadedPrefixSize -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetFileDownloadedPrefixSize.GetFileDownloadedPrefixSize
instance GHC.Show.Show API.Functions.GetFileDownloadedPrefixSize.GetFileDownloadedPrefixSize
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetFileDownloadedPrefixSize.GetFileDownloadedPrefixSize
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetFileDownloadedPrefixSize.GetFileDownloadedPrefixSize

module API.Functions.GetFileExtension

-- | Returns the extension of a file, guessed by its MIME type. Returns an
--   empty string on failure. Can be called synchronously
--   
--   <b>mime_type</b> The MIME type of the file
data GetFileExtension
GetFileExtension :: Maybe String -> GetFileExtension
[mime_type] :: GetFileExtension -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetFileExtension.GetFileExtension
instance GHC.Show.Show API.Functions.GetFileExtension.GetFileExtension
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetFileExtension.GetFileExtension
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetFileExtension.GetFileExtension

module API.Functions.GetFileMimeType

-- | Returns the MIME type of a file, guessed by its extension. Returns an
--   empty string on failure. Can be called synchronously
--   
--   <b>file_name</b> The name of the file or path to the file
data GetFileMimeType
GetFileMimeType :: Maybe String -> GetFileMimeType
[file_name] :: GetFileMimeType -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetFileMimeType.GetFileMimeType
instance GHC.Show.Show API.Functions.GetFileMimeType.GetFileMimeType
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetFileMimeType.GetFileMimeType
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetFileMimeType.GetFileMimeType

module API.Functions.GetGameHighScores

-- | Returns the high scores for a game and some part of the high score
--   table in the range of the specified user; for bots only
--   
--   <b>chat_id</b> The chat that contains the message with the game
--   
--   <b>message_id</b> Identifier of the message
--   
--   <b>user_id</b> User identifier
data GetGameHighScores
GetGameHighScores :: Maybe Int -> Maybe Int -> Maybe Int -> GetGameHighScores
[user_id] :: GetGameHighScores -> Maybe Int
[message_id] :: GetGameHighScores -> Maybe Int
[chat_id] :: GetGameHighScores -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetGameHighScores.GetGameHighScores
instance GHC.Show.Show API.Functions.GetGameHighScores.GetGameHighScores
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetGameHighScores.GetGameHighScores
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetGameHighScores.GetGameHighScores

module API.Functions.GetGroupCall

-- | Returns information about a group call
--   
--   <b>group_call_id</b> Group call identifier
data GetGroupCall
GetGroupCall :: Maybe Int -> GetGroupCall
[group_call_id] :: GetGroupCall -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetGroupCall.GetGroupCall
instance GHC.Show.Show API.Functions.GetGroupCall.GetGroupCall
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetGroupCall.GetGroupCall
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetGroupCall.GetGroupCall

module API.Functions.GetGroupCallInviteLink

-- | Returns invite link to a voice chat in a public chat
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>can_self_unmute</b> Pass true if the invite link needs to contain
--   an invite hash, passing which to joinGroupCall would allow the invited
--   user to unmute themselves. Requires groupCall.can_be_managed group
--   call flag
data GetGroupCallInviteLink
GetGroupCallInviteLink :: Maybe Bool -> Maybe Int -> GetGroupCallInviteLink
[can_self_unmute] :: GetGroupCallInviteLink -> Maybe Bool
[group_call_id] :: GetGroupCallInviteLink -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetGroupCallInviteLink.GetGroupCallInviteLink
instance GHC.Show.Show API.Functions.GetGroupCallInviteLink.GetGroupCallInviteLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetGroupCallInviteLink.GetGroupCallInviteLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetGroupCallInviteLink.GetGroupCallInviteLink

module API.Functions.GetGroupsInCommon

-- | Returns a list of common group chats with a given user. Chats are
--   sorted by their type and creation date
--   
--   <b>user_id</b> User identifier
--   
--   <b>offset_chat_id</b> Chat identifier starting from which to return
--   chats; use 0 for the first request
--   
--   <b>limit</b> The maximum number of chats to be returned; up to 100
data GetGroupsInCommon
GetGroupsInCommon :: Maybe Int -> Maybe Int -> Maybe Int -> GetGroupsInCommon
[limit] :: GetGroupsInCommon -> Maybe Int
[offset_chat_id] :: GetGroupsInCommon -> Maybe Int
[user_id] :: GetGroupsInCommon -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetGroupsInCommon.GetGroupsInCommon
instance GHC.Show.Show API.Functions.GetGroupsInCommon.GetGroupsInCommon
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetGroupsInCommon.GetGroupsInCommon
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetGroupsInCommon.GetGroupsInCommon

module API.Functions.GetImportedContactCount

-- | Returns the total number of imported contacts
data GetImportedContactCount
GetImportedContactCount :: GetImportedContactCount
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetImportedContactCount.GetImportedContactCount
instance GHC.Show.Show API.Functions.GetImportedContactCount.GetImportedContactCount
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetImportedContactCount.GetImportedContactCount
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetImportedContactCount.GetImportedContactCount

module API.Functions.GetInactiveSupergroupChats

-- | Returns a list of recently inactive supergroups and channels. Can be
--   used when user reaches limit on the number of joined supergroups and
--   channels and receives CHANNELS_TOO_MUCH error
data GetInactiveSupergroupChats
GetInactiveSupergroupChats :: GetInactiveSupergroupChats
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetInactiveSupergroupChats.GetInactiveSupergroupChats
instance GHC.Show.Show API.Functions.GetInactiveSupergroupChats.GetInactiveSupergroupChats
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetInactiveSupergroupChats.GetInactiveSupergroupChats
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetInactiveSupergroupChats.GetInactiveSupergroupChats

module API.Functions.GetInlineGameHighScores

-- | Returns game high scores and some part of the high score table in the
--   range of the specified user; for bots only
--   
--   <b>inline_message_id</b> Inline message identifier
--   
--   <b>user_id</b> User identifier
data GetInlineGameHighScores
GetInlineGameHighScores :: Maybe Int -> Maybe String -> GetInlineGameHighScores
[user_id] :: GetInlineGameHighScores -> Maybe Int
[inline_message_id] :: GetInlineGameHighScores -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetInlineGameHighScores.GetInlineGameHighScores
instance GHC.Show.Show API.Functions.GetInlineGameHighScores.GetInlineGameHighScores
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetInlineGameHighScores.GetInlineGameHighScores
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetInlineGameHighScores.GetInlineGameHighScores

module API.Functions.GetInstalledStickerSets

-- | Returns a list of installed sticker sets
--   
--   <b>is_masks</b> Pass true to return mask sticker sets; pass false to
--   return ordinary sticker sets
data GetInstalledStickerSets
GetInstalledStickerSets :: Maybe Bool -> GetInstalledStickerSets
[is_masks] :: GetInstalledStickerSets -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetInstalledStickerSets.GetInstalledStickerSets
instance GHC.Show.Show API.Functions.GetInstalledStickerSets.GetInstalledStickerSets
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetInstalledStickerSets.GetInstalledStickerSets
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetInstalledStickerSets.GetInstalledStickerSets

module API.Functions.GetInternalLinkType

-- | Returns information about the type of an internal link. Returns a 404
--   error if the link is not internal. Can be called before authorization
--   
--   <b>link</b> The link
data GetInternalLinkType
GetInternalLinkType :: Maybe String -> GetInternalLinkType
[link] :: GetInternalLinkType -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetInternalLinkType.GetInternalLinkType
instance GHC.Show.Show API.Functions.GetInternalLinkType.GetInternalLinkType
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetInternalLinkType.GetInternalLinkType
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetInternalLinkType.GetInternalLinkType

module API.Functions.GetJsonValue

-- | Converts a JSON-serialized string to corresponding JsonValue object.
--   Can be called synchronously
--   
--   <b>json</b> The JSON-serialized string
data GetJsonValue
GetJsonValue :: Maybe String -> GetJsonValue
[json] :: GetJsonValue -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetJsonValue.GetJsonValue
instance GHC.Show.Show API.Functions.GetJsonValue.GetJsonValue
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetJsonValue.GetJsonValue
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetJsonValue.GetJsonValue

module API.Functions.GetLanguagePackInfo

-- | Returns information about a language pack. Returned language pack
--   identifier may be different from a provided one. Can be called before
--   authorization
--   
--   <b>language_pack_id</b> Language pack identifier
data GetLanguagePackInfo
GetLanguagePackInfo :: Maybe String -> GetLanguagePackInfo
[language_pack_id] :: GetLanguagePackInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetLanguagePackInfo.GetLanguagePackInfo
instance GHC.Show.Show API.Functions.GetLanguagePackInfo.GetLanguagePackInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetLanguagePackInfo.GetLanguagePackInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetLanguagePackInfo.GetLanguagePackInfo

module API.Functions.GetLanguagePackString

-- | Returns a string stored in the local database from the specified
--   localization target and language pack by its key. Returns a 404 error
--   if the string is not found. Can be called synchronously
--   
--   <b>language_pack_database_path</b> Path to the language pack database
--   in which strings are stored
--   
--   <b>localization_target</b> Localization target to which the language
--   pack belongs
--   
--   <b>language_pack_id</b> Language pack identifier
--   
--   <b>key</b> Language pack key of the string to be returned
data GetLanguagePackString
GetLanguagePackString :: Maybe String -> Maybe String -> Maybe String -> Maybe String -> GetLanguagePackString
[key] :: GetLanguagePackString -> Maybe String
[language_pack_id] :: GetLanguagePackString -> Maybe String
[localization_target] :: GetLanguagePackString -> Maybe String
[language_pack_database_path] :: GetLanguagePackString -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetLanguagePackString.GetLanguagePackString
instance GHC.Show.Show API.Functions.GetLanguagePackString.GetLanguagePackString
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetLanguagePackString.GetLanguagePackString
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetLanguagePackString.GetLanguagePackString

module API.Functions.GetLanguagePackStrings

-- | Returns strings from a language pack in the current localization
--   target by their keys. Can be called before authorization
--   
--   <b>language_pack_id</b> Language pack identifier of the strings to be
--   returned
--   
--   <b>keys</b> Language pack keys of the strings to be returned; leave
--   empty to request all available strings
data GetLanguagePackStrings
GetLanguagePackStrings :: Maybe [String] -> Maybe String -> GetLanguagePackStrings
[keys] :: GetLanguagePackStrings -> Maybe [String]
[language_pack_id] :: GetLanguagePackStrings -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetLanguagePackStrings.GetLanguagePackStrings
instance GHC.Show.Show API.Functions.GetLanguagePackStrings.GetLanguagePackStrings
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetLanguagePackStrings.GetLanguagePackStrings
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetLanguagePackStrings.GetLanguagePackStrings

module API.Functions.GetLocalizationTargetInfo

-- | Returns information about the current localization target. This is an
--   offline request if only_local is true. Can be called before
--   authorization
--   
--   <b>only_local</b> If true, returns only locally available information
--   without sending network requests
data GetLocalizationTargetInfo
GetLocalizationTargetInfo :: Maybe Bool -> GetLocalizationTargetInfo
[only_local] :: GetLocalizationTargetInfo -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetLocalizationTargetInfo.GetLocalizationTargetInfo
instance GHC.Show.Show API.Functions.GetLocalizationTargetInfo.GetLocalizationTargetInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetLocalizationTargetInfo.GetLocalizationTargetInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetLocalizationTargetInfo.GetLocalizationTargetInfo

module API.Functions.GetLogStream

-- | Returns information about currently used log stream for internal
--   logging of TDLib. Can be called synchronously
data GetLogStream
GetLogStream :: GetLogStream
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetLogStream.GetLogStream
instance GHC.Show.Show API.Functions.GetLogStream.GetLogStream
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetLogStream.GetLogStream
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetLogStream.GetLogStream

module API.Functions.GetLogTagVerbosityLevel

-- | Returns current verbosity level for a specified TDLib internal log
--   tag. Can be called synchronously
--   
--   <b>tag</b> Logging tag to change verbosity level
data GetLogTagVerbosityLevel
GetLogTagVerbosityLevel :: Maybe String -> GetLogTagVerbosityLevel
[tag] :: GetLogTagVerbosityLevel -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetLogTagVerbosityLevel.GetLogTagVerbosityLevel
instance GHC.Show.Show API.Functions.GetLogTagVerbosityLevel.GetLogTagVerbosityLevel
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetLogTagVerbosityLevel.GetLogTagVerbosityLevel
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetLogTagVerbosityLevel.GetLogTagVerbosityLevel

module API.Functions.GetLogTags

-- | Returns list of available TDLib internal log tags, for example,
--   ["actor", "binlog", "connections", "notifications", "proxy"]. Can be
--   called synchronously
data GetLogTags
GetLogTags :: GetLogTags
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetLogTags.GetLogTags
instance GHC.Show.Show API.Functions.GetLogTags.GetLogTags
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetLogTags.GetLogTags
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetLogTags.GetLogTags

module API.Functions.GetLogVerbosityLevel

-- | Returns current verbosity level of the internal logging of TDLib. Can
--   be called synchronously
data GetLogVerbosityLevel
GetLogVerbosityLevel :: GetLogVerbosityLevel
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetLogVerbosityLevel.GetLogVerbosityLevel
instance GHC.Show.Show API.Functions.GetLogVerbosityLevel.GetLogVerbosityLevel
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetLogVerbosityLevel.GetLogVerbosityLevel
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetLogVerbosityLevel.GetLogVerbosityLevel

module API.Functions.GetLoginUrl

-- | Returns an HTTP URL which can be used to automatically authorize the
--   user on a website after clicking an inline button of type
--   inlineKeyboardButtonTypeLoginUrl.
--   
--   <ul>
--   <li>Use the method getLoginUrlInfo to find whether a prior user
--   confirmation is needed. If an error is returned, then the button must
--   be handled as an ordinary URL button</li>
--   </ul>
--   
--   <b>chat_id</b> Chat identifier of the message with the button
--   
--   <b>message_id</b> Message identifier of the message with the button
--   
--   <b>button_id</b> Button identifier
--   
--   <b>allow_write_access</b> True, if the user allowed the bot to send
--   them messages
data GetLoginUrl
GetLoginUrl :: Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Int -> GetLoginUrl
[allow_write_access] :: GetLoginUrl -> Maybe Bool
[button_id] :: GetLoginUrl -> Maybe Int
[message_id] :: GetLoginUrl -> Maybe Int
[chat_id] :: GetLoginUrl -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetLoginUrl.GetLoginUrl
instance GHC.Show.Show API.Functions.GetLoginUrl.GetLoginUrl
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetLoginUrl.GetLoginUrl
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetLoginUrl.GetLoginUrl

module API.Functions.GetLoginUrlInfo

-- | Returns information about a button of type
--   inlineKeyboardButtonTypeLoginUrl. The method needs to be called when
--   the user presses the button
--   
--   <b>chat_id</b> Chat identifier of the message with the button
--   
--   <b>message_id</b> Message identifier of the message with the button
--   
--   <b>button_id</b> Button identifier
data GetLoginUrlInfo
GetLoginUrlInfo :: Maybe Int -> Maybe Int -> Maybe Int -> GetLoginUrlInfo
[button_id] :: GetLoginUrlInfo -> Maybe Int
[message_id] :: GetLoginUrlInfo -> Maybe Int
[chat_id] :: GetLoginUrlInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetLoginUrlInfo.GetLoginUrlInfo
instance GHC.Show.Show API.Functions.GetLoginUrlInfo.GetLoginUrlInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetLoginUrlInfo.GetLoginUrlInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetLoginUrlInfo.GetLoginUrlInfo

module API.Functions.GetMarkdownText

-- | Replaces text entities with Markdown formatting in a human-friendly
--   format. Entities that can't be represented in Markdown unambiguously
--   are kept as is. Can be called synchronously
--   
--   <b>text</b> The text
data GetMarkdownText
GetMarkdownText :: Maybe FormattedText -> GetMarkdownText
[text] :: GetMarkdownText -> Maybe FormattedText
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMarkdownText.GetMarkdownText
instance GHC.Show.Show API.Functions.GetMarkdownText.GetMarkdownText
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMarkdownText.GetMarkdownText
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMarkdownText.GetMarkdownText

module API.Functions.GetMe

-- | Returns the current user
data GetMe
GetMe :: GetMe
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMe.GetMe
instance GHC.Show.Show API.Functions.GetMe.GetMe
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMe.GetMe
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMe.GetMe

module API.Functions.GetMessage

-- | Returns information about a message
--   
--   <b>chat_id</b> Identifier of the chat the message belongs to
--   
--   <b>message_id</b> Identifier of the message to get
data GetMessage
GetMessage :: Maybe Int -> Maybe Int -> GetMessage
[message_id] :: GetMessage -> Maybe Int
[chat_id] :: GetMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMessage.GetMessage
instance GHC.Show.Show API.Functions.GetMessage.GetMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMessage.GetMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMessage.GetMessage

module API.Functions.GetMessageEmbeddingCode

-- | Returns an HTML code for embedding the message. Available only for
--   messages in supergroups and channels with a username
--   
--   <b>chat_id</b> Identifier of the chat to which the message belongs
--   
--   <b>message_id</b> Identifier of the message
--   
--   <b>for_album</b> Pass true to return an HTML code for embedding of the
--   whole media album
data GetMessageEmbeddingCode
GetMessageEmbeddingCode :: Maybe Bool -> Maybe Int -> Maybe Int -> GetMessageEmbeddingCode
[for_album] :: GetMessageEmbeddingCode -> Maybe Bool
[message_id] :: GetMessageEmbeddingCode -> Maybe Int
[chat_id] :: GetMessageEmbeddingCode -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMessageEmbeddingCode.GetMessageEmbeddingCode
instance GHC.Show.Show API.Functions.GetMessageEmbeddingCode.GetMessageEmbeddingCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMessageEmbeddingCode.GetMessageEmbeddingCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMessageEmbeddingCode.GetMessageEmbeddingCode

module API.Functions.GetMessageFileType

-- | Returns information about a file with messages exported from another
--   app
--   
--   <b>message_file_head</b> Beginning of the message file; up to 100
--   first lines
data GetMessageFileType
GetMessageFileType :: Maybe String -> GetMessageFileType
[message_file_head] :: GetMessageFileType -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMessageFileType.GetMessageFileType
instance GHC.Show.Show API.Functions.GetMessageFileType.GetMessageFileType
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMessageFileType.GetMessageFileType
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMessageFileType.GetMessageFileType

module API.Functions.GetMessageImportConfirmationText

-- | Returns a confirmation text to be shown to the user before starting
--   message import
--   
--   <b>chat_id</b> Identifier of a chat to which the messages will be
--   imported. It must be an identifier of a private chat with a mutual
--   contact or an identifier of a supergroup chat with can_change_info
--   administrator right
data GetMessageImportConfirmationText
GetMessageImportConfirmationText :: Maybe Int -> GetMessageImportConfirmationText
[chat_id] :: GetMessageImportConfirmationText -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMessageImportConfirmationText.GetMessageImportConfirmationText
instance GHC.Show.Show API.Functions.GetMessageImportConfirmationText.GetMessageImportConfirmationText
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMessageImportConfirmationText.GetMessageImportConfirmationText
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMessageImportConfirmationText.GetMessageImportConfirmationText

module API.Functions.GetMessageLink

-- | Returns an HTTPS link to a message in a chat. Available only for
--   already sent messages in supergroups and channels, or if
--   message.can_get_media_timestamp_links and a media timestamp link is
--   generated. This is an offline request
--   
--   <b>chat_id</b> Identifier of the chat to which the message belongs
--   
--   <b>message_id</b> Identifier of the message
--   
--   <b>media_timestamp</b> If not 0, timestamp from which the
--   video<i>audio</i>video note/voice note playing must start, in seconds.
--   The media can be in the message content or in its web page preview
--   
--   <b>for_album</b> Pass true to create a link for the whole media album
--   
--   <b>for_comment</b> Pass true to create a link to the message as a
--   channel post comment, or from a message thread
data GetMessageLink
GetMessageLink :: Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Int -> GetMessageLink
[for_comment] :: GetMessageLink -> Maybe Bool
[for_album] :: GetMessageLink -> Maybe Bool
[media_timestamp] :: GetMessageLink -> Maybe Int
[message_id] :: GetMessageLink -> Maybe Int
[chat_id] :: GetMessageLink -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMessageLink.GetMessageLink
instance GHC.Show.Show API.Functions.GetMessageLink.GetMessageLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMessageLink.GetMessageLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMessageLink.GetMessageLink

module API.Functions.GetMessageLinkInfo

-- | Returns information about a public or private message link. Can be
--   called for any internal link of the type internalLinkTypeMessage
--   
--   <b>url</b> The message link
data GetMessageLinkInfo
GetMessageLinkInfo :: Maybe String -> GetMessageLinkInfo
[url] :: GetMessageLinkInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMessageLinkInfo.GetMessageLinkInfo
instance GHC.Show.Show API.Functions.GetMessageLinkInfo.GetMessageLinkInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMessageLinkInfo.GetMessageLinkInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMessageLinkInfo.GetMessageLinkInfo

module API.Functions.GetMessageLocally

-- | Returns information about a message, if it is available locally
--   without sending network request. This is an offline request
--   
--   <b>chat_id</b> Identifier of the chat the message belongs to
--   
--   <b>message_id</b> Identifier of the message to get
data GetMessageLocally
GetMessageLocally :: Maybe Int -> Maybe Int -> GetMessageLocally
[message_id] :: GetMessageLocally -> Maybe Int
[chat_id] :: GetMessageLocally -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMessageLocally.GetMessageLocally
instance GHC.Show.Show API.Functions.GetMessageLocally.GetMessageLocally
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMessageLocally.GetMessageLocally
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMessageLocally.GetMessageLocally

module API.Functions.GetMessagePublicForwards

-- | Returns forwarded copies of a channel message to different public
--   channels. For optimal performance, the number of returned messages is
--   chosen by TDLib
--   
--   <b>chat_id</b> Chat identifier of the message
--   
--   <b>message_id</b> Message identifier
--   
--   <b>offset</b> Offset of the first entry to return as received from the
--   previous request; use empty string to get first chunk of results
--   
--   <b>limit</b> The maximum number of messages to be returned; must be
--   positive and can't be greater than 100. For optimal performance, the
--   number of returned messages is chosen by TDLib and can be smaller than
--   the specified limit
data GetMessagePublicForwards
GetMessagePublicForwards :: Maybe Int -> Maybe String -> Maybe Int -> Maybe Int -> GetMessagePublicForwards
[limit] :: GetMessagePublicForwards -> Maybe Int
[offset] :: GetMessagePublicForwards -> Maybe String
[message_id] :: GetMessagePublicForwards -> Maybe Int
[chat_id] :: GetMessagePublicForwards -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMessagePublicForwards.GetMessagePublicForwards
instance GHC.Show.Show API.Functions.GetMessagePublicForwards.GetMessagePublicForwards
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMessagePublicForwards.GetMessagePublicForwards
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMessagePublicForwards.GetMessagePublicForwards

module API.Functions.GetMessageStatistics

-- | Returns detailed statistics about a message. Can be used only if
--   message.can_get_statistics == true
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_id</b> Message identifier
--   
--   <b>is_dark</b> Pass true if a dark theme is used by the application
data GetMessageStatistics
GetMessageStatistics :: Maybe Bool -> Maybe Int -> Maybe Int -> GetMessageStatistics
[is_dark] :: GetMessageStatistics -> Maybe Bool
[message_id] :: GetMessageStatistics -> Maybe Int
[chat_id] :: GetMessageStatistics -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMessageStatistics.GetMessageStatistics
instance GHC.Show.Show API.Functions.GetMessageStatistics.GetMessageStatistics
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMessageStatistics.GetMessageStatistics
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMessageStatistics.GetMessageStatistics

module API.Functions.GetMessageThread

-- | Returns information about a message thread. Can be used only if
--   message.can_get_message_thread == true
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_id</b> Identifier of the message
data GetMessageThread
GetMessageThread :: Maybe Int -> Maybe Int -> GetMessageThread
[message_id] :: GetMessageThread -> Maybe Int
[chat_id] :: GetMessageThread -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMessageThread.GetMessageThread
instance GHC.Show.Show API.Functions.GetMessageThread.GetMessageThread
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMessageThread.GetMessageThread
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMessageThread.GetMessageThread

module API.Functions.GetMessageThreadHistory

-- | Returns messages in a message thread of a message. Can be used only if
--   message.can_get_message_thread == true. Message thread of a channel
--   message is in the channel's linked supergroup.
--   
--   <ul>
--   <li>The messages are returned in a reverse chronological order (i.e.,
--   in order of decreasing message_id). For optimal performance, the
--   number of returned messages is chosen by TDLib</li>
--   </ul>
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_id</b> Message identifier, which thread history needs to be
--   returned
--   
--   <b>from_message_id</b> Identifier of the message starting from which
--   history must be fetched; use 0 to get results from the last message
--   
--   <b>offset</b> Specify 0 to get results from exactly the
--   from_message_id or a negative offset up to 99 to get additionally some
--   newer messages
--   
--   <b>limit</b> The maximum number of messages to be returned; must be
--   positive and can't be greater than 100. If the offset is negative, the
--   limit must be greater than or equal to -offset. For optimal
--   performance, the number of returned messages is chosen by TDLib and
--   can be smaller than the specified limit
data GetMessageThreadHistory
GetMessageThreadHistory :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> GetMessageThreadHistory
[limit] :: GetMessageThreadHistory -> Maybe Int
[offset] :: GetMessageThreadHistory -> Maybe Int
[from_message_id] :: GetMessageThreadHistory -> Maybe Int
[message_id] :: GetMessageThreadHistory -> Maybe Int
[chat_id] :: GetMessageThreadHistory -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMessageThreadHistory.GetMessageThreadHistory
instance GHC.Show.Show API.Functions.GetMessageThreadHistory.GetMessageThreadHistory
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMessageThreadHistory.GetMessageThreadHistory
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMessageThreadHistory.GetMessageThreadHistory

module API.Functions.GetMessageViewers

-- | Returns viewers of a recent outgoing message in a basic group or a
--   supergroup chat. For video notes and voice notes only users, opened
--   content of the message, are returned. The method can be called if
--   message.can_get_viewers == true
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_id</b> Identifier of the message
data GetMessageViewers
GetMessageViewers :: Maybe Int -> Maybe Int -> GetMessageViewers
[message_id] :: GetMessageViewers -> Maybe Int
[chat_id] :: GetMessageViewers -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMessageViewers.GetMessageViewers
instance GHC.Show.Show API.Functions.GetMessageViewers.GetMessageViewers
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMessageViewers.GetMessageViewers
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMessageViewers.GetMessageViewers

module API.Functions.GetMessages

-- | Returns information about messages. If a message is not found, returns
--   null on the corresponding position of the result
--   
--   <b>chat_id</b> Identifier of the chat the messages belong to
--   
--   <b>message_ids</b> Identifiers of the messages to get
data GetMessages
GetMessages :: Maybe [Int] -> Maybe Int -> GetMessages
[message_ids] :: GetMessages -> Maybe [Int]
[chat_id] :: GetMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMessages.GetMessages
instance GHC.Show.Show API.Functions.GetMessages.GetMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMessages.GetMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMessages.GetMessages

module API.Functions.GetNetworkStatistics

-- | Returns network data usage statistics. Can be called before
--   authorization
--   
--   <b>only_current</b> If true, returns only data for the current library
--   launch
data GetNetworkStatistics
GetNetworkStatistics :: Maybe Bool -> GetNetworkStatistics
[only_current] :: GetNetworkStatistics -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetNetworkStatistics.GetNetworkStatistics
instance GHC.Show.Show API.Functions.GetNetworkStatistics.GetNetworkStatistics
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetNetworkStatistics.GetNetworkStatistics
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetNetworkStatistics.GetNetworkStatistics

module API.Functions.GetOption

-- | Returns the value of an option by its name. (Check the list of
--   available options on <a>https://core.telegram.org/tdlib/options.)</a>
--   Can be called before authorization
--   
--   <b>name</b> The name of the option
data GetOption
GetOption :: Maybe String -> GetOption
[name] :: GetOption -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetOption.GetOption
instance GHC.Show.Show API.Functions.GetOption.GetOption
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetOption.GetOption
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetOption.GetOption

module API.Functions.GetPassportAuthorizationForm

-- | Returns a Telegram Passport authorization form for sharing data with a
--   service
--   
--   <b>bot_user_id</b> User identifier of the service's bot
--   
--   <b>scope</b> Telegram Passport element types requested by the service
--   
--   <b>public_key</b> Service's public key
--   
--   <b>nonce</b> Unique request identifier provided by the service
data GetPassportAuthorizationForm
GetPassportAuthorizationForm :: Maybe String -> Maybe String -> Maybe String -> Maybe Int -> GetPassportAuthorizationForm
[nonce] :: GetPassportAuthorizationForm -> Maybe String
[public_key] :: GetPassportAuthorizationForm -> Maybe String
[scope] :: GetPassportAuthorizationForm -> Maybe String
[bot_user_id] :: GetPassportAuthorizationForm -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetPassportAuthorizationForm.GetPassportAuthorizationForm
instance GHC.Show.Show API.Functions.GetPassportAuthorizationForm.GetPassportAuthorizationForm
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetPassportAuthorizationForm.GetPassportAuthorizationForm
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetPassportAuthorizationForm.GetPassportAuthorizationForm

module API.Functions.GetPassportAuthorizationFormAvailableElements

-- | Returns already available Telegram Passport elements suitable for
--   completing a Telegram Passport authorization form. Result can be
--   received only once for each authorization form
--   
--   <b>autorization_form_id</b> Authorization form identifier
--   
--   <b>password</b> Password of the current user
data GetPassportAuthorizationFormAvailableElements
GetPassportAuthorizationFormAvailableElements :: Maybe String -> Maybe Int -> GetPassportAuthorizationFormAvailableElements
[password] :: GetPassportAuthorizationFormAvailableElements -> Maybe String
[autorization_form_id] :: GetPassportAuthorizationFormAvailableElements -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetPassportAuthorizationFormAvailableElements.GetPassportAuthorizationFormAvailableElements
instance GHC.Show.Show API.Functions.GetPassportAuthorizationFormAvailableElements.GetPassportAuthorizationFormAvailableElements
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetPassportAuthorizationFormAvailableElements.GetPassportAuthorizationFormAvailableElements
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetPassportAuthorizationFormAvailableElements.GetPassportAuthorizationFormAvailableElements

module API.Functions.GetPasswordState

-- | Returns the current state of 2-step verification
data GetPasswordState
GetPasswordState :: GetPasswordState
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetPasswordState.GetPasswordState
instance GHC.Show.Show API.Functions.GetPasswordState.GetPasswordState
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetPasswordState.GetPasswordState
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetPasswordState.GetPasswordState

module API.Functions.GetPaymentReceipt

-- | Returns information about a successful payment
--   
--   <b>chat_id</b> Chat identifier of the PaymentSuccessful message
--   
--   <b>message_id</b> Message identifier
data GetPaymentReceipt
GetPaymentReceipt :: Maybe Int -> Maybe Int -> GetPaymentReceipt
[message_id] :: GetPaymentReceipt -> Maybe Int
[chat_id] :: GetPaymentReceipt -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetPaymentReceipt.GetPaymentReceipt
instance GHC.Show.Show API.Functions.GetPaymentReceipt.GetPaymentReceipt
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetPaymentReceipt.GetPaymentReceipt
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetPaymentReceipt.GetPaymentReceipt

module API.Functions.GetPhoneNumberInfo

-- | Returns information about a phone number by its prefix. Can be called
--   before authorization
--   
--   <b>phone_number_prefix</b> The phone number prefix
data GetPhoneNumberInfo
GetPhoneNumberInfo :: Maybe String -> GetPhoneNumberInfo
[phone_number_prefix] :: GetPhoneNumberInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetPhoneNumberInfo.GetPhoneNumberInfo
instance GHC.Show.Show API.Functions.GetPhoneNumberInfo.GetPhoneNumberInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetPhoneNumberInfo.GetPhoneNumberInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetPhoneNumberInfo.GetPhoneNumberInfo

module API.Functions.GetPhoneNumberInfoSync

-- | Returns information about a phone number by its prefix synchronously.
--   getCountries must be called at least once after changing localization
--   to the specified language if properly localized country information is
--   expected. Can be called synchronously
--   
--   <b>language_code</b> A two-letter ISO 639-1 country code for country
--   information localization
--   
--   <b>phone_number_prefix</b> The phone number prefix
data GetPhoneNumberInfoSync
GetPhoneNumberInfoSync :: Maybe String -> Maybe String -> GetPhoneNumberInfoSync
[phone_number_prefix] :: GetPhoneNumberInfoSync -> Maybe String
[language_code] :: GetPhoneNumberInfoSync -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetPhoneNumberInfoSync.GetPhoneNumberInfoSync
instance GHC.Show.Show API.Functions.GetPhoneNumberInfoSync.GetPhoneNumberInfoSync
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetPhoneNumberInfoSync.GetPhoneNumberInfoSync
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetPhoneNumberInfoSync.GetPhoneNumberInfoSync

module API.Functions.GetPollVoters

-- | Returns users voted for the specified option in a non-anonymous polls.
--   For optimal performance, the number of returned users is chosen by
--   TDLib
--   
--   <b>chat_id</b> Identifier of the chat to which the poll belongs
--   
--   <b>message_id</b> Identifier of the message containing the poll
--   
--   <b>option_id</b> 0-based identifier of the answer option
--   
--   <b>offset</b> Number of users to skip in the result; must be
--   non-negative
--   
--   <b>limit</b> The maximum number of users to be returned; must be
--   positive and can't be greater than 50. For optimal performance, the
--   number of returned users is chosen by TDLib and can be smaller than
--   the specified limit, even if the end of the voter list has not been
--   reached
data GetPollVoters
GetPollVoters :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> GetPollVoters
[limit] :: GetPollVoters -> Maybe Int
[offset] :: GetPollVoters -> Maybe Int
[option_id] :: GetPollVoters -> Maybe Int
[message_id] :: GetPollVoters -> Maybe Int
[chat_id] :: GetPollVoters -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetPollVoters.GetPollVoters
instance GHC.Show.Show API.Functions.GetPollVoters.GetPollVoters
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetPollVoters.GetPollVoters
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetPollVoters.GetPollVoters

module API.Functions.GetPreferredCountryLanguage

-- | Returns an IETF language tag of the language preferred in the country,
--   which must be used to fill native fields in Telegram Passport personal
--   details. Returns a 404 error if unknown
--   
--   <b>country_code</b> A two-letter ISO 3166-1 alpha-2 country code
data GetPreferredCountryLanguage
GetPreferredCountryLanguage :: Maybe String -> GetPreferredCountryLanguage
[country_code] :: GetPreferredCountryLanguage -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetPreferredCountryLanguage.GetPreferredCountryLanguage
instance GHC.Show.Show API.Functions.GetPreferredCountryLanguage.GetPreferredCountryLanguage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetPreferredCountryLanguage.GetPreferredCountryLanguage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetPreferredCountryLanguage.GetPreferredCountryLanguage

module API.Functions.GetProxies

-- | Returns list of proxies that are currently set up. Can be called
--   before authorization
data GetProxies
GetProxies :: GetProxies
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetProxies.GetProxies
instance GHC.Show.Show API.Functions.GetProxies.GetProxies
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetProxies.GetProxies
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetProxies.GetProxies

module API.Functions.GetProxyLink

-- | Returns an HTTPS link, which can be used to add a proxy. Available
--   only for SOCKS5 and MTProto proxies. Can be called before
--   authorization
--   
--   <b>proxy_id</b> Proxy identifier
data GetProxyLink
GetProxyLink :: Maybe Int -> GetProxyLink
[proxy_id] :: GetProxyLink -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetProxyLink.GetProxyLink
instance GHC.Show.Show API.Functions.GetProxyLink.GetProxyLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetProxyLink.GetProxyLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetProxyLink.GetProxyLink

module API.Functions.GetPushReceiverId

-- | Returns a globally unique push notification subscription identifier
--   for identification of an account, which has received a push
--   notification. Can be called synchronously
--   
--   <b>payload</b> JSON-encoded push notification payload
data GetPushReceiverId
GetPushReceiverId :: Maybe String -> GetPushReceiverId
[payload] :: GetPushReceiverId -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetPushReceiverId.GetPushReceiverId
instance GHC.Show.Show API.Functions.GetPushReceiverId.GetPushReceiverId
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetPushReceiverId.GetPushReceiverId
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetPushReceiverId.GetPushReceiverId

module API.Functions.GetRecentInlineBots

-- | Returns up to 20 recently used inline bots in the order of their last
--   usage
data GetRecentInlineBots
GetRecentInlineBots :: GetRecentInlineBots
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetRecentInlineBots.GetRecentInlineBots
instance GHC.Show.Show API.Functions.GetRecentInlineBots.GetRecentInlineBots
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetRecentInlineBots.GetRecentInlineBots
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetRecentInlineBots.GetRecentInlineBots

module API.Functions.GetRecentStickers

-- | Returns a list of recently used stickers
--   
--   <b>is_attached</b> Pass true to return stickers and masks that were
--   recently attached to photos or video files; pass false to return
--   recently sent stickers
data GetRecentStickers
GetRecentStickers :: Maybe Bool -> GetRecentStickers
[is_attached] :: GetRecentStickers -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetRecentStickers.GetRecentStickers
instance GHC.Show.Show API.Functions.GetRecentStickers.GetRecentStickers
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetRecentStickers.GetRecentStickers
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetRecentStickers.GetRecentStickers

module API.Functions.GetRecentlyOpenedChats

-- | Returns recently opened chats, this is an offline request. Returns
--   chats in the order of last opening
--   
--   <b>limit</b> The maximum number of chats to be returned
data GetRecentlyOpenedChats
GetRecentlyOpenedChats :: Maybe Int -> GetRecentlyOpenedChats
[limit] :: GetRecentlyOpenedChats -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetRecentlyOpenedChats.GetRecentlyOpenedChats
instance GHC.Show.Show API.Functions.GetRecentlyOpenedChats.GetRecentlyOpenedChats
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetRecentlyOpenedChats.GetRecentlyOpenedChats
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetRecentlyOpenedChats.GetRecentlyOpenedChats

module API.Functions.GetRecentlyVisitedTMeUrls

-- | Returns t.me URLs recently visited by a newly registered user
--   
--   <b>referrer</b> Google Play referrer to identify the user
data GetRecentlyVisitedTMeUrls
GetRecentlyVisitedTMeUrls :: Maybe String -> GetRecentlyVisitedTMeUrls
[referrer] :: GetRecentlyVisitedTMeUrls -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetRecentlyVisitedTMeUrls.GetRecentlyVisitedTMeUrls
instance GHC.Show.Show API.Functions.GetRecentlyVisitedTMeUrls.GetRecentlyVisitedTMeUrls
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetRecentlyVisitedTMeUrls.GetRecentlyVisitedTMeUrls
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetRecentlyVisitedTMeUrls.GetRecentlyVisitedTMeUrls

module API.Functions.GetRecommendedChatFilters

-- | Returns recommended chat filters for the current user
data GetRecommendedChatFilters
GetRecommendedChatFilters :: GetRecommendedChatFilters
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetRecommendedChatFilters.GetRecommendedChatFilters
instance GHC.Show.Show API.Functions.GetRecommendedChatFilters.GetRecommendedChatFilters
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetRecommendedChatFilters.GetRecommendedChatFilters
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetRecommendedChatFilters.GetRecommendedChatFilters

module API.Functions.GetRecoveryEmailAddress

-- | Returns a 2-step verification recovery email address that was
--   previously set up. This method can be used to verify a password
--   provided by the user
--   
--   <b>password</b> The password for the current user
data GetRecoveryEmailAddress
GetRecoveryEmailAddress :: Maybe String -> GetRecoveryEmailAddress
[password] :: GetRecoveryEmailAddress -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetRecoveryEmailAddress.GetRecoveryEmailAddress
instance GHC.Show.Show API.Functions.GetRecoveryEmailAddress.GetRecoveryEmailAddress
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetRecoveryEmailAddress.GetRecoveryEmailAddress
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetRecoveryEmailAddress.GetRecoveryEmailAddress

module API.Functions.GetRemoteFile

-- | Returns information about a file by its remote ID; this is an offline
--   request. Can be used to register a URL as a file for further
--   uploading, or sending as a message. Even the request succeeds, the
--   file can be used only if it is still accessible to the user.
--   
--   <ul>
--   <li>For example, if the file is from a message, then the message must
--   be not deleted and accessible to the user. If the file database is
--   disabled, then the corresponding object with the file must be
--   preloaded by the application</li>
--   </ul>
--   
--   <b>remote_file_id</b> Remote identifier of the file to get
--   
--   <b>file_type</b> File type; pass null if unknown
data GetRemoteFile
GetRemoteFile :: Maybe FileType -> Maybe String -> GetRemoteFile
[file_type] :: GetRemoteFile -> Maybe FileType
[remote_file_id] :: GetRemoteFile -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetRemoteFile.GetRemoteFile
instance GHC.Show.Show API.Functions.GetRemoteFile.GetRemoteFile
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetRemoteFile.GetRemoteFile
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetRemoteFile.GetRemoteFile

module API.Functions.GetRepliedMessage

-- | Returns information about a message that is replied by a given
--   message. Also returns the pinned message, the game message, and the
--   invoice message for messages of the types messagePinMessage,
--   messageGameScore, and messagePaymentSuccessful respectively
--   
--   <b>chat_id</b> Identifier of the chat the message belongs to
--   
--   <b>message_id</b> Identifier of the message reply to which to get
data GetRepliedMessage
GetRepliedMessage :: Maybe Int -> Maybe Int -> GetRepliedMessage
[message_id] :: GetRepliedMessage -> Maybe Int
[chat_id] :: GetRepliedMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetRepliedMessage.GetRepliedMessage
instance GHC.Show.Show API.Functions.GetRepliedMessage.GetRepliedMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetRepliedMessage.GetRepliedMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetRepliedMessage.GetRepliedMessage

module API.Functions.GetSavedAnimations

-- | Returns saved animations
data GetSavedAnimations
GetSavedAnimations :: GetSavedAnimations
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetSavedAnimations.GetSavedAnimations
instance GHC.Show.Show API.Functions.GetSavedAnimations.GetSavedAnimations
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetSavedAnimations.GetSavedAnimations
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetSavedAnimations.GetSavedAnimations

module API.Functions.GetSavedOrderInfo

-- | Returns saved order info, if any
data GetSavedOrderInfo
GetSavedOrderInfo :: GetSavedOrderInfo
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetSavedOrderInfo.GetSavedOrderInfo
instance GHC.Show.Show API.Functions.GetSavedOrderInfo.GetSavedOrderInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetSavedOrderInfo.GetSavedOrderInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetSavedOrderInfo.GetSavedOrderInfo

module API.Functions.GetSecretChat

-- | Returns information about a secret chat by its identifier. This is an
--   offline request
--   
--   <b>secret_chat_id</b> Secret chat identifier
data GetSecretChat
GetSecretChat :: Maybe Int -> GetSecretChat
[secret_chat_id] :: GetSecretChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetSecretChat.GetSecretChat
instance GHC.Show.Show API.Functions.GetSecretChat.GetSecretChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetSecretChat.GetSecretChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetSecretChat.GetSecretChat

module API.Functions.GetStatisticalGraph

-- | Loads an asynchronous or a zoomed in statistical graph
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>token</b> The token for graph loading
--   
--   <b>x</b> X-value for zoomed in graph or 0 otherwise
data GetStatisticalGraph
GetStatisticalGraph :: Maybe Int -> Maybe String -> Maybe Int -> GetStatisticalGraph
[x] :: GetStatisticalGraph -> Maybe Int
[token] :: GetStatisticalGraph -> Maybe String
[chat_id] :: GetStatisticalGraph -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetStatisticalGraph.GetStatisticalGraph
instance GHC.Show.Show API.Functions.GetStatisticalGraph.GetStatisticalGraph
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetStatisticalGraph.GetStatisticalGraph
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetStatisticalGraph.GetStatisticalGraph

module API.Functions.GetStickerSet

-- | Returns information about a sticker set by its identifier
--   
--   <b>set_id</b> Identifier of the sticker set
data GetStickerSet
GetStickerSet :: Maybe Int -> GetStickerSet
[set_id] :: GetStickerSet -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetStickerSet.GetStickerSet
instance GHC.Show.Show API.Functions.GetStickerSet.GetStickerSet
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetStickerSet.GetStickerSet
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetStickerSet.GetStickerSet

module API.Functions.GetStickers

-- | Returns stickers from the installed sticker sets that correspond to a
--   given emoji. If the emoji is non-empty, favorite and recently used
--   stickers may also be returned
--   
--   <b>emoji</b> String representation of emoji. If empty, returns all
--   known installed stickers
--   
--   <b>limit</b> The maximum number of stickers to be returned
data GetStickers
GetStickers :: Maybe Int -> Maybe String -> GetStickers
[limit] :: GetStickers -> Maybe Int
[emoji] :: GetStickers -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetStickers.GetStickers
instance GHC.Show.Show API.Functions.GetStickers.GetStickers
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetStickers.GetStickers
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetStickers.GetStickers

module API.Functions.GetStorageStatistics

-- | Returns storage usage statistics. Can be called before authorization
--   
--   <b>chat_limit</b> The maximum number of chats with the largest storage
--   usage for which separate statistics need to be returned. All other
--   chats will be grouped in entries with chat_id == 0. If the chat info
--   database is not used, the chat_limit is ignored and is always set to 0
data GetStorageStatistics
GetStorageStatistics :: Maybe Int -> GetStorageStatistics
[chat_limit] :: GetStorageStatistics -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetStorageStatistics.GetStorageStatistics
instance GHC.Show.Show API.Functions.GetStorageStatistics.GetStorageStatistics
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetStorageStatistics.GetStorageStatistics
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetStorageStatistics.GetStorageStatistics

module API.Functions.GetStorageStatisticsFast

-- | Quickly returns approximate storage usage statistics. Can be called
--   before authorization
data GetStorageStatisticsFast
GetStorageStatisticsFast :: GetStorageStatisticsFast
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetStorageStatisticsFast.GetStorageStatisticsFast
instance GHC.Show.Show API.Functions.GetStorageStatisticsFast.GetStorageStatisticsFast
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetStorageStatisticsFast.GetStorageStatisticsFast
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetStorageStatisticsFast.GetStorageStatisticsFast

module API.Functions.GetSuggestedFileName

-- | Returns suggested name for saving a file in a given directory
--   
--   <b>file_id</b> Identifier of the file
--   
--   <b>directory</b> Directory in which the file is supposed to be saved
data GetSuggestedFileName
GetSuggestedFileName :: Maybe String -> Maybe Int -> GetSuggestedFileName
[directory] :: GetSuggestedFileName -> Maybe String
[file_id] :: GetSuggestedFileName -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetSuggestedFileName.GetSuggestedFileName
instance GHC.Show.Show API.Functions.GetSuggestedFileName.GetSuggestedFileName
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetSuggestedFileName.GetSuggestedFileName
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetSuggestedFileName.GetSuggestedFileName

module API.Functions.GetSuggestedStickerSetName

-- | Returns a suggested name for a new sticker set with a given title
--   
--   <b>title</b> Sticker set title; 1-64 characters
data GetSuggestedStickerSetName
GetSuggestedStickerSetName :: Maybe String -> GetSuggestedStickerSetName
[title] :: GetSuggestedStickerSetName -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetSuggestedStickerSetName.GetSuggestedStickerSetName
instance GHC.Show.Show API.Functions.GetSuggestedStickerSetName.GetSuggestedStickerSetName
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetSuggestedStickerSetName.GetSuggestedStickerSetName
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetSuggestedStickerSetName.GetSuggestedStickerSetName

module API.Functions.GetSuitableDiscussionChats

-- | Returns a list of basic group and supergroup chats, which can be used
--   as a discussion group for a channel. Returned basic group chats must
--   be first upgraded to supergroups before they can be set as a
--   discussion group. To set a returned supergroup as a discussion group,
--   access to its old messages must be enabled using
--   toggleSupergroupIsAllHistoryAvailable first
data GetSuitableDiscussionChats
GetSuitableDiscussionChats :: GetSuitableDiscussionChats
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetSuitableDiscussionChats.GetSuitableDiscussionChats
instance GHC.Show.Show API.Functions.GetSuitableDiscussionChats.GetSuitableDiscussionChats
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetSuitableDiscussionChats.GetSuitableDiscussionChats
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetSuitableDiscussionChats.GetSuitableDiscussionChats

module API.Functions.GetSupergroup

-- | Returns information about a supergroup or a channel by its identifier.
--   This is an offline request if the current user is not a bot
--   
--   <b>supergroup_id</b> Supergroup or channel identifier
data GetSupergroup
GetSupergroup :: Maybe Int -> GetSupergroup
[supergroup_id] :: GetSupergroup -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetSupergroup.GetSupergroup
instance GHC.Show.Show API.Functions.GetSupergroup.GetSupergroup
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetSupergroup.GetSupergroup
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetSupergroup.GetSupergroup

module API.Functions.GetSupergroupFullInfo

-- | Returns full information about a supergroup or a channel by its
--   identifier, cached for up to 1 minute
--   
--   <b>supergroup_id</b> Supergroup or channel identifier
data GetSupergroupFullInfo
GetSupergroupFullInfo :: Maybe Int -> GetSupergroupFullInfo
[supergroup_id] :: GetSupergroupFullInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetSupergroupFullInfo.GetSupergroupFullInfo
instance GHC.Show.Show API.Functions.GetSupergroupFullInfo.GetSupergroupFullInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetSupergroupFullInfo.GetSupergroupFullInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetSupergroupFullInfo.GetSupergroupFullInfo

module API.Functions.GetSupportUser

-- | Returns a user that can be contacted to get support
data GetSupportUser
GetSupportUser :: GetSupportUser
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetSupportUser.GetSupportUser
instance GHC.Show.Show API.Functions.GetSupportUser.GetSupportUser
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetSupportUser.GetSupportUser
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetSupportUser.GetSupportUser

module API.Functions.GetTemporaryPasswordState

-- | Returns information about the current temporary password
data GetTemporaryPasswordState
GetTemporaryPasswordState :: GetTemporaryPasswordState
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetTemporaryPasswordState.GetTemporaryPasswordState
instance GHC.Show.Show API.Functions.GetTemporaryPasswordState.GetTemporaryPasswordState
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetTemporaryPasswordState.GetTemporaryPasswordState
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetTemporaryPasswordState.GetTemporaryPasswordState

module API.Functions.GetTextEntities

-- | Returns all entities (mentions, hashtags, cashtags, bot commands, bank
--   card numbers, URLs, and email addresses) contained in the text. Can be
--   called synchronously
--   
--   <b>text</b> The text in which to look for entites
data GetTextEntities
GetTextEntities :: Maybe String -> GetTextEntities
[text] :: GetTextEntities -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetTextEntities.GetTextEntities
instance GHC.Show.Show API.Functions.GetTextEntities.GetTextEntities
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetTextEntities.GetTextEntities
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetTextEntities.GetTextEntities

module API.Functions.GetTrendingStickerSets

-- | Returns a list of trending sticker sets. For optimal performance, the
--   number of returned sticker sets is chosen by TDLib
--   
--   <b>offset</b> The offset from which to return the sticker sets; must
--   be non-negative
--   
--   <b>limit</b> The maximum number of sticker sets to be returned; must
--   be non-negative. For optimal performance, the number of returned
--   sticker sets is chosen by TDLib and can be smaller than the specified
--   limit, even if the end of the list has not been reached
data GetTrendingStickerSets
GetTrendingStickerSets :: Maybe Int -> Maybe Int -> GetTrendingStickerSets
[limit] :: GetTrendingStickerSets -> Maybe Int
[offset] :: GetTrendingStickerSets -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetTrendingStickerSets.GetTrendingStickerSets
instance GHC.Show.Show API.Functions.GetTrendingStickerSets.GetTrendingStickerSets
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetTrendingStickerSets.GetTrendingStickerSets
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetTrendingStickerSets.GetTrendingStickerSets

module API.Functions.GetUser

-- | Returns information about a user by their identifier. This is an
--   offline request if the current user is not a bot
--   
--   <b>user_id</b> User identifier
data GetUser
GetUser :: Maybe Int -> GetUser
[user_id] :: GetUser -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetUser.GetUser
instance GHC.Show.Show API.Functions.GetUser.GetUser
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetUser.GetUser
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetUser.GetUser

module API.Functions.GetUserFullInfo

-- | Returns full information about a user by their identifier
--   
--   <b>user_id</b> User identifier
data GetUserFullInfo
GetUserFullInfo :: Maybe Int -> GetUserFullInfo
[user_id] :: GetUserFullInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetUserFullInfo.GetUserFullInfo
instance GHC.Show.Show API.Functions.GetUserFullInfo.GetUserFullInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetUserFullInfo.GetUserFullInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetUserFullInfo.GetUserFullInfo

module API.Functions.GetUserProfilePhotos

-- | Returns the profile photos of a user. The result of this query may be
--   outdated: some photos might have been deleted already
--   
--   <b>user_id</b> User identifier
--   
--   <b>offset</b> The number of photos to skip; must be non-negative
--   
--   <b>limit</b> The maximum number of photos to be returned; up to 100
data GetUserProfilePhotos
GetUserProfilePhotos :: Maybe Int -> Maybe Int -> Maybe Int -> GetUserProfilePhotos
[limit] :: GetUserProfilePhotos -> Maybe Int
[offset] :: GetUserProfilePhotos -> Maybe Int
[user_id] :: GetUserProfilePhotos -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetUserProfilePhotos.GetUserProfilePhotos
instance GHC.Show.Show API.Functions.GetUserProfilePhotos.GetUserProfilePhotos
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetUserProfilePhotos.GetUserProfilePhotos
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetUserProfilePhotos.GetUserProfilePhotos

module API.Functions.GetVoiceChatAvailableParticipants

-- | Returns list of participant identifiers, which can be used to join
--   voice chats in a chat
--   
--   <b>chat_id</b> Chat identifier
data GetVoiceChatAvailableParticipants
GetVoiceChatAvailableParticipants :: Maybe Int -> GetVoiceChatAvailableParticipants
[chat_id] :: GetVoiceChatAvailableParticipants -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetVoiceChatAvailableParticipants.GetVoiceChatAvailableParticipants
instance GHC.Show.Show API.Functions.GetVoiceChatAvailableParticipants.GetVoiceChatAvailableParticipants
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetVoiceChatAvailableParticipants.GetVoiceChatAvailableParticipants
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetVoiceChatAvailableParticipants.GetVoiceChatAvailableParticipants

module API.Functions.GetWebPageInstantView

-- | Returns an instant view version of a web page if available. Returns a
--   404 error if the web page has no instant view page
--   
--   <b>url</b> The web page URL
--   
--   <b>force_full</b> If true, the full instant view for the web page will
--   be returned
data GetWebPageInstantView
GetWebPageInstantView :: Maybe Bool -> Maybe String -> GetWebPageInstantView
[force_full] :: GetWebPageInstantView -> Maybe Bool
[url] :: GetWebPageInstantView -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetWebPageInstantView.GetWebPageInstantView
instance GHC.Show.Show API.Functions.GetWebPageInstantView.GetWebPageInstantView
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetWebPageInstantView.GetWebPageInstantView
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetWebPageInstantView.GetWebPageInstantView

module API.Functions.GetWebPagePreview

-- | Returns a web page preview by the text of the message. Do not call
--   this function too often. Returns a 404 error if the web page has no
--   preview
--   
--   <b>text</b> Message text with formatting
data GetWebPagePreview
GetWebPagePreview :: Maybe FormattedText -> GetWebPagePreview
[text] :: GetWebPagePreview -> Maybe FormattedText
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetWebPagePreview.GetWebPagePreview
instance GHC.Show.Show API.Functions.GetWebPagePreview.GetWebPagePreview
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetWebPagePreview.GetWebPagePreview
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetWebPagePreview.GetWebPagePreview

module API.Functions.ImportContacts

-- | Adds new contacts or edits existing contacts by their phone numbers;
--   contacts' user identifiers are ignored
--   
--   <b>contacts</b> The list of contacts to import or edit; contacts'
--   vCard are ignored and are not imported
data ImportContacts
ImportContacts :: Maybe [Contact] -> ImportContacts
[contacts] :: ImportContacts -> Maybe [Contact]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ImportContacts.ImportContacts
instance GHC.Show.Show API.Functions.ImportContacts.ImportContacts
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ImportContacts.ImportContacts
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ImportContacts.ImportContacts

module API.Functions.InviteGroupCallParticipants

-- | Invites users to an active group call. Sends a service message of type
--   messageInviteToGroupCall for voice chats
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>user_ids</b> User identifiers. At most 10 users can be invited
--   simultaneously
data InviteGroupCallParticipants
InviteGroupCallParticipants :: Maybe [Int] -> Maybe Int -> InviteGroupCallParticipants
[user_ids] :: InviteGroupCallParticipants -> Maybe [Int]
[group_call_id] :: InviteGroupCallParticipants -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.InviteGroupCallParticipants.InviteGroupCallParticipants
instance GHC.Show.Show API.Functions.InviteGroupCallParticipants.InviteGroupCallParticipants
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.InviteGroupCallParticipants.InviteGroupCallParticipants
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.InviteGroupCallParticipants.InviteGroupCallParticipants

module API.Functions.JoinChat

-- | Adds the current user as a new member to a chat. Private and secret
--   chats can't be joined using this method
--   
--   <b>chat_id</b> Chat identifier
data JoinChat
JoinChat :: Maybe Int -> JoinChat
[chat_id] :: JoinChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.JoinChat.JoinChat
instance GHC.Show.Show API.Functions.JoinChat.JoinChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.JoinChat.JoinChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.JoinChat.JoinChat

module API.Functions.JoinChatByInviteLink

-- | Uses an invite link to add the current user to the chat if possible
--   
--   <b>invite_link</b> Invite link to use
data JoinChatByInviteLink
JoinChatByInviteLink :: Maybe String -> JoinChatByInviteLink
[invite_link] :: JoinChatByInviteLink -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.JoinChatByInviteLink.JoinChatByInviteLink
instance GHC.Show.Show API.Functions.JoinChatByInviteLink.JoinChatByInviteLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.JoinChatByInviteLink.JoinChatByInviteLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.JoinChatByInviteLink.JoinChatByInviteLink

module API.Functions.LeaveChat

-- | Removes the current user from chat members. Private and secret chats
--   can't be left using this method
--   
--   <b>chat_id</b> Chat identifier
data LeaveChat
LeaveChat :: Maybe Int -> LeaveChat
[chat_id] :: LeaveChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.LeaveChat.LeaveChat
instance GHC.Show.Show API.Functions.LeaveChat.LeaveChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.LeaveChat.LeaveChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.LeaveChat.LeaveChat

module API.Functions.LeaveGroupCall

-- | Leaves a group call
--   
--   <b>group_call_id</b> Group call identifier
data LeaveGroupCall
LeaveGroupCall :: Maybe Int -> LeaveGroupCall
[group_call_id] :: LeaveGroupCall -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.LeaveGroupCall.LeaveGroupCall
instance GHC.Show.Show API.Functions.LeaveGroupCall.LeaveGroupCall
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.LeaveGroupCall.LeaveGroupCall
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.LeaveGroupCall.LeaveGroupCall

module API.Functions.LoadChats

-- | Loads more chats from a chat list. The loaded chats and their
--   positions in the chat list will be sent through updates. Chats are
--   sorted by the pair (chat.position.order, chat.id) in descending order.
--   Returns a 404 error if all chats has been loaded
--   
--   <b>chat_list</b> The chat list in which to load chats; pass null to
--   load chats from the main chat list
--   
--   <b>limit</b> The maximum number of chats to be loaded. For optimal
--   performance, the number of loaded chats is chosen by TDLib and can be
--   smaller than the specified limit, even if the end of the list is not
--   reached
data LoadChats
LoadChats :: Maybe Int -> Maybe ChatList -> LoadChats
[limit] :: LoadChats -> Maybe Int
[chat_list] :: LoadChats -> Maybe ChatList
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.LoadChats.LoadChats
instance GHC.Show.Show API.Functions.LoadChats.LoadChats
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.LoadChats.LoadChats
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.LoadChats.LoadChats

module API.Functions.LoadGroupCallParticipants

-- | Loads more participants of a group call. The loaded participants will
--   be received through updates. Use the field
--   groupCall.loaded_all_participants to check whether all participants
--   has already been loaded
--   
--   <b>group_call_id</b> Group call identifier. The group call must be
--   previously received through getGroupCall and must be joined or being
--   joined
--   
--   <b>limit</b> The maximum number of participants to load
data LoadGroupCallParticipants
LoadGroupCallParticipants :: Maybe Int -> Maybe Int -> LoadGroupCallParticipants
[limit] :: LoadGroupCallParticipants -> Maybe Int
[group_call_id] :: LoadGroupCallParticipants -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.LoadGroupCallParticipants.LoadGroupCallParticipants
instance GHC.Show.Show API.Functions.LoadGroupCallParticipants.LoadGroupCallParticipants
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.LoadGroupCallParticipants.LoadGroupCallParticipants
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.LoadGroupCallParticipants.LoadGroupCallParticipants

module API.Functions.LogOut

-- | Closes the TDLib instance after a proper logout. Requires an available
--   network connection. All local data will be destroyed. After the logout
--   completes, updateAuthorizationState with authorizationStateClosed will
--   be sent
data LogOut
LogOut :: LogOut
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.LogOut.LogOut
instance GHC.Show.Show API.Functions.LogOut.LogOut
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.LogOut.LogOut
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.LogOut.LogOut

module API.Functions.OpenChat

-- | Informs TDLib that the chat is opened by the user. Many useful
--   activities depend on the chat being opened or closed (e.g., in
--   supergroups and channels all updates are received only for opened
--   chats)
--   
--   <b>chat_id</b> Chat identifier
data OpenChat
OpenChat :: Maybe Int -> OpenChat
[chat_id] :: OpenChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.OpenChat.OpenChat
instance GHC.Show.Show API.Functions.OpenChat.OpenChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.OpenChat.OpenChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.OpenChat.OpenChat

module API.Functions.OpenMessageContent

-- | Informs TDLib that the message content has been opened (e.g., the user
--   has opened a photo, video, document, location or venue, or has
--   listened to an audio file or voice note message). An
--   updateMessageContentOpened update will be generated if something has
--   changed
--   
--   <b>chat_id</b> Chat identifier of the message
--   
--   <b>message_id</b> Identifier of the message with the opened content
data OpenMessageContent
OpenMessageContent :: Maybe Int -> Maybe Int -> OpenMessageContent
[message_id] :: OpenMessageContent -> Maybe Int
[chat_id] :: OpenMessageContent -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.OpenMessageContent.OpenMessageContent
instance GHC.Show.Show API.Functions.OpenMessageContent.OpenMessageContent
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.OpenMessageContent.OpenMessageContent
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.OpenMessageContent.OpenMessageContent

module API.Functions.OptimizeStorage

-- | Optimizes storage usage, i.e. deletes some files and returns new
--   storage usage statistics. Secret thumbnails can't be deleted
--   
--   <b>size</b> Limit on the total size of files after deletion, in bytes.
--   Pass -1 to use the default limit
--   
--   <b>ttl</b> Limit on the time that has passed since the last time a
--   file was accessed (or creation time for some filesystems). Pass -1 to
--   use the default limit
--   
--   <b>count</b> Limit on the total count of files after deletion. Pass -1
--   to use the default limit
--   
--   <b>immunity_delay</b> The amount of time after the creation of a file
--   during which it can't be deleted, in seconds. Pass -1 to use the
--   default value
--   
--   <b>file_types</b> If non-empty, only files with the given types are
--   considered. By default, all types except thumbnails, profile photos,
--   stickers and wallpapers are deleted
--   
--   <b>chat_ids</b> If non-empty, only files from the given chats are
--   considered. Use 0 as chat identifier to delete files not belonging to
--   any chat (e.g., profile photos)
--   
--   <b>exclude_chat_ids</b> If non-empty, files from the given chats are
--   excluded. Use 0 as chat identifier to exclude all files not belonging
--   to any chat (e.g., profile photos)
--   
--   <b>return_deleted_file_statistics</b> Pass true if statistics about
--   the files that were deleted must be returned instead of the whole
--   storage usage statistics. Affects only returned statistics
--   
--   <b>chat_limit</b> Same as in getStorageStatistics. Affects only
--   returned statistics
data OptimizeStorage
OptimizeStorage :: Maybe Int -> Maybe Bool -> Maybe [Int] -> Maybe [Int] -> Maybe [FileType] -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> OptimizeStorage
[chat_limit] :: OptimizeStorage -> Maybe Int
[return_deleted_file_statistics] :: OptimizeStorage -> Maybe Bool
[exclude_chat_ids] :: OptimizeStorage -> Maybe [Int]
[chat_ids] :: OptimizeStorage -> Maybe [Int]
[file_types] :: OptimizeStorage -> Maybe [FileType]
[immunity_delay] :: OptimizeStorage -> Maybe Int
[count] :: OptimizeStorage -> Maybe Int
[ttl] :: OptimizeStorage -> Maybe Int
[size] :: OptimizeStorage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.OptimizeStorage.OptimizeStorage
instance GHC.Show.Show API.Functions.OptimizeStorage.OptimizeStorage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.OptimizeStorage.OptimizeStorage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.OptimizeStorage.OptimizeStorage

module API.Functions.ParseMarkdown

-- | Parses Markdown entities in a human-friendly format, ignoring markup
--   errors. Can be called synchronously
--   
--   <b>text</b> The text to parse. For example, "<b>italic</b>
--   ~~strikethrough~~ **bold** <tt>code</tt> `<tt>`pre`</tt>`
--   <b>[italic</b> text_url](telegram.org) <b>italic**bold
--   italic</b>bold**"
data ParseMarkdown
ParseMarkdown :: Maybe FormattedText -> ParseMarkdown
[text] :: ParseMarkdown -> Maybe FormattedText
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ParseMarkdown.ParseMarkdown
instance GHC.Show.Show API.Functions.ParseMarkdown.ParseMarkdown
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ParseMarkdown.ParseMarkdown
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ParseMarkdown.ParseMarkdown

module API.Functions.PinChatMessage

-- | Pins a message in a chat; requires can_pin_messages rights or
--   can_edit_messages rights in the channel
--   
--   <b>chat_id</b> Identifier of the chat
--   
--   <b>message_id</b> Identifier of the new pinned message
--   
--   <b>disable_notification</b> True, if there must be no notification
--   about the pinned message. Notifications are always disabled in
--   channels and private chats
--   
--   <b>only_for_self</b> True, if the message needs to be pinned for one
--   side only; private chats only
data PinChatMessage
PinChatMessage :: Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe Int -> PinChatMessage
[only_for_self] :: PinChatMessage -> Maybe Bool
[disable_notification] :: PinChatMessage -> Maybe Bool
[message_id] :: PinChatMessage -> Maybe Int
[chat_id] :: PinChatMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.PinChatMessage.PinChatMessage
instance GHC.Show.Show API.Functions.PinChatMessage.PinChatMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.PinChatMessage.PinChatMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.PinChatMessage.PinChatMessage

module API.Functions.PingProxy

-- | Computes time needed to receive a response from a Telegram server
--   through a proxy. Can be called before authorization
--   
--   <b>proxy_id</b> Proxy identifier. Use 0 to ping a Telegram server
--   without a proxy
data PingProxy
PingProxy :: Maybe Int -> PingProxy
[proxy_id] :: PingProxy -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.PingProxy.PingProxy
instance GHC.Show.Show API.Functions.PingProxy.PingProxy
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.PingProxy.PingProxy
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.PingProxy.PingProxy

module API.Functions.ProcessPushNotification

-- | Handles a push notification. Returns error with code 406 if the push
--   notification is not supported and connection to the server is required
--   to fetch new data. Can be called before authorization
--   
--   <b>payload</b> JSON-encoded push notification payload with all fields
--   sent by the server, and "google.sent_time" and
--   "google.notification.sound" fields added
data ProcessPushNotification
ProcessPushNotification :: Maybe String -> ProcessPushNotification
[payload] :: ProcessPushNotification -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ProcessPushNotification.ProcessPushNotification
instance GHC.Show.Show API.Functions.ProcessPushNotification.ProcessPushNotification
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ProcessPushNotification.ProcessPushNotification
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ProcessPushNotification.ProcessPushNotification

module API.Functions.ReadAllChatMentions

-- | Marks all mentions in a chat as read
--   
--   <b>chat_id</b> Chat identifier
data ReadAllChatMentions
ReadAllChatMentions :: Maybe Int -> ReadAllChatMentions
[chat_id] :: ReadAllChatMentions -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ReadAllChatMentions.ReadAllChatMentions
instance GHC.Show.Show API.Functions.ReadAllChatMentions.ReadAllChatMentions
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ReadAllChatMentions.ReadAllChatMentions
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ReadAllChatMentions.ReadAllChatMentions

module API.Functions.ReadFilePart

-- | Reads a part of a file from the TDLib file cache and returns read
--   bytes. This method is intended to be used only if the application has
--   no direct access to TDLib's file system, because it is usually slower
--   than a direct read from the file
--   
--   <b>file_id</b> Identifier of the file. The file must be located in the
--   TDLib file cache
--   
--   <b>offset</b> The offset from which to read the file
--   
--   <b>count</b> Number of bytes to read. An error will be returned if
--   there are not enough bytes available in the file from the specified
--   position. Pass 0 to read all available data from the specified
--   position
data ReadFilePart
ReadFilePart :: Maybe Int -> Maybe Int -> Maybe Int -> ReadFilePart
[count] :: ReadFilePart -> Maybe Int
[offset] :: ReadFilePart -> Maybe Int
[file_id] :: ReadFilePart -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ReadFilePart.ReadFilePart
instance GHC.Show.Show API.Functions.ReadFilePart.ReadFilePart
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ReadFilePart.ReadFilePart
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ReadFilePart.ReadFilePart

module API.Functions.RecoverAuthenticationPassword

-- | Recovers the password with a password recovery code sent to an email
--   address that was previously set up. Works only when the current
--   authorization state is authorizationStateWaitPassword
--   
--   <b>recovery_code</b> Recovery code to check
--   
--   <b>new_password</b> New password of the user; may be empty to remove
--   the password
--   
--   <b>new_hint</b> New password hint; may be empty
data RecoverAuthenticationPassword
RecoverAuthenticationPassword :: Maybe String -> Maybe String -> Maybe String -> RecoverAuthenticationPassword
[new_hint] :: RecoverAuthenticationPassword -> Maybe String
[new_password] :: RecoverAuthenticationPassword -> Maybe String
[recovery_code] :: RecoverAuthenticationPassword -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RecoverAuthenticationPassword.RecoverAuthenticationPassword
instance GHC.Show.Show API.Functions.RecoverAuthenticationPassword.RecoverAuthenticationPassword
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RecoverAuthenticationPassword.RecoverAuthenticationPassword
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RecoverAuthenticationPassword.RecoverAuthenticationPassword

module API.Functions.RecoverPassword

-- | Recovers the 2-step verification password using a recovery code sent
--   to an email address that was previously set up
--   
--   <b>recovery_code</b> Recovery code to check
--   
--   <b>new_password</b> New password of the user; may be empty to remove
--   the password
--   
--   <b>new_hint</b> New password hint; may be empty
data RecoverPassword
RecoverPassword :: Maybe String -> Maybe String -> Maybe String -> RecoverPassword
[new_hint] :: RecoverPassword -> Maybe String
[new_password] :: RecoverPassword -> Maybe String
[recovery_code] :: RecoverPassword -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RecoverPassword.RecoverPassword
instance GHC.Show.Show API.Functions.RecoverPassword.RecoverPassword
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RecoverPassword.RecoverPassword
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RecoverPassword.RecoverPassword

module API.Functions.RegisterDevice

-- | Registers the currently used device for receiving push notifications.
--   Returns a globally unique identifier of the push notification
--   subscription
--   
--   <b>device_token</b> Device token
--   
--   <b>other_user_ids</b> List of user identifiers of other users
--   currently using the application
data RegisterDevice
RegisterDevice :: Maybe [Int] -> Maybe DeviceToken -> RegisterDevice
[other_user_ids] :: RegisterDevice -> Maybe [Int]
[device_token] :: RegisterDevice -> Maybe DeviceToken
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RegisterDevice.RegisterDevice
instance GHC.Show.Show API.Functions.RegisterDevice.RegisterDevice
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RegisterDevice.RegisterDevice
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RegisterDevice.RegisterDevice

module API.Functions.RegisterUser

-- | Finishes user registration. Works only when the current authorization
--   state is authorizationStateWaitRegistration
--   
--   <b>first_name</b> The first name of the user; 1-64 characters
--   
--   <b>last_name</b> The last name of the user; 0-64 characters
data RegisterUser
RegisterUser :: Maybe String -> Maybe String -> RegisterUser
[last_name] :: RegisterUser -> Maybe String
[first_name] :: RegisterUser -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RegisterUser.RegisterUser
instance GHC.Show.Show API.Functions.RegisterUser.RegisterUser
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RegisterUser.RegisterUser
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RegisterUser.RegisterUser

module API.Functions.RemoveBackground

-- | Removes background from the list of installed backgrounds
--   
--   <b>background_id</b> The background identifier
data RemoveBackground
RemoveBackground :: Maybe Int -> RemoveBackground
[background_id] :: RemoveBackground -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RemoveBackground.RemoveBackground
instance GHC.Show.Show API.Functions.RemoveBackground.RemoveBackground
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RemoveBackground.RemoveBackground
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RemoveBackground.RemoveBackground

module API.Functions.RemoveChatActionBar

-- | Removes a chat action bar without any other action
--   
--   <b>chat_id</b> Chat identifier
data RemoveChatActionBar
RemoveChatActionBar :: Maybe Int -> RemoveChatActionBar
[chat_id] :: RemoveChatActionBar -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RemoveChatActionBar.RemoveChatActionBar
instance GHC.Show.Show API.Functions.RemoveChatActionBar.RemoveChatActionBar
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RemoveChatActionBar.RemoveChatActionBar
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RemoveChatActionBar.RemoveChatActionBar

module API.Functions.RemoveContacts

-- | Removes users from the contact list
--   
--   <b>user_ids</b> Identifiers of users to be deleted
data RemoveContacts
RemoveContacts :: Maybe [Int] -> RemoveContacts
[user_ids] :: RemoveContacts -> Maybe [Int]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RemoveContacts.RemoveContacts
instance GHC.Show.Show API.Functions.RemoveContacts.RemoveContacts
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RemoveContacts.RemoveContacts
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RemoveContacts.RemoveContacts

module API.Functions.RemoveNotification

-- | Removes an active notification from notification list. Needs to be
--   called only if the notification is removed by the current user
--   
--   <b>notification_group_id</b> Identifier of notification group to which
--   the notification belongs
--   
--   <b>notification_id</b> Identifier of removed notification
data RemoveNotification
RemoveNotification :: Maybe Int -> Maybe Int -> RemoveNotification
[notification_id] :: RemoveNotification -> Maybe Int
[notification_group_id] :: RemoveNotification -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RemoveNotification.RemoveNotification
instance GHC.Show.Show API.Functions.RemoveNotification.RemoveNotification
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RemoveNotification.RemoveNotification
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RemoveNotification.RemoveNotification

module API.Functions.RemoveNotificationGroup

-- | Removes a group of active notifications. Needs to be called only if
--   the notification group is removed by the current user
--   
--   <b>notification_group_id</b> Notification group identifier
--   
--   <b>max_notification_id</b> The maximum identifier of removed
--   notifications
data RemoveNotificationGroup
RemoveNotificationGroup :: Maybe Int -> Maybe Int -> RemoveNotificationGroup
[max_notification_id] :: RemoveNotificationGroup -> Maybe Int
[notification_group_id] :: RemoveNotificationGroup -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RemoveNotificationGroup.RemoveNotificationGroup
instance GHC.Show.Show API.Functions.RemoveNotificationGroup.RemoveNotificationGroup
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RemoveNotificationGroup.RemoveNotificationGroup
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RemoveNotificationGroup.RemoveNotificationGroup

module API.Functions.RemoveProxy

-- | Removes a proxy server. Can be called before authorization
--   
--   <b>proxy_id</b> Proxy identifier
data RemoveProxy
RemoveProxy :: Maybe Int -> RemoveProxy
[proxy_id] :: RemoveProxy -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RemoveProxy.RemoveProxy
instance GHC.Show.Show API.Functions.RemoveProxy.RemoveProxy
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RemoveProxy.RemoveProxy
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RemoveProxy.RemoveProxy

module API.Functions.RemoveRecentHashtag

-- | Removes a hashtag from the list of recently used hashtags
--   
--   <b>hashtag</b> Hashtag to delete
data RemoveRecentHashtag
RemoveRecentHashtag :: Maybe String -> RemoveRecentHashtag
[hashtag] :: RemoveRecentHashtag -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RemoveRecentHashtag.RemoveRecentHashtag
instance GHC.Show.Show API.Functions.RemoveRecentHashtag.RemoveRecentHashtag
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RemoveRecentHashtag.RemoveRecentHashtag
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RemoveRecentHashtag.RemoveRecentHashtag

module API.Functions.RemoveRecentlyFoundChat

-- | Removes a chat from the list of recently found chats
--   
--   <b>chat_id</b> Identifier of the chat to be removed
data RemoveRecentlyFoundChat
RemoveRecentlyFoundChat :: Maybe Int -> RemoveRecentlyFoundChat
[chat_id] :: RemoveRecentlyFoundChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RemoveRecentlyFoundChat.RemoveRecentlyFoundChat
instance GHC.Show.Show API.Functions.RemoveRecentlyFoundChat.RemoveRecentlyFoundChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RemoveRecentlyFoundChat.RemoveRecentlyFoundChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RemoveRecentlyFoundChat.RemoveRecentlyFoundChat

module API.Functions.ReorderChatFilters

-- | Changes the order of chat filters
--   
--   <b>chat_filter_ids</b> Identifiers of chat filters in the new correct
--   order
data ReorderChatFilters
ReorderChatFilters :: Maybe [Int] -> ReorderChatFilters
[chat_filter_ids] :: ReorderChatFilters -> Maybe [Int]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ReorderChatFilters.ReorderChatFilters
instance GHC.Show.Show API.Functions.ReorderChatFilters.ReorderChatFilters
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ReorderChatFilters.ReorderChatFilters
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ReorderChatFilters.ReorderChatFilters

module API.Functions.ReorderInstalledStickerSets

-- | Changes the order of installed sticker sets
--   
--   <b>is_masks</b> Pass true to change the order of mask sticker sets;
--   pass false to change the order of ordinary sticker sets
--   
--   <b>sticker_set_ids</b> Identifiers of installed sticker sets in the
--   new correct order
data ReorderInstalledStickerSets
ReorderInstalledStickerSets :: Maybe [Int] -> Maybe Bool -> ReorderInstalledStickerSets
[sticker_set_ids] :: ReorderInstalledStickerSets -> Maybe [Int]
[is_masks] :: ReorderInstalledStickerSets -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ReorderInstalledStickerSets.ReorderInstalledStickerSets
instance GHC.Show.Show API.Functions.ReorderInstalledStickerSets.ReorderInstalledStickerSets
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ReorderInstalledStickerSets.ReorderInstalledStickerSets
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ReorderInstalledStickerSets.ReorderInstalledStickerSets

module API.Functions.ReplacePrimaryChatInviteLink

-- | Replaces current primary invite link for a chat with a new primary
--   invite link. Available for basic groups, supergroups, and channels.
--   Requires administrator privileges and can_invite_users right
--   
--   <b>chat_id</b> Chat identifier
data ReplacePrimaryChatInviteLink
ReplacePrimaryChatInviteLink :: Maybe Int -> ReplacePrimaryChatInviteLink
[chat_id] :: ReplacePrimaryChatInviteLink -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ReplacePrimaryChatInviteLink.ReplacePrimaryChatInviteLink
instance GHC.Show.Show API.Functions.ReplacePrimaryChatInviteLink.ReplacePrimaryChatInviteLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ReplacePrimaryChatInviteLink.ReplacePrimaryChatInviteLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ReplacePrimaryChatInviteLink.ReplacePrimaryChatInviteLink

module API.Functions.ReportChat

-- | Reports a chat to the Telegram moderators. A chat can be reported only
--   from the chat action bar, or if this is a private chat with a bot, a
--   private chat with a user sharing their location, a supergroup, or a
--   channel, since other chats can't be checked by moderators
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_ids</b> Identifiers of reported messages, if any
--   
--   <b>reason</b> The reason for reporting the chat
--   
--   <b>text</b> Additional report details; 0-1024 characters
data ReportChat
ReportChat :: Maybe String -> Maybe ChatReportReason -> Maybe [Int] -> Maybe Int -> ReportChat
[text] :: ReportChat -> Maybe String
[reason] :: ReportChat -> Maybe ChatReportReason
[message_ids] :: ReportChat -> Maybe [Int]
[chat_id] :: ReportChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ReportChat.ReportChat
instance GHC.Show.Show API.Functions.ReportChat.ReportChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ReportChat.ReportChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ReportChat.ReportChat

module API.Functions.ReportChatPhoto

-- | Reports a chat photo to the Telegram moderators. A chat photo can be
--   reported only if this is a private chat with a bot, a private chat
--   with a user sharing their location, a supergroup, or a channel, since
--   other chats can't be checked by moderators
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>file_id</b> Identifier of the photo to report. Only full photos
--   from chatPhoto can be reported
--   
--   <b>reason</b> The reason for reporting the chat photo
--   
--   <b>text</b> Additional report details; 0-1024 characters
data ReportChatPhoto
ReportChatPhoto :: Maybe String -> Maybe ChatReportReason -> Maybe Int -> Maybe Int -> ReportChatPhoto
[text] :: ReportChatPhoto -> Maybe String
[reason] :: ReportChatPhoto -> Maybe ChatReportReason
[file_id] :: ReportChatPhoto -> Maybe Int
[chat_id] :: ReportChatPhoto -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ReportChatPhoto.ReportChatPhoto
instance GHC.Show.Show API.Functions.ReportChatPhoto.ReportChatPhoto
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ReportChatPhoto.ReportChatPhoto
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ReportChatPhoto.ReportChatPhoto

module API.Functions.ReportSupergroupSpam

-- | Reports some messages from a user in a supergroup as spam; requires
--   administrator rights in the supergroup
--   
--   <b>supergroup_id</b> Supergroup identifier
--   
--   <b>user_id</b> User identifier
--   
--   <b>message_ids</b> Identifiers of messages sent in the supergroup by
--   the user. This list must be non-empty
data ReportSupergroupSpam
ReportSupergroupSpam :: Maybe [Int] -> Maybe Int -> Maybe Int -> ReportSupergroupSpam
[message_ids] :: ReportSupergroupSpam -> Maybe [Int]
[user_id] :: ReportSupergroupSpam -> Maybe Int
[supergroup_id] :: ReportSupergroupSpam -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ReportSupergroupSpam.ReportSupergroupSpam
instance GHC.Show.Show API.Functions.ReportSupergroupSpam.ReportSupergroupSpam
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ReportSupergroupSpam.ReportSupergroupSpam
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ReportSupergroupSpam.ReportSupergroupSpam

module API.Functions.RequestAuthenticationPasswordRecovery

-- | Requests to send a password recovery code to an email address that was
--   previously set up. Works only when the current authorization state is
--   authorizationStateWaitPassword
data RequestAuthenticationPasswordRecovery
RequestAuthenticationPasswordRecovery :: RequestAuthenticationPasswordRecovery
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RequestAuthenticationPasswordRecovery.RequestAuthenticationPasswordRecovery
instance GHC.Show.Show API.Functions.RequestAuthenticationPasswordRecovery.RequestAuthenticationPasswordRecovery
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RequestAuthenticationPasswordRecovery.RequestAuthenticationPasswordRecovery
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RequestAuthenticationPasswordRecovery.RequestAuthenticationPasswordRecovery

module API.Functions.RequestPasswordRecovery

-- | Requests to send a 2-step verification password recovery code to an
--   email address that was previously set up
data RequestPasswordRecovery
RequestPasswordRecovery :: RequestPasswordRecovery
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RequestPasswordRecovery.RequestPasswordRecovery
instance GHC.Show.Show API.Functions.RequestPasswordRecovery.RequestPasswordRecovery
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RequestPasswordRecovery.RequestPasswordRecovery
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RequestPasswordRecovery.RequestPasswordRecovery

module API.Functions.RequestQrCodeAuthentication

-- | Requests QR code authentication by scanning a QR code on another
--   logged in device. Works only when the current authorization state is
--   authorizationStateWaitPhoneNumber,
--   
--   <ul>
--   <li>or if there is no pending authentication query and the current
--   authorization state is authorizationStateWaitCode,
--   authorizationStateWaitRegistration, or
--   authorizationStateWaitPassword</li>
--   </ul>
--   
--   <b>other_user_ids</b> List of user identifiers of other users
--   currently using the application
data RequestQrCodeAuthentication
RequestQrCodeAuthentication :: Maybe [Int] -> RequestQrCodeAuthentication
[other_user_ids] :: RequestQrCodeAuthentication -> Maybe [Int]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RequestQrCodeAuthentication.RequestQrCodeAuthentication
instance GHC.Show.Show API.Functions.RequestQrCodeAuthentication.RequestQrCodeAuthentication
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RequestQrCodeAuthentication.RequestQrCodeAuthentication
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RequestQrCodeAuthentication.RequestQrCodeAuthentication

module API.Functions.ResendAuthenticationCode

-- | Re-sends an authentication code to the user. Works only when the
--   current authorization state is authorizationStateWaitCode, the
--   next_code_type of the result is not null and the server-specified
--   timeout has passed
data ResendAuthenticationCode
ResendAuthenticationCode :: ResendAuthenticationCode
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ResendAuthenticationCode.ResendAuthenticationCode
instance GHC.Show.Show API.Functions.ResendAuthenticationCode.ResendAuthenticationCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ResendAuthenticationCode.ResendAuthenticationCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ResendAuthenticationCode.ResendAuthenticationCode

module API.Functions.ResendChangePhoneNumberCode

-- | Re-sends the authentication code sent to confirm a new phone number
--   for the current user. Works only if the previously received
--   authenticationCodeInfo next_code_type was not null and the
--   server-specified timeout has passed
data ResendChangePhoneNumberCode
ResendChangePhoneNumberCode :: ResendChangePhoneNumberCode
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ResendChangePhoneNumberCode.ResendChangePhoneNumberCode
instance GHC.Show.Show API.Functions.ResendChangePhoneNumberCode.ResendChangePhoneNumberCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ResendChangePhoneNumberCode.ResendChangePhoneNumberCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ResendChangePhoneNumberCode.ResendChangePhoneNumberCode

module API.Functions.ResendEmailAddressVerificationCode

-- | Re-sends the code to verify an email address to be added to a user's
--   Telegram Passport
data ResendEmailAddressVerificationCode
ResendEmailAddressVerificationCode :: ResendEmailAddressVerificationCode
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ResendEmailAddressVerificationCode.ResendEmailAddressVerificationCode
instance GHC.Show.Show API.Functions.ResendEmailAddressVerificationCode.ResendEmailAddressVerificationCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ResendEmailAddressVerificationCode.ResendEmailAddressVerificationCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ResendEmailAddressVerificationCode.ResendEmailAddressVerificationCode

module API.Functions.ResendMessages

-- | Resends messages which failed to send. Can be called only for messages
--   for which messageSendingStateFailed.can_retry is true and after
--   specified in messageSendingStateFailed.retry_after time passed.
--   
--   <ul>
--   <li>If a message is re-sent, the corresponding failed to send message
--   is deleted. Returns the sent messages in the same order as the message
--   identifiers passed in message_ids. If a message can't be re-sent, null
--   will be returned instead of the message</li>
--   </ul>
--   
--   <b>chat_id</b> Identifier of the chat to send messages
--   
--   <b>message_ids</b> Identifiers of the messages to resend. Message
--   identifiers must be in a strictly increasing order
data ResendMessages
ResendMessages :: Maybe [Int] -> Maybe Int -> ResendMessages
[message_ids] :: ResendMessages -> Maybe [Int]
[chat_id] :: ResendMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ResendMessages.ResendMessages
instance GHC.Show.Show API.Functions.ResendMessages.ResendMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ResendMessages.ResendMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ResendMessages.ResendMessages

module API.Functions.ResendPhoneNumberConfirmationCode

-- | Resends phone number confirmation code
data ResendPhoneNumberConfirmationCode
ResendPhoneNumberConfirmationCode :: ResendPhoneNumberConfirmationCode
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ResendPhoneNumberConfirmationCode.ResendPhoneNumberConfirmationCode
instance GHC.Show.Show API.Functions.ResendPhoneNumberConfirmationCode.ResendPhoneNumberConfirmationCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ResendPhoneNumberConfirmationCode.ResendPhoneNumberConfirmationCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ResendPhoneNumberConfirmationCode.ResendPhoneNumberConfirmationCode

module API.Functions.ResendPhoneNumberVerificationCode

-- | Re-sends the code to verify a phone number to be added to a user's
--   Telegram Passport
data ResendPhoneNumberVerificationCode
ResendPhoneNumberVerificationCode :: ResendPhoneNumberVerificationCode
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ResendPhoneNumberVerificationCode.ResendPhoneNumberVerificationCode
instance GHC.Show.Show API.Functions.ResendPhoneNumberVerificationCode.ResendPhoneNumberVerificationCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ResendPhoneNumberVerificationCode.ResendPhoneNumberVerificationCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ResendPhoneNumberVerificationCode.ResendPhoneNumberVerificationCode

module API.Functions.ResendRecoveryEmailAddressCode

-- | Resends the 2-step verification recovery email address verification
--   code
data ResendRecoveryEmailAddressCode
ResendRecoveryEmailAddressCode :: ResendRecoveryEmailAddressCode
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ResendRecoveryEmailAddressCode.ResendRecoveryEmailAddressCode
instance GHC.Show.Show API.Functions.ResendRecoveryEmailAddressCode.ResendRecoveryEmailAddressCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ResendRecoveryEmailAddressCode.ResendRecoveryEmailAddressCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ResendRecoveryEmailAddressCode.ResendRecoveryEmailAddressCode

module API.Functions.ResetAllNotificationSettings

-- | Resets all notification settings to their default values. By default,
--   all chats are unmuted, the sound is set to "default" and message
--   previews are shown
data ResetAllNotificationSettings
ResetAllNotificationSettings :: ResetAllNotificationSettings
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ResetAllNotificationSettings.ResetAllNotificationSettings
instance GHC.Show.Show API.Functions.ResetAllNotificationSettings.ResetAllNotificationSettings
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ResetAllNotificationSettings.ResetAllNotificationSettings
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ResetAllNotificationSettings.ResetAllNotificationSettings

module API.Functions.ResetBackgrounds

-- | Resets list of installed backgrounds to its default value
data ResetBackgrounds
ResetBackgrounds :: ResetBackgrounds
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ResetBackgrounds.ResetBackgrounds
instance GHC.Show.Show API.Functions.ResetBackgrounds.ResetBackgrounds
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ResetBackgrounds.ResetBackgrounds
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ResetBackgrounds.ResetBackgrounds

module API.Functions.ResetNetworkStatistics

-- | Resets all network data usage statistics to zero. Can be called before
--   authorization
data ResetNetworkStatistics
ResetNetworkStatistics :: ResetNetworkStatistics
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ResetNetworkStatistics.ResetNetworkStatistics
instance GHC.Show.Show API.Functions.ResetNetworkStatistics.ResetNetworkStatistics
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ResetNetworkStatistics.ResetNetworkStatistics
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ResetNetworkStatistics.ResetNetworkStatistics

module API.Functions.ResetPassword

-- | Removes 2-step verification password without previous password and
--   access to recovery email address. The password can't be reset
--   immediately and the request needs to be repeated after the specified
--   time
data ResetPassword
ResetPassword :: ResetPassword
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ResetPassword.ResetPassword
instance GHC.Show.Show API.Functions.ResetPassword.ResetPassword
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ResetPassword.ResetPassword
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ResetPassword.ResetPassword

module API.Functions.RevokeChatInviteLink

-- | Revokes invite link for a chat. Available for basic groups,
--   supergroups, and channels. Requires administrator privileges and
--   can_invite_users right in the chat for own links and owner privileges
--   for other links.
--   
--   <ul>
--   <li>If a primary link is revoked, then additionally to the revoked
--   link returns new primary link</li>
--   </ul>
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>invite_link</b> Invite link to be revoked
data RevokeChatInviteLink
RevokeChatInviteLink :: Maybe String -> Maybe Int -> RevokeChatInviteLink
[invite_link] :: RevokeChatInviteLink -> Maybe String
[chat_id] :: RevokeChatInviteLink -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RevokeChatInviteLink.RevokeChatInviteLink
instance GHC.Show.Show API.Functions.RevokeChatInviteLink.RevokeChatInviteLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RevokeChatInviteLink.RevokeChatInviteLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RevokeChatInviteLink.RevokeChatInviteLink

module API.Functions.RevokeGroupCallInviteLink

-- | Revokes invite link for a group call. Requires
--   groupCall.can_be_managed group call flag
--   
--   <b>group_call_id</b> Group call identifier
data RevokeGroupCallInviteLink
RevokeGroupCallInviteLink :: Maybe Int -> RevokeGroupCallInviteLink
[group_call_id] :: RevokeGroupCallInviteLink -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RevokeGroupCallInviteLink.RevokeGroupCallInviteLink
instance GHC.Show.Show API.Functions.RevokeGroupCallInviteLink.RevokeGroupCallInviteLink
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RevokeGroupCallInviteLink.RevokeGroupCallInviteLink
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RevokeGroupCallInviteLink.RevokeGroupCallInviteLink

module API.Functions.SearchBackground

-- | Searches for a background by its name
--   
--   <b>name</b> The name of the background
data SearchBackground
SearchBackground :: Maybe String -> SearchBackground
[name] :: SearchBackground -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchBackground.SearchBackground
instance GHC.Show.Show API.Functions.SearchBackground.SearchBackground
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchBackground.SearchBackground
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchBackground.SearchBackground

module API.Functions.SearchCallMessages

-- | Searches for call messages. Returns the results in reverse
--   chronological order (i. e., in order of decreasing message_id). For
--   optimal performance, the number of returned messages is chosen by
--   TDLib
--   
--   <b>from_message_id</b> Identifier of the message from which to search;
--   use 0 to get results from the last message
--   
--   <b>limit</b> The maximum number of messages to be returned; up to 100.
--   For optimal performance, the number of returned messages is chosen by
--   TDLib and can be smaller than the specified limit
--   
--   <b>only_missed</b> If true, returns only messages with missed calls
data SearchCallMessages
SearchCallMessages :: Maybe Bool -> Maybe Int -> Maybe Int -> SearchCallMessages
[only_missed] :: SearchCallMessages -> Maybe Bool
[limit] :: SearchCallMessages -> Maybe Int
[from_message_id] :: SearchCallMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchCallMessages.SearchCallMessages
instance GHC.Show.Show API.Functions.SearchCallMessages.SearchCallMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchCallMessages.SearchCallMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchCallMessages.SearchCallMessages

module API.Functions.SearchChatMembers

-- | Searches for a specified query in the first name, last name and
--   username of the members of a specified chat. Requires administrator
--   rights in channels
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>query</b> Query to search for
--   
--   <b>limit</b> The maximum number of users to be returned
--   
--   <b>filter</b> The type of users to search for; pass null to search
--   among all chat members
data SearchChatMembers
SearchChatMembers :: Maybe ChatMembersFilter -> Maybe Int -> Maybe String -> Maybe Int -> SearchChatMembers
[_filter] :: SearchChatMembers -> Maybe ChatMembersFilter
[limit] :: SearchChatMembers -> Maybe Int
[query] :: SearchChatMembers -> Maybe String
[chat_id] :: SearchChatMembers -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchChatMembers.SearchChatMembers
instance GHC.Show.Show API.Functions.SearchChatMembers.SearchChatMembers
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchChatMembers.SearchChatMembers
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchChatMembers.SearchChatMembers

module API.Functions.SearchChatRecentLocationMessages

-- | Returns information about the recent locations of chat members that
--   were sent to the chat. Returns up to 1 location message per user
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>limit</b> The maximum number of messages to be returned
data SearchChatRecentLocationMessages
SearchChatRecentLocationMessages :: Maybe Int -> Maybe Int -> SearchChatRecentLocationMessages
[limit] :: SearchChatRecentLocationMessages -> Maybe Int
[chat_id] :: SearchChatRecentLocationMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchChatRecentLocationMessages.SearchChatRecentLocationMessages
instance GHC.Show.Show API.Functions.SearchChatRecentLocationMessages.SearchChatRecentLocationMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchChatRecentLocationMessages.SearchChatRecentLocationMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchChatRecentLocationMessages.SearchChatRecentLocationMessages

module API.Functions.SearchChats

-- | Searches for the specified query in the title and username of already
--   known chats, this is an offline request. Returns chats in the order
--   seen in the main chat list
--   
--   <b>query</b> Query to search for. If the query is empty, returns up to
--   50 recently found chats
--   
--   <b>limit</b> The maximum number of chats to be returned
data SearchChats
SearchChats :: Maybe Int -> Maybe String -> SearchChats
[limit] :: SearchChats -> Maybe Int
[query] :: SearchChats -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchChats.SearchChats
instance GHC.Show.Show API.Functions.SearchChats.SearchChats
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchChats.SearchChats
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchChats.SearchChats

module API.Functions.SearchChatsOnServer

-- | Searches for the specified query in the title and username of already
--   known chats via request to the server. Returns chats in the order seen
--   in the main chat list
--   
--   <b>query</b> Query to search for
--   
--   <b>limit</b> The maximum number of chats to be returned
data SearchChatsOnServer
SearchChatsOnServer :: Maybe Int -> Maybe String -> SearchChatsOnServer
[limit] :: SearchChatsOnServer -> Maybe Int
[query] :: SearchChatsOnServer -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchChatsOnServer.SearchChatsOnServer
instance GHC.Show.Show API.Functions.SearchChatsOnServer.SearchChatsOnServer
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchChatsOnServer.SearchChatsOnServer
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchChatsOnServer.SearchChatsOnServer

module API.Functions.SearchContacts

-- | Searches for the specified query in the first names, last names and
--   usernames of the known user contacts
--   
--   <b>query</b> Query to search for; may be empty to return all contacts
--   
--   <b>limit</b> The maximum number of users to be returned
data SearchContacts
SearchContacts :: Maybe Int -> Maybe String -> SearchContacts
[limit] :: SearchContacts -> Maybe Int
[query] :: SearchContacts -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchContacts.SearchContacts
instance GHC.Show.Show API.Functions.SearchContacts.SearchContacts
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchContacts.SearchContacts
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchContacts.SearchContacts

module API.Functions.SearchEmojis

-- | Searches for emojis by keywords. Supported only if the file database
--   is enabled
--   
--   <b>text</b> Text to search for
--   
--   <b>exact_match</b> True, if only emojis, which exactly match text
--   needs to be returned
--   
--   <b>input_language_codes</b> List of possible IETF language tags of the
--   user's input language; may be empty if unknown
data SearchEmojis
SearchEmojis :: Maybe [String] -> Maybe Bool -> Maybe String -> SearchEmojis
[input_language_codes] :: SearchEmojis -> Maybe [String]
[exact_match] :: SearchEmojis -> Maybe Bool
[text] :: SearchEmojis -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchEmojis.SearchEmojis
instance GHC.Show.Show API.Functions.SearchEmojis.SearchEmojis
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchEmojis.SearchEmojis
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchEmojis.SearchEmojis

module API.Functions.SearchHashtags

-- | Searches for recently used hashtags by their prefix
--   
--   <b>prefix</b> Hashtag prefix to search for
--   
--   <b>limit</b> The maximum number of hashtags to be returned
data SearchHashtags
SearchHashtags :: Maybe Int -> Maybe String -> SearchHashtags
[limit] :: SearchHashtags -> Maybe Int
[prefix] :: SearchHashtags -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchHashtags.SearchHashtags
instance GHC.Show.Show API.Functions.SearchHashtags.SearchHashtags
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchHashtags.SearchHashtags
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchHashtags.SearchHashtags

module API.Functions.SearchInstalledStickerSets

-- | Searches for installed sticker sets by looking for specified query in
--   their title and name
--   
--   <b>is_masks</b> Pass true to return mask sticker sets; pass false to
--   return ordinary sticker sets
--   
--   <b>query</b> Query to search for
--   
--   <b>limit</b> The maximum number of sticker sets to return
data SearchInstalledStickerSets
SearchInstalledStickerSets :: Maybe Int -> Maybe String -> Maybe Bool -> SearchInstalledStickerSets
[limit] :: SearchInstalledStickerSets -> Maybe Int
[query] :: SearchInstalledStickerSets -> Maybe String
[is_masks] :: SearchInstalledStickerSets -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchInstalledStickerSets.SearchInstalledStickerSets
instance GHC.Show.Show API.Functions.SearchInstalledStickerSets.SearchInstalledStickerSets
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchInstalledStickerSets.SearchInstalledStickerSets
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchInstalledStickerSets.SearchInstalledStickerSets

module API.Functions.SearchPublicChat

-- | Searches a public chat by its username. Currently only private chats,
--   supergroups and channels can be public. Returns the chat if found;
--   otherwise an error is returned
--   
--   <b>username</b> Username to be resolved
data SearchPublicChat
SearchPublicChat :: Maybe String -> SearchPublicChat
[username] :: SearchPublicChat -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchPublicChat.SearchPublicChat
instance GHC.Show.Show API.Functions.SearchPublicChat.SearchPublicChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchPublicChat.SearchPublicChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchPublicChat.SearchPublicChat

module API.Functions.SearchPublicChats

-- | Searches public chats by looking for specified query in their username
--   and title. Currently only private chats, supergroups and channels can
--   be public. Returns a meaningful number of results.
--   
--   <ul>
--   <li>Excludes private chats with contacts and chats from the chat list
--   from the results</li>
--   </ul>
--   
--   <b>query</b> Query to search for
data SearchPublicChats
SearchPublicChats :: Maybe String -> SearchPublicChats
[query] :: SearchPublicChats -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchPublicChats.SearchPublicChats
instance GHC.Show.Show API.Functions.SearchPublicChats.SearchPublicChats
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchPublicChats.SearchPublicChats
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchPublicChats.SearchPublicChats

module API.Functions.SearchStickerSet

-- | Searches for a sticker set by its name
--   
--   <b>name</b> Name of the sticker set
data SearchStickerSet
SearchStickerSet :: Maybe String -> SearchStickerSet
[name] :: SearchStickerSet -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchStickerSet.SearchStickerSet
instance GHC.Show.Show API.Functions.SearchStickerSet.SearchStickerSet
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchStickerSet.SearchStickerSet
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchStickerSet.SearchStickerSet

module API.Functions.SearchStickerSets

-- | Searches for ordinary sticker sets by looking for specified query in
--   their title and name. Excludes installed sticker sets from the results
--   
--   <b>query</b> Query to search for
data SearchStickerSets
SearchStickerSets :: Maybe String -> SearchStickerSets
[query] :: SearchStickerSets -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchStickerSets.SearchStickerSets
instance GHC.Show.Show API.Functions.SearchStickerSets.SearchStickerSets
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchStickerSets.SearchStickerSets
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchStickerSets.SearchStickerSets

module API.Functions.SearchStickers

-- | Searches for stickers from public sticker sets that correspond to a
--   given emoji
--   
--   <b>emoji</b> String representation of emoji; must be non-empty
--   
--   <b>limit</b> The maximum number of stickers to be returned
data SearchStickers
SearchStickers :: Maybe Int -> Maybe String -> SearchStickers
[limit] :: SearchStickers -> Maybe Int
[emoji] :: SearchStickers -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchStickers.SearchStickers
instance GHC.Show.Show API.Functions.SearchStickers.SearchStickers
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchStickers.SearchStickers
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchStickers.SearchStickers

module API.Functions.SendBotStartMessage

-- | Invites a bot to a chat (if it is not yet a member) and sends it the
--   /start command. Bots can't be invited to a private chat other than the
--   chat with the bot. Bots can't be invited to channels (although they
--   can be added as admins) and secret chats. Returns the sent message
--   
--   <b>bot_user_id</b> Identifier of the bot
--   
--   <b>chat_id</b> Identifier of the target chat
--   
--   <b>parameter</b> A hidden parameter sent to the bot for deep linking
--   purposes (https:/<i>core.telegram.org</i>bots#deep-linking)
data SendBotStartMessage
SendBotStartMessage :: Maybe String -> Maybe Int -> Maybe Int -> SendBotStartMessage
[parameter] :: SendBotStartMessage -> Maybe String
[chat_id] :: SendBotStartMessage -> Maybe Int
[bot_user_id] :: SendBotStartMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendBotStartMessage.SendBotStartMessage
instance GHC.Show.Show API.Functions.SendBotStartMessage.SendBotStartMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendBotStartMessage.SendBotStartMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendBotStartMessage.SendBotStartMessage

module API.Functions.SendCallDebugInformation

-- | Sends debug information for a call
--   
--   <b>call_id</b> Call identifier
--   
--   <b>debug_information</b> Debug information in application-specific
--   format
data SendCallDebugInformation
SendCallDebugInformation :: Maybe String -> Maybe Int -> SendCallDebugInformation
[debug_information] :: SendCallDebugInformation -> Maybe String
[call_id] :: SendCallDebugInformation -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendCallDebugInformation.SendCallDebugInformation
instance GHC.Show.Show API.Functions.SendCallDebugInformation.SendCallDebugInformation
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendCallDebugInformation.SendCallDebugInformation
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendCallDebugInformation.SendCallDebugInformation

module API.Functions.SendCallRating

-- | Sends a call rating
--   
--   <b>call_id</b> Call identifier
--   
--   <b>rating</b> Call rating; 1-5
--   
--   <b>comment</b> An optional user comment if the rating is less than 5
--   
--   <b>problems</b> List of the exact types of problems with the call,
--   specified by the user
data SendCallRating
SendCallRating :: Maybe [CallProblem] -> Maybe String -> Maybe Int -> Maybe Int -> SendCallRating
[problems] :: SendCallRating -> Maybe [CallProblem]
[comment] :: SendCallRating -> Maybe String
[rating] :: SendCallRating -> Maybe Int
[call_id] :: SendCallRating -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendCallRating.SendCallRating
instance GHC.Show.Show API.Functions.SendCallRating.SendCallRating
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendCallRating.SendCallRating
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendCallRating.SendCallRating

module API.Functions.SendCallSignalingData

-- | Sends call signaling data
--   
--   <b>call_id</b> Call identifier
--   
--   <b>data</b> The data
data SendCallSignalingData
SendCallSignalingData :: Maybe String -> Maybe Int -> SendCallSignalingData
[_data] :: SendCallSignalingData -> Maybe String
[call_id] :: SendCallSignalingData -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendCallSignalingData.SendCallSignalingData
instance GHC.Show.Show API.Functions.SendCallSignalingData.SendCallSignalingData
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendCallSignalingData.SendCallSignalingData
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendCallSignalingData.SendCallSignalingData

module API.Functions.SendChatAction

-- | Sends a notification about user activity in a chat
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_thread_id</b> If not 0, a message thread identifier in
--   which the action was performed
--   
--   <b>action</b> The action description; pass null to cancel the
--   currently active action
data SendChatAction
SendChatAction :: Maybe ChatAction -> Maybe Int -> Maybe Int -> SendChatAction
[action] :: SendChatAction -> Maybe ChatAction
[message_thread_id] :: SendChatAction -> Maybe Int
[chat_id] :: SendChatAction -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendChatAction.SendChatAction
instance GHC.Show.Show API.Functions.SendChatAction.SendChatAction
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendChatAction.SendChatAction
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendChatAction.SendChatAction

module API.Functions.SendChatScreenshotTakenNotification

-- | Sends a notification about a screenshot taken in a chat. Supported
--   only in private and secret chats
--   
--   <b>chat_id</b> Chat identifier
data SendChatScreenshotTakenNotification
SendChatScreenshotTakenNotification :: Maybe Int -> SendChatScreenshotTakenNotification
[chat_id] :: SendChatScreenshotTakenNotification -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendChatScreenshotTakenNotification.SendChatScreenshotTakenNotification
instance GHC.Show.Show API.Functions.SendChatScreenshotTakenNotification.SendChatScreenshotTakenNotification
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendChatScreenshotTakenNotification.SendChatScreenshotTakenNotification
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendChatScreenshotTakenNotification.SendChatScreenshotTakenNotification

module API.Functions.SendCustomRequest

-- | Sends a custom request; for bots only
--   
--   <b>method</b> The method name
--   
--   <b>parameters</b> JSON-serialized method parameters
data SendCustomRequest
SendCustomRequest :: Maybe String -> Maybe String -> SendCustomRequest
[parameters] :: SendCustomRequest -> Maybe String
[method] :: SendCustomRequest -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendCustomRequest.SendCustomRequest
instance GHC.Show.Show API.Functions.SendCustomRequest.SendCustomRequest
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendCustomRequest.SendCustomRequest
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendCustomRequest.SendCustomRequest

module API.Functions.SendEmailAddressVerificationCode

-- | Sends a code to verify an email address to be added to a user's
--   Telegram Passport
--   
--   <b>email_address</b> Email address
data SendEmailAddressVerificationCode
SendEmailAddressVerificationCode :: Maybe String -> SendEmailAddressVerificationCode
[email_address] :: SendEmailAddressVerificationCode -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendEmailAddressVerificationCode.SendEmailAddressVerificationCode
instance GHC.Show.Show API.Functions.SendEmailAddressVerificationCode.SendEmailAddressVerificationCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendEmailAddressVerificationCode.SendEmailAddressVerificationCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendEmailAddressVerificationCode.SendEmailAddressVerificationCode

module API.Functions.SetAccountTtl

-- | Changes the period of inactivity after which the account of the
--   current user will automatically be deleted
--   
--   <b>ttl</b> New account TTL
data SetAccountTtl
SetAccountTtl :: Maybe AccountTtl -> SetAccountTtl
[ttl] :: SetAccountTtl -> Maybe AccountTtl
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetAccountTtl.SetAccountTtl
instance GHC.Show.Show API.Functions.SetAccountTtl.SetAccountTtl
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetAccountTtl.SetAccountTtl
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetAccountTtl.SetAccountTtl

module API.Functions.SetAlarm

-- | Succeeds after a specified amount of time has passed. Can be called
--   before initialization
--   
--   <b>seconds</b> Number of seconds before the function returns
data SetAlarm
SetAlarm :: Maybe Float -> SetAlarm
[seconds] :: SetAlarm -> Maybe Float
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetAlarm.SetAlarm
instance GHC.Show.Show API.Functions.SetAlarm.SetAlarm
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetAlarm.SetAlarm
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetAlarm.SetAlarm

module API.Functions.SetBio

-- | Changes the bio of the current user
--   
--   <b>bio</b> The new value of the user bio; 0-70 characters without line
--   feeds
data SetBio
SetBio :: Maybe String -> SetBio
[bio] :: SetBio -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetBio.SetBio
instance GHC.Show.Show API.Functions.SetBio.SetBio
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetBio.SetBio
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetBio.SetBio

module API.Functions.SetBotUpdatesStatus

-- | Informs the server about the number of pending bot updates if they
--   haven't been processed for a long time; for bots only
--   
--   <b>pending_update_count</b> The number of pending updates
--   
--   <b>error_message</b> The last error message
data SetBotUpdatesStatus
SetBotUpdatesStatus :: Maybe String -> Maybe Int -> SetBotUpdatesStatus
[error_message] :: SetBotUpdatesStatus -> Maybe String
[pending_update_count] :: SetBotUpdatesStatus -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetBotUpdatesStatus.SetBotUpdatesStatus
instance GHC.Show.Show API.Functions.SetBotUpdatesStatus.SetBotUpdatesStatus
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetBotUpdatesStatus.SetBotUpdatesStatus
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetBotUpdatesStatus.SetBotUpdatesStatus

module API.Functions.SetChatClientData

-- | Changes application-specific data associated with a chat
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>client_data</b> New value of client_data
data SetChatClientData
SetChatClientData :: Maybe String -> Maybe Int -> SetChatClientData
[client_data] :: SetChatClientData -> Maybe String
[chat_id] :: SetChatClientData -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetChatClientData.SetChatClientData
instance GHC.Show.Show API.Functions.SetChatClientData.SetChatClientData
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetChatClientData.SetChatClientData
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetChatClientData.SetChatClientData

module API.Functions.SetChatDescription

-- | Changes information about a chat. Available for basic groups,
--   supergroups, and channels. Requires can_change_info administrator
--   right
--   
--   <b>chat_id</b> Identifier of the chat
--   
--   <b>param_description</b> New chat description; 0-255 characters
data SetChatDescription
SetChatDescription :: Maybe String -> Maybe Int -> SetChatDescription
[description] :: SetChatDescription -> Maybe String
[chat_id] :: SetChatDescription -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetChatDescription.SetChatDescription
instance GHC.Show.Show API.Functions.SetChatDescription.SetChatDescription
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetChatDescription.SetChatDescription
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetChatDescription.SetChatDescription

module API.Functions.SetChatDiscussionGroup

-- | Changes the discussion group of a channel chat; requires
--   can_change_info administrator right in the channel if it is specified
--   
--   <b>chat_id</b> Identifier of the channel chat. Pass 0 to remove a link
--   from the supergroup passed in the second argument to a linked channel
--   chat (requires can_pin_messages rights in the supergroup)
--   
--   <b>discussion_chat_id</b> Identifier of a new channel's discussion
--   group. Use 0 to remove the discussion group.
--   
--   <ul>
--   <li>Use the method getSuitableDiscussionChats to find all suitable
--   groups. Basic group chats must be first upgraded to supergroup chats.
--   If new chat members don't have access to old messages in the
--   supergroup, then toggleSupergroupIsAllHistoryAvailable must be used
--   first to change that</li>
--   </ul>
data SetChatDiscussionGroup
SetChatDiscussionGroup :: Maybe Int -> Maybe Int -> SetChatDiscussionGroup
[discussion_chat_id] :: SetChatDiscussionGroup -> Maybe Int
[chat_id] :: SetChatDiscussionGroup -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetChatDiscussionGroup.SetChatDiscussionGroup
instance GHC.Show.Show API.Functions.SetChatDiscussionGroup.SetChatDiscussionGroup
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetChatDiscussionGroup.SetChatDiscussionGroup
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetChatDiscussionGroup.SetChatDiscussionGroup

module API.Functions.SetChatDraftMessage

-- | Changes the draft message in a chat
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_thread_id</b> If not 0, a message thread identifier in
--   which the draft was changed
--   
--   <b>draft_message</b> New draft message; pass null to remove the draft
data SetChatDraftMessage
SetChatDraftMessage :: Maybe DraftMessage -> Maybe Int -> Maybe Int -> SetChatDraftMessage
[draft_message] :: SetChatDraftMessage -> Maybe DraftMessage
[message_thread_id] :: SetChatDraftMessage -> Maybe Int
[chat_id] :: SetChatDraftMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetChatDraftMessage.SetChatDraftMessage
instance GHC.Show.Show API.Functions.SetChatDraftMessage.SetChatDraftMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetChatDraftMessage.SetChatDraftMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetChatDraftMessage.SetChatDraftMessage

module API.Functions.SetChatLocation

-- | Changes the location of a chat. Available only for some location-based
--   supergroups, use supergroupFullInfo.can_set_location to check whether
--   the method is allowed to use
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>location</b> New location for the chat; must be valid and not null
data SetChatLocation
SetChatLocation :: Maybe ChatLocation -> Maybe Int -> SetChatLocation
[location] :: SetChatLocation -> Maybe ChatLocation
[chat_id] :: SetChatLocation -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetChatLocation.SetChatLocation
instance GHC.Show.Show API.Functions.SetChatLocation.SetChatLocation
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetChatLocation.SetChatLocation
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetChatLocation.SetChatLocation

module API.Functions.SetChatMessageTtlSetting

-- | Changes the message TTL setting (sets a new self-destruct timer) in a
--   chat. Requires can_delete_messages administrator right in basic
--   groups, supergroups and channels
--   
--   <ul>
--   <li>Message TTL setting of a chat with the current user (Saved
--   Messages) and the chat 777000 (Telegram) can't be changed</li>
--   </ul>
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>ttl</b> New TTL value, in seconds; must be one of 0, 86400, 7 *
--   86400, or 31 * 86400 unless the chat is secret
data SetChatMessageTtlSetting
SetChatMessageTtlSetting :: Maybe Int -> Maybe Int -> SetChatMessageTtlSetting
[ttl] :: SetChatMessageTtlSetting -> Maybe Int
[chat_id] :: SetChatMessageTtlSetting -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetChatMessageTtlSetting.SetChatMessageTtlSetting
instance GHC.Show.Show API.Functions.SetChatMessageTtlSetting.SetChatMessageTtlSetting
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetChatMessageTtlSetting.SetChatMessageTtlSetting
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetChatMessageTtlSetting.SetChatMessageTtlSetting

module API.Functions.SetChatNotificationSettings

-- | Changes the notification settings of a chat. Notification settings of
--   a chat with the current user (Saved Messages) can't be changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>notification_settings</b> New notification settings for the chat.
--   If the chat is muted for more than 1 week, it is considered to be
--   muted forever
data SetChatNotificationSettings
SetChatNotificationSettings :: Maybe ChatNotificationSettings -> Maybe Int -> SetChatNotificationSettings
[notification_settings] :: SetChatNotificationSettings -> Maybe ChatNotificationSettings
[chat_id] :: SetChatNotificationSettings -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetChatNotificationSettings.SetChatNotificationSettings
instance GHC.Show.Show API.Functions.SetChatNotificationSettings.SetChatNotificationSettings
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetChatNotificationSettings.SetChatNotificationSettings
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetChatNotificationSettings.SetChatNotificationSettings

module API.Functions.SetChatPermissions

-- | Changes the chat members permissions. Supported only for basic groups
--   and supergroups. Requires can_restrict_members administrator right
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>permissions</b> New non-administrator members permissions in the
--   chat
data SetChatPermissions
SetChatPermissions :: Maybe ChatPermissions -> Maybe Int -> SetChatPermissions
[permissions] :: SetChatPermissions -> Maybe ChatPermissions
[chat_id] :: SetChatPermissions -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetChatPermissions.SetChatPermissions
instance GHC.Show.Show API.Functions.SetChatPermissions.SetChatPermissions
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetChatPermissions.SetChatPermissions
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetChatPermissions.SetChatPermissions

module API.Functions.SetChatSlowModeDelay

-- | Changes the slow mode delay of a chat. Available only for supergroups;
--   requires can_restrict_members rights
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>slow_mode_delay</b> New slow mode delay for the chat; must be one
--   of 0, 10, 30, 60, 300, 900, 3600
data SetChatSlowModeDelay
SetChatSlowModeDelay :: Maybe Int -> Maybe Int -> SetChatSlowModeDelay
[slow_mode_delay] :: SetChatSlowModeDelay -> Maybe Int
[chat_id] :: SetChatSlowModeDelay -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetChatSlowModeDelay.SetChatSlowModeDelay
instance GHC.Show.Show API.Functions.SetChatSlowModeDelay.SetChatSlowModeDelay
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetChatSlowModeDelay.SetChatSlowModeDelay
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetChatSlowModeDelay.SetChatSlowModeDelay

module API.Functions.SetChatTheme

-- | Changes the chat theme. Supported only in private and secret chats
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>theme_name</b> Name of the new chat theme; pass an empty string to
--   return the default theme
data SetChatTheme
SetChatTheme :: Maybe String -> Maybe Int -> SetChatTheme
[theme_name] :: SetChatTheme -> Maybe String
[chat_id] :: SetChatTheme -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetChatTheme.SetChatTheme
instance GHC.Show.Show API.Functions.SetChatTheme.SetChatTheme
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetChatTheme.SetChatTheme
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetChatTheme.SetChatTheme

module API.Functions.SetChatTitle

-- | Changes the chat title. Supported only for basic groups, supergroups
--   and channels. Requires can_change_info administrator right
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>title</b> New title of the chat; 1-128 characters
data SetChatTitle
SetChatTitle :: Maybe String -> Maybe Int -> SetChatTitle
[title] :: SetChatTitle -> Maybe String
[chat_id] :: SetChatTitle -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetChatTitle.SetChatTitle
instance GHC.Show.Show API.Functions.SetChatTitle.SetChatTitle
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetChatTitle.SetChatTitle
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetChatTitle.SetChatTitle

module API.Functions.SetCommands

-- | Sets the list of commands supported by the bot for the given user
--   scope and language; for bots only
--   
--   <b>scope</b> The scope to which the commands are relevant; pass null
--   to change commands in the default bot command scope
--   
--   <b>language_code</b> A two-letter ISO 639-1 country code. If empty,
--   the commands will be applied to all users from the given scope, for
--   which language there are no dedicated commands
--   
--   <b>commands</b> List of the bot's commands
data SetCommands
SetCommands :: Maybe [BotCommand] -> Maybe String -> Maybe BotCommandScope -> SetCommands
[commands] :: SetCommands -> Maybe [BotCommand]
[language_code] :: SetCommands -> Maybe String
[scope] :: SetCommands -> Maybe BotCommandScope
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetCommands.SetCommands
instance GHC.Show.Show API.Functions.SetCommands.SetCommands
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetCommands.SetCommands
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetCommands.SetCommands

module API.Functions.SetDatabaseEncryptionKey

-- | Changes the database encryption key. Usually the encryption key is
--   never changed and is stored in some OS keychain
--   
--   <b>new_encryption_key</b> New encryption key
data SetDatabaseEncryptionKey
SetDatabaseEncryptionKey :: Maybe String -> SetDatabaseEncryptionKey
[new_encryption_key] :: SetDatabaseEncryptionKey -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetDatabaseEncryptionKey.SetDatabaseEncryptionKey
instance GHC.Show.Show API.Functions.SetDatabaseEncryptionKey.SetDatabaseEncryptionKey
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetDatabaseEncryptionKey.SetDatabaseEncryptionKey
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetDatabaseEncryptionKey.SetDatabaseEncryptionKey

module API.Functions.SetFileGenerationProgress

-- | Informs TDLib on a file generation progress
--   
--   <b>generation_id</b> The identifier of the generation process
--   
--   <b>expected_size</b> Expected size of the generated file, in bytes; 0
--   if unknown
--   
--   <b>local_prefix_size</b> The number of bytes already generated
data SetFileGenerationProgress
SetFileGenerationProgress :: Maybe Int -> Maybe Int -> Maybe Int -> SetFileGenerationProgress
[local_prefix_size] :: SetFileGenerationProgress -> Maybe Int
[expected_size] :: SetFileGenerationProgress -> Maybe Int
[generation_id] :: SetFileGenerationProgress -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetFileGenerationProgress.SetFileGenerationProgress
instance GHC.Show.Show API.Functions.SetFileGenerationProgress.SetFileGenerationProgress
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetFileGenerationProgress.SetFileGenerationProgress
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetFileGenerationProgress.SetFileGenerationProgress

module API.Functions.SetGameScore

-- | Updates the game score of the specified user in the game; for bots
--   only
--   
--   <b>chat_id</b> The chat to which the message with the game belongs
--   
--   <b>message_id</b> Identifier of the message
--   
--   <b>edit_message</b> True, if the message needs to be edited
--   
--   <b>user_id</b> User identifier
--   
--   <b>score</b> The new score
--   
--   <b>force</b> Pass true to update the score even if it decreases. If
--   the score is 0, the user will be deleted from the high score table
data SetGameScore
SetGameScore :: Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe Int -> Maybe Int -> SetGameScore
[force] :: SetGameScore -> Maybe Bool
[score] :: SetGameScore -> Maybe Int
[user_id] :: SetGameScore -> Maybe Int
[edit_message] :: SetGameScore -> Maybe Bool
[message_id] :: SetGameScore -> Maybe Int
[chat_id] :: SetGameScore -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetGameScore.SetGameScore
instance GHC.Show.Show API.Functions.SetGameScore.SetGameScore
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetGameScore.SetGameScore
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetGameScore.SetGameScore

module API.Functions.SetGroupCallParticipantIsSpeaking

-- | Informs TDLib that speaking state of a participant of an active group
--   has changed
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>audio_source</b> Group call participant's synchronization audio
--   source identifier, or 0 for the current user
--   
--   <b>is_speaking</b> True, if the user is speaking
data SetGroupCallParticipantIsSpeaking
SetGroupCallParticipantIsSpeaking :: Maybe Bool -> Maybe Int -> Maybe Int -> SetGroupCallParticipantIsSpeaking
[is_speaking] :: SetGroupCallParticipantIsSpeaking -> Maybe Bool
[audio_source] :: SetGroupCallParticipantIsSpeaking -> Maybe Int
[group_call_id] :: SetGroupCallParticipantIsSpeaking -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetGroupCallParticipantIsSpeaking.SetGroupCallParticipantIsSpeaking
instance GHC.Show.Show API.Functions.SetGroupCallParticipantIsSpeaking.SetGroupCallParticipantIsSpeaking
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetGroupCallParticipantIsSpeaking.SetGroupCallParticipantIsSpeaking
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetGroupCallParticipantIsSpeaking.SetGroupCallParticipantIsSpeaking

module API.Functions.SetGroupCallTitle

-- | Sets group call title. Requires groupCall.can_be_managed group call
--   flag
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>title</b> New group call title; 1-64 characters
data SetGroupCallTitle
SetGroupCallTitle :: Maybe String -> Maybe Int -> SetGroupCallTitle
[title] :: SetGroupCallTitle -> Maybe String
[group_call_id] :: SetGroupCallTitle -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetGroupCallTitle.SetGroupCallTitle
instance GHC.Show.Show API.Functions.SetGroupCallTitle.SetGroupCallTitle
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetGroupCallTitle.SetGroupCallTitle
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetGroupCallTitle.SetGroupCallTitle

module API.Functions.SetInlineGameScore

-- | Updates the game score of the specified user in a game; for bots only
--   
--   <b>inline_message_id</b> Inline message identifier
--   
--   <b>edit_message</b> True, if the message needs to be edited
--   
--   <b>user_id</b> User identifier
--   
--   <b>score</b> The new score
--   
--   <b>force</b> Pass true to update the score even if it decreases. If
--   the score is 0, the user will be deleted from the high score table
data SetInlineGameScore
SetInlineGameScore :: Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe String -> SetInlineGameScore
[force] :: SetInlineGameScore -> Maybe Bool
[score] :: SetInlineGameScore -> Maybe Int
[user_id] :: SetInlineGameScore -> Maybe Int
[edit_message] :: SetInlineGameScore -> Maybe Bool
[inline_message_id] :: SetInlineGameScore -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetInlineGameScore.SetInlineGameScore
instance GHC.Show.Show API.Functions.SetInlineGameScore.SetInlineGameScore
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetInlineGameScore.SetInlineGameScore
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetInlineGameScore.SetInlineGameScore

module API.Functions.SetLogTagVerbosityLevel

-- | Sets the verbosity level for a specified TDLib internal log tag. Can
--   be called synchronously
--   
--   <b>tag</b> Logging tag to change verbosity level
--   
--   <b>new_verbosity_level</b> New verbosity level; 1-1024
data SetLogTagVerbosityLevel
SetLogTagVerbosityLevel :: Maybe Int -> Maybe String -> SetLogTagVerbosityLevel
[new_verbosity_level] :: SetLogTagVerbosityLevel -> Maybe Int
[tag] :: SetLogTagVerbosityLevel -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetLogTagVerbosityLevel.SetLogTagVerbosityLevel
instance GHC.Show.Show API.Functions.SetLogTagVerbosityLevel.SetLogTagVerbosityLevel
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetLogTagVerbosityLevel.SetLogTagVerbosityLevel
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetLogTagVerbosityLevel.SetLogTagVerbosityLevel

module API.Functions.SetLogVerbosityLevel

-- | Sets the verbosity level of the internal logging of TDLib. Can be
--   called synchronously
--   
--   <b>new_verbosity_level</b> New value of the verbosity level for
--   logging. Value 0 corresponds to fatal errors, value 1 corresponds to
--   errors, value 2 corresponds to warnings and debug warnings, value 3
--   corresponds to informational, value 4 corresponds to debug, value 5
--   corresponds to verbose debug, value greater than 5 and up to 1023 can
--   be used to enable even more logging
data SetLogVerbosityLevel
SetLogVerbosityLevel :: Maybe Int -> SetLogVerbosityLevel
[new_verbosity_level] :: SetLogVerbosityLevel -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetLogVerbosityLevel.SetLogVerbosityLevel
instance GHC.Show.Show API.Functions.SetLogVerbosityLevel.SetLogVerbosityLevel
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetLogVerbosityLevel.SetLogVerbosityLevel
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetLogVerbosityLevel.SetLogVerbosityLevel

module API.Functions.SetName

-- | Changes the first and last name of the current user
--   
--   <b>first_name</b> The new value of the first name for the current
--   user; 1-64 characters
--   
--   <b>last_name</b> The new value of the optional last name for the
--   current user; 0-64 characters
data SetName
SetName :: Maybe String -> Maybe String -> SetName
[last_name] :: SetName -> Maybe String
[first_name] :: SetName -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetName.SetName
instance GHC.Show.Show API.Functions.SetName.SetName
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetName.SetName
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetName.SetName

module API.Functions.SetPassword

-- | Changes the password for the current user. If a new recovery email
--   address is specified, then the change will not be applied until the
--   new recovery email address is confirmed
--   
--   <b>old_password</b> Previous password of the user
--   
--   <b>new_password</b> New password of the user; may be empty to remove
--   the password
--   
--   <b>new_hint</b> New password hint; may be empty
--   
--   <b>set_recovery_email_address</b> Pass true if the recovery email
--   address must be changed
--   
--   <b>new_recovery_email_address</b> New recovery email address; may be
--   empty
data SetPassword
SetPassword :: Maybe String -> Maybe Bool -> Maybe String -> Maybe String -> Maybe String -> SetPassword
[new_recovery_email_address] :: SetPassword -> Maybe String
[set_recovery_email_address] :: SetPassword -> Maybe Bool
[new_hint] :: SetPassword -> Maybe String
[new_password] :: SetPassword -> Maybe String
[old_password] :: SetPassword -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetPassword.SetPassword
instance GHC.Show.Show API.Functions.SetPassword.SetPassword
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetPassword.SetPassword
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetPassword.SetPassword

module API.Functions.SetPinnedChats

-- | Changes the order of pinned chats
--   
--   <b>chat_list</b> Chat list in which to change the order of pinned
--   chats
--   
--   <b>chat_ids</b> The new list of pinned chats
data SetPinnedChats
SetPinnedChats :: Maybe [Int] -> Maybe ChatList -> SetPinnedChats
[chat_ids] :: SetPinnedChats -> Maybe [Int]
[chat_list] :: SetPinnedChats -> Maybe ChatList
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetPinnedChats.SetPinnedChats
instance GHC.Show.Show API.Functions.SetPinnedChats.SetPinnedChats
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetPinnedChats.SetPinnedChats
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetPinnedChats.SetPinnedChats

module API.Functions.SetPollAnswer

-- | Changes the user answer to a poll. A poll in quiz mode can be answered
--   only once
--   
--   <b>chat_id</b> Identifier of the chat to which the poll belongs
--   
--   <b>message_id</b> Identifier of the message containing the poll
--   
--   <b>option_ids</b> 0-based identifiers of answer options, chosen by the
--   user. User can choose more than 1 answer option only is the poll
--   allows multiple answers
data SetPollAnswer
SetPollAnswer :: Maybe [Int] -> Maybe Int -> Maybe Int -> SetPollAnswer
[option_ids] :: SetPollAnswer -> Maybe [Int]
[message_id] :: SetPollAnswer -> Maybe Int
[chat_id] :: SetPollAnswer -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetPollAnswer.SetPollAnswer
instance GHC.Show.Show API.Functions.SetPollAnswer.SetPollAnswer
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetPollAnswer.SetPollAnswer
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetPollAnswer.SetPollAnswer

module API.Functions.SetRecoveryEmailAddress

-- | Changes the 2-step verification recovery email address of the user. If
--   a new recovery email address is specified, then the change will not be
--   applied until the new recovery email address is confirmed.
--   
--   <ul>
--   <li>If new_recovery_email_address is the same as the email address
--   that is currently set up, this call succeeds immediately and aborts
--   all other requests waiting for an email confirmation</li>
--   </ul>
--   
--   <b>password</b> Password of the current user
--   
--   <b>new_recovery_email_address</b> New recovery email address
data SetRecoveryEmailAddress
SetRecoveryEmailAddress :: Maybe String -> Maybe String -> SetRecoveryEmailAddress
[new_recovery_email_address] :: SetRecoveryEmailAddress -> Maybe String
[password] :: SetRecoveryEmailAddress -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetRecoveryEmailAddress.SetRecoveryEmailAddress
instance GHC.Show.Show API.Functions.SetRecoveryEmailAddress.SetRecoveryEmailAddress
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetRecoveryEmailAddress.SetRecoveryEmailAddress
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetRecoveryEmailAddress.SetRecoveryEmailAddress

module API.Functions.SetSupergroupStickerSet

-- | Changes the sticker set of a supergroup; requires can_change_info
--   administrator right
--   
--   <b>supergroup_id</b> Identifier of the supergroup
--   
--   <b>sticker_set_id</b> New value of the supergroup sticker set
--   identifier. Use 0 to remove the supergroup sticker set
data SetSupergroupStickerSet
SetSupergroupStickerSet :: Maybe Int -> Maybe Int -> SetSupergroupStickerSet
[sticker_set_id] :: SetSupergroupStickerSet -> Maybe Int
[supergroup_id] :: SetSupergroupStickerSet -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetSupergroupStickerSet.SetSupergroupStickerSet
instance GHC.Show.Show API.Functions.SetSupergroupStickerSet.SetSupergroupStickerSet
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetSupergroupStickerSet.SetSupergroupStickerSet
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetSupergroupStickerSet.SetSupergroupStickerSet

module API.Functions.SetSupergroupUsername

-- | Changes the username of a supergroup or channel, requires owner
--   privileges in the supergroup or channel
--   
--   <b>supergroup_id</b> Identifier of the supergroup or channel
--   
--   <b>username</b> New value of the username. Use an empty string to
--   remove the username
data SetSupergroupUsername
SetSupergroupUsername :: Maybe String -> Maybe Int -> SetSupergroupUsername
[username] :: SetSupergroupUsername -> Maybe String
[supergroup_id] :: SetSupergroupUsername -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetSupergroupUsername.SetSupergroupUsername
instance GHC.Show.Show API.Functions.SetSupergroupUsername.SetSupergroupUsername
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetSupergroupUsername.SetSupergroupUsername
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetSupergroupUsername.SetSupergroupUsername

module API.Functions.SetUsername

-- | Changes the username of the current user
--   
--   <b>username</b> The new value of the username. Use an empty string to
--   remove the username
data SetUsername
SetUsername :: Maybe String -> SetUsername
[username] :: SetUsername -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetUsername.SetUsername
instance GHC.Show.Show API.Functions.SetUsername.SetUsername
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetUsername.SetUsername
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetUsername.SetUsername

module API.Functions.SharePhoneNumber

-- | Shares the phone number of the current user with a mutual contact.
--   Supposed to be called when the user clicks on
--   chatActionBarSharePhoneNumber
--   
--   <b>user_id</b> Identifier of the user with whom to share the phone
--   number. The user must be a mutual contact
data SharePhoneNumber
SharePhoneNumber :: Maybe Int -> SharePhoneNumber
[user_id] :: SharePhoneNumber -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SharePhoneNumber.SharePhoneNumber
instance GHC.Show.Show API.Functions.SharePhoneNumber.SharePhoneNumber
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SharePhoneNumber.SharePhoneNumber
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SharePhoneNumber.SharePhoneNumber

module API.Functions.StartGroupCallRecording

-- | Starts recording of an active group call. Requires
--   groupCall.can_be_managed group call flag
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>title</b> Group call recording title; 0-64 characters
--   
--   <b>record_video</b> Pass true to record a video file instead of an
--   audio file
--   
--   <b>use_portrait_orientation</b> Pass true to use portrait orientation
--   for video instead of landscape one
data StartGroupCallRecording
StartGroupCallRecording :: Maybe Bool -> Maybe Bool -> Maybe String -> Maybe Int -> StartGroupCallRecording
[use_portrait_orientation] :: StartGroupCallRecording -> Maybe Bool
[record_video] :: StartGroupCallRecording -> Maybe Bool
[title] :: StartGroupCallRecording -> Maybe String
[group_call_id] :: StartGroupCallRecording -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.StartGroupCallRecording.StartGroupCallRecording
instance GHC.Show.Show API.Functions.StartGroupCallRecording.StartGroupCallRecording
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.StartGroupCallRecording.StartGroupCallRecording
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.StartGroupCallRecording.StartGroupCallRecording

module API.Functions.StartGroupCallScreenSharing

-- | Starts screen sharing in a joined group call. Returns join response
--   payload for tgcalls
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>audio_source_id</b> Screen sharing audio channel synchronization
--   source identifier; received from tgcalls
--   
--   <b>payload</b> Group call join payload; received from tgcalls
data StartGroupCallScreenSharing
StartGroupCallScreenSharing :: Maybe String -> Maybe Int -> Maybe Int -> StartGroupCallScreenSharing
[payload] :: StartGroupCallScreenSharing -> Maybe String
[audio_source_id] :: StartGroupCallScreenSharing -> Maybe Int
[group_call_id] :: StartGroupCallScreenSharing -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.StartGroupCallScreenSharing.StartGroupCallScreenSharing
instance GHC.Show.Show API.Functions.StartGroupCallScreenSharing.StartGroupCallScreenSharing
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.StartGroupCallScreenSharing.StartGroupCallScreenSharing
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.StartGroupCallScreenSharing.StartGroupCallScreenSharing

module API.Functions.StartScheduledGroupCall

-- | Starts a scheduled group call
--   
--   <b>group_call_id</b> Group call identifier
data StartScheduledGroupCall
StartScheduledGroupCall :: Maybe Int -> StartScheduledGroupCall
[group_call_id] :: StartScheduledGroupCall -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.StartScheduledGroupCall.StartScheduledGroupCall
instance GHC.Show.Show API.Functions.StartScheduledGroupCall.StartScheduledGroupCall
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.StartScheduledGroupCall.StartScheduledGroupCall
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.StartScheduledGroupCall.StartScheduledGroupCall

module API.Functions.SynchronizeLanguagePack

-- | Fetches the latest versions of all strings from a language pack in the
--   current localization target from the server. This method doesn't need
--   to be called explicitly for the current used/base language packs. Can
--   be called before authorization
--   
--   <b>language_pack_id</b> Language pack identifier
data SynchronizeLanguagePack
SynchronizeLanguagePack :: Maybe String -> SynchronizeLanguagePack
[language_pack_id] :: SynchronizeLanguagePack -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SynchronizeLanguagePack.SynchronizeLanguagePack
instance GHC.Show.Show API.Functions.SynchronizeLanguagePack.SynchronizeLanguagePack
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SynchronizeLanguagePack.SynchronizeLanguagePack
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SynchronizeLanguagePack.SynchronizeLanguagePack

module API.Functions.TerminateAllOtherSessions

-- | Terminates all other sessions of the current user
data TerminateAllOtherSessions
TerminateAllOtherSessions :: TerminateAllOtherSessions
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TerminateAllOtherSessions.TerminateAllOtherSessions
instance GHC.Show.Show API.Functions.TerminateAllOtherSessions.TerminateAllOtherSessions
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TerminateAllOtherSessions.TerminateAllOtherSessions
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TerminateAllOtherSessions.TerminateAllOtherSessions

module API.Functions.TerminateSession

-- | Terminates a session of the current user
--   
--   <b>session_id</b> Session identifier
data TerminateSession
TerminateSession :: Maybe Int -> TerminateSession
[session_id] :: TerminateSession -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TerminateSession.TerminateSession
instance GHC.Show.Show API.Functions.TerminateSession.TerminateSession
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TerminateSession.TerminateSession
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TerminateSession.TerminateSession

module API.Functions.TestCallBytes

-- | Returns the received bytes; for testing only. This is an offline
--   method. Can be called before authorization
--   
--   <b>x</b> Bytes to return
data TestCallBytes
TestCallBytes :: Maybe String -> TestCallBytes
[x] :: TestCallBytes -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TestCallBytes.TestCallBytes
instance GHC.Show.Show API.Functions.TestCallBytes.TestCallBytes
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TestCallBytes.TestCallBytes
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TestCallBytes.TestCallBytes

module API.Functions.TestCallEmpty

-- | Does nothing; for testing only. This is an offline method. Can be
--   called before authorization
data TestCallEmpty
TestCallEmpty :: TestCallEmpty
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TestCallEmpty.TestCallEmpty
instance GHC.Show.Show API.Functions.TestCallEmpty.TestCallEmpty
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TestCallEmpty.TestCallEmpty
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TestCallEmpty.TestCallEmpty

module API.Functions.TestCallString

-- | Returns the received string; for testing only. This is an offline
--   method. Can be called before authorization
--   
--   <b>x</b> String to return
data TestCallString
TestCallString :: Maybe String -> TestCallString
[x] :: TestCallString -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TestCallString.TestCallString
instance GHC.Show.Show API.Functions.TestCallString.TestCallString
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TestCallString.TestCallString
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TestCallString.TestCallString

module API.Functions.TestCallVectorInt

-- | Returns the received vector of numbers; for testing only. This is an
--   offline method. Can be called before authorization
--   
--   <b>x</b> Vector of numbers to return
data TestCallVectorInt
TestCallVectorInt :: Maybe [Int] -> TestCallVectorInt
[x] :: TestCallVectorInt -> Maybe [Int]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TestCallVectorInt.TestCallVectorInt
instance GHC.Show.Show API.Functions.TestCallVectorInt.TestCallVectorInt
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TestCallVectorInt.TestCallVectorInt
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TestCallVectorInt.TestCallVectorInt

module API.Functions.TestCallVectorString

-- | Returns the received vector of strings; for testing only. This is an
--   offline method. Can be called before authorization
--   
--   <b>x</b> Vector of strings to return
data TestCallVectorString
TestCallVectorString :: Maybe [String] -> TestCallVectorString
[x] :: TestCallVectorString -> Maybe [String]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TestCallVectorString.TestCallVectorString
instance GHC.Show.Show API.Functions.TestCallVectorString.TestCallVectorString
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TestCallVectorString.TestCallVectorString
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TestCallVectorString.TestCallVectorString

module API.Functions.TestGetDifference

-- | Forces an updates.getDifference call to the Telegram servers; for
--   testing only
data TestGetDifference
TestGetDifference :: TestGetDifference
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TestGetDifference.TestGetDifference
instance GHC.Show.Show API.Functions.TestGetDifference.TestGetDifference
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TestGetDifference.TestGetDifference
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TestGetDifference.TestGetDifference

module API.Functions.TestNetwork

-- | Sends a simple network request to the Telegram servers; for testing
--   only. Can be called before authorization
data TestNetwork
TestNetwork :: TestNetwork
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TestNetwork.TestNetwork
instance GHC.Show.Show API.Functions.TestNetwork.TestNetwork
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TestNetwork.TestNetwork
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TestNetwork.TestNetwork

module API.Functions.TestReturnError

-- | Returns the specified error and ensures that the Error object is used;
--   for testing only. Can be called synchronously
--   
--   <b>error</b> The error to be returned
data TestReturnError
TestReturnError :: Maybe Error -> TestReturnError
[_error] :: TestReturnError -> Maybe Error
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TestReturnError.TestReturnError
instance GHC.Show.Show API.Functions.TestReturnError.TestReturnError
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TestReturnError.TestReturnError
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TestReturnError.TestReturnError

module API.Functions.TestSquareInt

-- | Returns the squared received number; for testing only. This is an
--   offline method. Can be called before authorization
--   
--   <b>x</b> Number to square
data TestSquareInt
TestSquareInt :: Maybe Int -> TestSquareInt
[x] :: TestSquareInt -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TestSquareInt.TestSquareInt
instance GHC.Show.Show API.Functions.TestSquareInt.TestSquareInt
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TestSquareInt.TestSquareInt
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TestSquareInt.TestSquareInt

module API.Functions.TestUseUpdate

-- | Does nothing and ensures that the Update object is used; for testing
--   only. This is an offline method. Can be called before authorization
data TestUseUpdate
TestUseUpdate :: TestUseUpdate
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TestUseUpdate.TestUseUpdate
instance GHC.Show.Show API.Functions.TestUseUpdate.TestUseUpdate
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TestUseUpdate.TestUseUpdate
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TestUseUpdate.TestUseUpdate

module API.Functions.ToggleChatDefaultDisableNotification

-- | Changes the value of the default disable_notification parameter, used
--   when a message is sent to a chat
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>default_disable_notification</b> New value of
--   default_disable_notification
data ToggleChatDefaultDisableNotification
ToggleChatDefaultDisableNotification :: Maybe Bool -> Maybe Int -> ToggleChatDefaultDisableNotification
[default_disable_notification] :: ToggleChatDefaultDisableNotification -> Maybe Bool
[chat_id] :: ToggleChatDefaultDisableNotification -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleChatDefaultDisableNotification.ToggleChatDefaultDisableNotification
instance GHC.Show.Show API.Functions.ToggleChatDefaultDisableNotification.ToggleChatDefaultDisableNotification
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleChatDefaultDisableNotification.ToggleChatDefaultDisableNotification
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleChatDefaultDisableNotification.ToggleChatDefaultDisableNotification

module API.Functions.ToggleChatIsMarkedAsUnread

-- | Changes the marked as unread state of a chat
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>is_marked_as_unread</b> New value of is_marked_as_unread
data ToggleChatIsMarkedAsUnread
ToggleChatIsMarkedAsUnread :: Maybe Bool -> Maybe Int -> ToggleChatIsMarkedAsUnread
[is_marked_as_unread] :: ToggleChatIsMarkedAsUnread -> Maybe Bool
[chat_id] :: ToggleChatIsMarkedAsUnread -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleChatIsMarkedAsUnread.ToggleChatIsMarkedAsUnread
instance GHC.Show.Show API.Functions.ToggleChatIsMarkedAsUnread.ToggleChatIsMarkedAsUnread
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleChatIsMarkedAsUnread.ToggleChatIsMarkedAsUnread
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleChatIsMarkedAsUnread.ToggleChatIsMarkedAsUnread

module API.Functions.ToggleChatIsPinned

-- | Changes the pinned state of a chat. There can be up to
--   GetOption("pinned_chat_count_max")<i>GetOption("pinned_archived_chat_count_max")
--   pinned non-secret chats and the same number of secret chats in the
--   main</i>arhive chat list
--   
--   <b>chat_list</b> Chat list in which to change the pinned state of the
--   chat
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>is_pinned</b> True, if the chat is pinned
data ToggleChatIsPinned
ToggleChatIsPinned :: Maybe Bool -> Maybe Int -> Maybe ChatList -> ToggleChatIsPinned
[is_pinned] :: ToggleChatIsPinned -> Maybe Bool
[chat_id] :: ToggleChatIsPinned -> Maybe Int
[chat_list] :: ToggleChatIsPinned -> Maybe ChatList
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleChatIsPinned.ToggleChatIsPinned
instance GHC.Show.Show API.Functions.ToggleChatIsPinned.ToggleChatIsPinned
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleChatIsPinned.ToggleChatIsPinned
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleChatIsPinned.ToggleChatIsPinned

module API.Functions.ToggleGroupCallEnabledStartNotification

-- | Toggles whether the current user will receive a notification when the
--   group call will start; scheduled group calls only
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>enabled_start_notification</b> New value of the
--   enabled_start_notification setting
data ToggleGroupCallEnabledStartNotification
ToggleGroupCallEnabledStartNotification :: Maybe Bool -> Maybe Int -> ToggleGroupCallEnabledStartNotification
[enabled_start_notification] :: ToggleGroupCallEnabledStartNotification -> Maybe Bool
[group_call_id] :: ToggleGroupCallEnabledStartNotification -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleGroupCallEnabledStartNotification.ToggleGroupCallEnabledStartNotification
instance GHC.Show.Show API.Functions.ToggleGroupCallEnabledStartNotification.ToggleGroupCallEnabledStartNotification
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleGroupCallEnabledStartNotification.ToggleGroupCallEnabledStartNotification
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleGroupCallEnabledStartNotification.ToggleGroupCallEnabledStartNotification

module API.Functions.ToggleGroupCallIsMyVideoEnabled

-- | Toggles whether current user's video is enabled
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>is_my_video_enabled</b> Pass true if the current user's video is
--   enabled
data ToggleGroupCallIsMyVideoEnabled
ToggleGroupCallIsMyVideoEnabled :: Maybe Bool -> Maybe Int -> ToggleGroupCallIsMyVideoEnabled
[is_my_video_enabled] :: ToggleGroupCallIsMyVideoEnabled -> Maybe Bool
[group_call_id] :: ToggleGroupCallIsMyVideoEnabled -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleGroupCallIsMyVideoEnabled.ToggleGroupCallIsMyVideoEnabled
instance GHC.Show.Show API.Functions.ToggleGroupCallIsMyVideoEnabled.ToggleGroupCallIsMyVideoEnabled
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleGroupCallIsMyVideoEnabled.ToggleGroupCallIsMyVideoEnabled
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleGroupCallIsMyVideoEnabled.ToggleGroupCallIsMyVideoEnabled

module API.Functions.ToggleGroupCallIsMyVideoPaused

-- | Toggles whether current user's video is paused
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>is_my_video_paused</b> Pass true if the current user's video is
--   paused
data ToggleGroupCallIsMyVideoPaused
ToggleGroupCallIsMyVideoPaused :: Maybe Bool -> Maybe Int -> ToggleGroupCallIsMyVideoPaused
[is_my_video_paused] :: ToggleGroupCallIsMyVideoPaused -> Maybe Bool
[group_call_id] :: ToggleGroupCallIsMyVideoPaused -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleGroupCallIsMyVideoPaused.ToggleGroupCallIsMyVideoPaused
instance GHC.Show.Show API.Functions.ToggleGroupCallIsMyVideoPaused.ToggleGroupCallIsMyVideoPaused
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleGroupCallIsMyVideoPaused.ToggleGroupCallIsMyVideoPaused
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleGroupCallIsMyVideoPaused.ToggleGroupCallIsMyVideoPaused

module API.Functions.ToggleGroupCallMuteNewParticipants

-- | Toggles whether new participants of a group call can be unmuted only
--   by administrators of the group call. Requires
--   groupCall.can_toggle_mute_new_participants group call flag
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>mute_new_participants</b> New value of the mute_new_participants
--   setting
data ToggleGroupCallMuteNewParticipants
ToggleGroupCallMuteNewParticipants :: Maybe Bool -> Maybe Int -> ToggleGroupCallMuteNewParticipants
[mute_new_participants] :: ToggleGroupCallMuteNewParticipants -> Maybe Bool
[group_call_id] :: ToggleGroupCallMuteNewParticipants -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleGroupCallMuteNewParticipants.ToggleGroupCallMuteNewParticipants
instance GHC.Show.Show API.Functions.ToggleGroupCallMuteNewParticipants.ToggleGroupCallMuteNewParticipants
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleGroupCallMuteNewParticipants.ToggleGroupCallMuteNewParticipants
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleGroupCallMuteNewParticipants.ToggleGroupCallMuteNewParticipants

module API.Functions.ToggleGroupCallScreenSharingIsPaused

-- | Pauses or unpauses screen sharing in a joined group call
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>is_paused</b> True if screen sharing is paused
data ToggleGroupCallScreenSharingIsPaused
ToggleGroupCallScreenSharingIsPaused :: Maybe Bool -> Maybe Int -> ToggleGroupCallScreenSharingIsPaused
[is_paused] :: ToggleGroupCallScreenSharingIsPaused -> Maybe Bool
[group_call_id] :: ToggleGroupCallScreenSharingIsPaused -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleGroupCallScreenSharingIsPaused.ToggleGroupCallScreenSharingIsPaused
instance GHC.Show.Show API.Functions.ToggleGroupCallScreenSharingIsPaused.ToggleGroupCallScreenSharingIsPaused
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleGroupCallScreenSharingIsPaused.ToggleGroupCallScreenSharingIsPaused
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleGroupCallScreenSharingIsPaused.ToggleGroupCallScreenSharingIsPaused

module API.Functions.ToggleSupergroupIsAllHistoryAvailable

-- | Toggles whether the message history of a supergroup is available to
--   new members; requires can_change_info administrator right
--   
--   <b>supergroup_id</b> The identifier of the supergroup
--   
--   <b>is_all_history_available</b> The new value of
--   is_all_history_available
data ToggleSupergroupIsAllHistoryAvailable
ToggleSupergroupIsAllHistoryAvailable :: Maybe Bool -> Maybe Int -> ToggleSupergroupIsAllHistoryAvailable
[is_all_history_available] :: ToggleSupergroupIsAllHistoryAvailable -> Maybe Bool
[supergroup_id] :: ToggleSupergroupIsAllHistoryAvailable -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleSupergroupIsAllHistoryAvailable.ToggleSupergroupIsAllHistoryAvailable
instance GHC.Show.Show API.Functions.ToggleSupergroupIsAllHistoryAvailable.ToggleSupergroupIsAllHistoryAvailable
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleSupergroupIsAllHistoryAvailable.ToggleSupergroupIsAllHistoryAvailable
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleSupergroupIsAllHistoryAvailable.ToggleSupergroupIsAllHistoryAvailable

module API.Functions.ToggleSupergroupIsBroadcastGroup

-- | Upgrades supergroup to a broadcast group; requires owner privileges in
--   the supergroup
--   
--   <b>supergroup_id</b> Identifier of the supergroup
data ToggleSupergroupIsBroadcastGroup
ToggleSupergroupIsBroadcastGroup :: Maybe Int -> ToggleSupergroupIsBroadcastGroup
[supergroup_id] :: ToggleSupergroupIsBroadcastGroup -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleSupergroupIsBroadcastGroup.ToggleSupergroupIsBroadcastGroup
instance GHC.Show.Show API.Functions.ToggleSupergroupIsBroadcastGroup.ToggleSupergroupIsBroadcastGroup
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleSupergroupIsBroadcastGroup.ToggleSupergroupIsBroadcastGroup
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleSupergroupIsBroadcastGroup.ToggleSupergroupIsBroadcastGroup

module API.Functions.ToggleSupergroupSignMessages

-- | Toggles sender signatures messages sent in a channel; requires
--   can_change_info administrator right
--   
--   <b>supergroup_id</b> Identifier of the channel
--   
--   <b>sign_messages</b> New value of sign_messages
data ToggleSupergroupSignMessages
ToggleSupergroupSignMessages :: Maybe Bool -> Maybe Int -> ToggleSupergroupSignMessages
[sign_messages] :: ToggleSupergroupSignMessages -> Maybe Bool
[supergroup_id] :: ToggleSupergroupSignMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleSupergroupSignMessages.ToggleSupergroupSignMessages
instance GHC.Show.Show API.Functions.ToggleSupergroupSignMessages.ToggleSupergroupSignMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleSupergroupSignMessages.ToggleSupergroupSignMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleSupergroupSignMessages.ToggleSupergroupSignMessages

module API.Functions.TransferChatOwnership

-- | Changes the owner of a chat. The current user must be a current owner
--   of the chat. Use the method canTransferOwnership to check whether the
--   ownership can be transferred from the current session. Available only
--   for supergroups and channel chats
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>user_id</b> Identifier of the user to which transfer the ownership.
--   The ownership can't be transferred to a bot or to a deleted user
--   
--   <b>password</b> The password of the current user
data TransferChatOwnership
TransferChatOwnership :: Maybe String -> Maybe Int -> Maybe Int -> TransferChatOwnership
[password] :: TransferChatOwnership -> Maybe String
[user_id] :: TransferChatOwnership -> Maybe Int
[chat_id] :: TransferChatOwnership -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TransferChatOwnership.TransferChatOwnership
instance GHC.Show.Show API.Functions.TransferChatOwnership.TransferChatOwnership
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TransferChatOwnership.TransferChatOwnership
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TransferChatOwnership.TransferChatOwnership

module API.Functions.UnpinAllChatMessages

-- | Removes all pinned messages from a chat; requires can_pin_messages
--   rights in the group or can_edit_messages rights in the channel
--   
--   <b>chat_id</b> Identifier of the chat
data UnpinAllChatMessages
UnpinAllChatMessages :: Maybe Int -> UnpinAllChatMessages
[chat_id] :: UnpinAllChatMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.UnpinAllChatMessages.UnpinAllChatMessages
instance GHC.Show.Show API.Functions.UnpinAllChatMessages.UnpinAllChatMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.UnpinAllChatMessages.UnpinAllChatMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.UnpinAllChatMessages.UnpinAllChatMessages

module API.Functions.UnpinChatMessage

-- | Removes a pinned message from a chat; requires can_pin_messages rights
--   in the group or can_edit_messages rights in the channel
--   
--   <b>chat_id</b> Identifier of the chat
--   
--   <b>message_id</b> Identifier of the removed pinned message
data UnpinChatMessage
UnpinChatMessage :: Maybe Int -> Maybe Int -> UnpinChatMessage
[message_id] :: UnpinChatMessage -> Maybe Int
[chat_id] :: UnpinChatMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.UnpinChatMessage.UnpinChatMessage
instance GHC.Show.Show API.Functions.UnpinChatMessage.UnpinChatMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.UnpinChatMessage.UnpinChatMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.UnpinChatMessage.UnpinChatMessage

module API.Functions.UpgradeBasicGroupChatToSupergroupChat

-- | Creates a new supergroup from an existing basic group and sends a
--   corresponding messageChatUpgradeTo and messageChatUpgradeFrom;
--   requires creator privileges. Deactivates the original basic group
--   
--   <b>chat_id</b> Identifier of the chat to upgrade
data UpgradeBasicGroupChatToSupergroupChat
UpgradeBasicGroupChatToSupergroupChat :: Maybe Int -> UpgradeBasicGroupChatToSupergroupChat
[chat_id] :: UpgradeBasicGroupChatToSupergroupChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.UpgradeBasicGroupChatToSupergroupChat.UpgradeBasicGroupChatToSupergroupChat
instance GHC.Show.Show API.Functions.UpgradeBasicGroupChatToSupergroupChat.UpgradeBasicGroupChatToSupergroupChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.UpgradeBasicGroupChatToSupergroupChat.UpgradeBasicGroupChatToSupergroupChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.UpgradeBasicGroupChatToSupergroupChat.UpgradeBasicGroupChatToSupergroupChat

module API.Functions.ViewMessages

-- | Informs TDLib that messages are being viewed by the user. Many useful
--   activities depend on whether the messages are currently being viewed
--   or not (e.g., marking messages as read, incrementing a view counter,
--   updating a view counter, removing deleted messages in supergroups and
--   channels)
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_thread_id</b> If not 0, a message thread identifier in
--   which the messages are being viewed
--   
--   <b>message_ids</b> The identifiers of the messages being viewed
--   
--   <b>force_read</b> True, if messages in closed chats must be marked as
--   read by the request
data ViewMessages
ViewMessages :: Maybe Bool -> Maybe [Int] -> Maybe Int -> Maybe Int -> ViewMessages
[force_read] :: ViewMessages -> Maybe Bool
[message_ids] :: ViewMessages -> Maybe [Int]
[message_thread_id] :: ViewMessages -> Maybe Int
[chat_id] :: ViewMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ViewMessages.ViewMessages
instance GHC.Show.Show API.Functions.ViewMessages.ViewMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ViewMessages.ViewMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ViewMessages.ViewMessages

module API.Functions.ViewSponsoredMessage

-- | Informs TDLib that a sponsored message was viewed by the user
--   
--   <b>chat_id</b> Identifier of the chat with the sponsored message
--   
--   <b>sponsored_message_id</b> The identifier of the sponsored message
--   being viewed
data ViewSponsoredMessage
ViewSponsoredMessage :: Maybe Int -> Maybe Int -> ViewSponsoredMessage
[sponsored_message_id] :: ViewSponsoredMessage -> Maybe Int
[chat_id] :: ViewSponsoredMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ViewSponsoredMessage.ViewSponsoredMessage
instance GHC.Show.Show API.Functions.ViewSponsoredMessage.ViewSponsoredMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ViewSponsoredMessage.ViewSponsoredMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ViewSponsoredMessage.ViewSponsoredMessage

module API.Functions.ViewTrendingStickerSets

-- | Informs the server that some trending sticker sets have been viewed by
--   the user
--   
--   <b>sticker_set_ids</b> Identifiers of viewed trending sticker sets
data ViewTrendingStickerSets
ViewTrendingStickerSets :: Maybe [Int] -> ViewTrendingStickerSets
[sticker_set_ids] :: ViewTrendingStickerSets -> Maybe [Int]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ViewTrendingStickerSets.ViewTrendingStickerSets
instance GHC.Show.Show API.Functions.ViewTrendingStickerSets.ViewTrendingStickerSets
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ViewTrendingStickerSets.ViewTrendingStickerSets
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ViewTrendingStickerSets.ViewTrendingStickerSets

module API.Functions.WriteGeneratedFilePart

-- | Writes a part of a generated file. This method is intended to be used
--   only if the application has no direct access to TDLib's file system,
--   because it is usually slower than a direct write to the destination
--   file
--   
--   <b>generation_id</b> The identifier of the generation process
--   
--   <b>offset</b> The offset from which to write the data to the file
--   
--   <b>data</b> The data to write
data WriteGeneratedFilePart
WriteGeneratedFilePart :: Maybe String -> Maybe Int -> Maybe Int -> WriteGeneratedFilePart
[_data] :: WriteGeneratedFilePart -> Maybe String
[offset] :: WriteGeneratedFilePart -> Maybe Int
[generation_id] :: WriteGeneratedFilePart -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.WriteGeneratedFilePart.WriteGeneratedFilePart
instance GHC.Show.Show API.Functions.WriteGeneratedFilePart.WriteGeneratedFilePart
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.WriteGeneratedFilePart.WriteGeneratedFilePart
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.WriteGeneratedFilePart.WriteGeneratedFilePart

module API.GameHighScore

-- | Contains one row of the game high score table
--   
--   <b>position</b> Position in the high score table
--   
--   <b>user_id</b> User identifier
--   
--   <b>score</b> User score
data GameHighScore
GameHighScore :: Maybe Int -> Maybe Int -> Maybe Int -> GameHighScore
[score] :: GameHighScore -> Maybe Int
[user_id] :: GameHighScore -> Maybe Int
[position] :: GameHighScore -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.GameHighScore.GameHighScore
instance GHC.Show.Show API.GameHighScore.GameHighScore
instance Data.Aeson.Types.ToJSON.ToJSON API.GameHighScore.GameHighScore
instance Data.Aeson.Types.FromJSON.FromJSON API.GameHighScore.GameHighScore

module API.GameHighScores

-- | Contains a list of game high scores
--   
--   <b>scores</b> A list of game high scores
data GameHighScores
GameHighScores :: Maybe [GameHighScore] -> GameHighScores
[scores] :: GameHighScores -> Maybe [GameHighScore]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.GameHighScores.GameHighScores
instance GHC.Show.Show API.GameHighScores.GameHighScores
instance Data.Aeson.Types.ToJSON.ToJSON API.GameHighScores.GameHighScores
instance Data.Aeson.Types.FromJSON.FromJSON API.GameHighScores.GameHighScores

module API.GroupCallId

-- | Contains the group call identifier
--   
--   <b>id</b> Group call identifier
data GroupCallId
GroupCallId :: Maybe Int -> GroupCallId
[_id] :: GroupCallId -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.GroupCallId.GroupCallId
instance GHC.Show.Show API.GroupCallId.GroupCallId
instance Data.Aeson.Types.ToJSON.ToJSON API.GroupCallId.GroupCallId
instance Data.Aeson.Types.FromJSON.FromJSON API.GroupCallId.GroupCallId

module API.GroupCall

-- | Describes a group call
--   
--   <b>id</b> Group call identifier
--   
--   <b>title</b> Group call title
--   
--   <b>scheduled_start_date</b> Point in time (Unix timestamp) when the
--   group call is supposed to be started by an administrator; 0 if it is
--   already active or was ended
--   
--   <b>enabled_start_notification</b> True, if the group call is scheduled
--   and the current user will receive a notification when the group call
--   will start
--   
--   <b>is_active</b> True, if the call is active
--   
--   <b>is_joined</b> True, if the call is joined
--   
--   <b>need_rejoin</b> True, if user was kicked from the call because of
--   network loss and the call needs to be rejoined
--   
--   <b>can_be_managed</b> True, if the current user can manage the group
--   call
--   
--   <b>participant_count</b> Number of participants in the group call
--   
--   <b>loaded_all_participants</b> True, if all group call participants
--   are loaded
--   
--   <b>recent_speakers</b> Recently speaking users in the group call
--   
--   <b>is_my_video_enabled</b> True, if the current user's video is
--   enabled
--   
--   <b>is_my_video_paused</b> True, if the current user's video is paused
--   
--   <b>can_enable_video</b> True, if the current user can broadcast video
--   or share screen
--   
--   <b>mute_new_participants</b> True, if only group call administrators
--   can unmute new participants
--   
--   <b>can_toggle_mute_new_participants</b> True, if the current user can
--   enable or disable mute_new_participants setting
--   
--   <b>record_duration</b> Duration of the ongoing group call recording,
--   in seconds; 0 if none. An updateGroupCall update is not triggered when
--   value of this field changes, but the same recording goes on
--   
--   <b>is_video_recorded</b> True, if a video file is being recorded for
--   the call
--   
--   <b>duration</b> Call duration, in seconds; for ended calls only
data GroupCall
GroupCall :: Maybe Int -> Maybe Bool -> Maybe Int -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe [GroupCallRecentSpeaker] -> Maybe Bool -> Maybe Int -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe String -> Maybe Int -> GroupCall
[duration] :: GroupCall -> Maybe Int
[is_video_recorded] :: GroupCall -> Maybe Bool
[record_duration] :: GroupCall -> Maybe Int
[can_toggle_mute_new_participants] :: GroupCall -> Maybe Bool
[mute_new_participants] :: GroupCall -> Maybe Bool
[can_enable_video] :: GroupCall -> Maybe Bool
[is_my_video_paused] :: GroupCall -> Maybe Bool
[is_my_video_enabled] :: GroupCall -> Maybe Bool
[recent_speakers] :: GroupCall -> Maybe [GroupCallRecentSpeaker]
[loaded_all_participants] :: GroupCall -> Maybe Bool
[participant_count] :: GroupCall -> Maybe Int
[can_be_managed] :: GroupCall -> Maybe Bool
[need_rejoin] :: GroupCall -> Maybe Bool
[is_joined] :: GroupCall -> Maybe Bool
[is_active] :: GroupCall -> Maybe Bool
[enabled_start_notification] :: GroupCall -> Maybe Bool
[scheduled_start_date] :: GroupCall -> Maybe Int
[title] :: GroupCall -> Maybe String
[_id] :: GroupCall -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.GroupCall.GroupCall
instance GHC.Show.Show API.GroupCall.GroupCall
instance Data.Aeson.Types.ToJSON.ToJSON API.GroupCall.GroupCall
instance Data.Aeson.Types.FromJSON.FromJSON API.GroupCall.GroupCall

module API.Functions.GetGroupCallStreamSegment

-- | Returns a file with a segment of a group call stream in a modified OGG
--   format for audio or MPEG-4 format for video
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>time_offset</b> Point in time when the stream segment begins; Unix
--   timestamp in milliseconds
--   
--   <b>scale</b> Segment duration scale; 0-1. Segment's duration is
--   1000/(2**scale) milliseconds
--   
--   <b>channel_id</b> Identifier of an audio/video channel to get as
--   received from tgcalls
--   
--   <b>video_quality</b> Video quality as received from tgcalls; pass null
--   to get the worst available quality
data GetGroupCallStreamSegment
GetGroupCallStreamSegment :: Maybe GroupCallVideoQuality -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> GetGroupCallStreamSegment
[video_quality] :: GetGroupCallStreamSegment -> Maybe GroupCallVideoQuality
[channel_id] :: GetGroupCallStreamSegment -> Maybe Int
[scale] :: GetGroupCallStreamSegment -> Maybe Int
[time_offset] :: GetGroupCallStreamSegment -> Maybe Int
[group_call_id] :: GetGroupCallStreamSegment -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetGroupCallStreamSegment.GetGroupCallStreamSegment
instance GHC.Show.Show API.Functions.GetGroupCallStreamSegment.GetGroupCallStreamSegment
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetGroupCallStreamSegment.GetGroupCallStreamSegment
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetGroupCallStreamSegment.GetGroupCallStreamSegment

module API.GroupCallVideoQuality

-- | Describes the quality of a group call video
data GroupCallVideoQuality

-- | The worst available video quality
GroupCallVideoQualityThumbnail :: GroupCallVideoQuality

-- | The medium video quality
GroupCallVideoQualityMedium :: GroupCallVideoQuality

-- | The best available video quality
GroupCallVideoQualityFull :: GroupCallVideoQuality
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.GroupCallVideoQuality.GroupCallVideoQuality
instance GHC.Show.Show API.GroupCallVideoQuality.GroupCallVideoQuality
instance Data.Aeson.Types.ToJSON.ToJSON API.GroupCallVideoQuality.GroupCallVideoQuality
instance Data.Aeson.Types.FromJSON.FromJSON API.GroupCallVideoQuality.GroupCallVideoQuality

module API.GroupCallParticipantVideoInfo

-- | Contains information about a group call participant's video channel
--   
--   <b>source_groups</b> List of synchronization source groups of the
--   video
--   
--   <b>endpoint_id</b> Video channel endpoint identifier
--   
--   <b>is_paused</b> True if the video is paused. This flag needs to be
--   ignored, if new video frames are received
data GroupCallParticipantVideoInfo
GroupCallParticipantVideoInfo :: Maybe Bool -> Maybe String -> Maybe [GroupCallVideoSourceGroup] -> GroupCallParticipantVideoInfo
[is_paused] :: GroupCallParticipantVideoInfo -> Maybe Bool
[endpoint_id] :: GroupCallParticipantVideoInfo -> Maybe String
[source_groups] :: GroupCallParticipantVideoInfo -> Maybe [GroupCallVideoSourceGroup]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.GroupCallParticipantVideoInfo.GroupCallParticipantVideoInfo
instance GHC.Show.Show API.GroupCallParticipantVideoInfo.GroupCallParticipantVideoInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.GroupCallParticipantVideoInfo.GroupCallParticipantVideoInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.GroupCallParticipantVideoInfo.GroupCallParticipantVideoInfo

module API.GroupCallVideoSourceGroup

-- | Describes a group of video synchronization source identifiers
--   
--   <b>semantics</b> The semantics of sources, one of <a>SIM</a> or
--   <a>FID</a>
--   
--   <b>source_ids</b> The list of synchronization source identifiers
data GroupCallVideoSourceGroup
GroupCallVideoSourceGroup :: Maybe [Int] -> Maybe String -> GroupCallVideoSourceGroup
[source_ids] :: GroupCallVideoSourceGroup -> Maybe [Int]
[semantics] :: GroupCallVideoSourceGroup -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.GroupCallVideoSourceGroup.GroupCallVideoSourceGroup
instance GHC.Show.Show API.GroupCallVideoSourceGroup.GroupCallVideoSourceGroup
instance Data.Aeson.Types.ToJSON.ToJSON API.GroupCallVideoSourceGroup.GroupCallVideoSourceGroup
instance Data.Aeson.Types.FromJSON.FromJSON API.GroupCallVideoSourceGroup.GroupCallVideoSourceGroup

module API.Hashtags

-- | Contains a list of hashtags
--   
--   <b>hashtags</b> A list of hashtags
data Hashtags
Hashtags :: Maybe [String] -> Hashtags
[hashtags] :: Hashtags -> Maybe [String]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Hashtags.Hashtags
instance GHC.Show.Show API.Hashtags.Hashtags
instance Data.Aeson.Types.ToJSON.ToJSON API.Hashtags.Hashtags
instance Data.Aeson.Types.FromJSON.FromJSON API.Hashtags.Hashtags

module API.HttpUrl

-- | Contains an HTTP URL
--   
--   <b>url</b> The URL
data HttpUrl
HttpUrl :: Maybe String -> HttpUrl
[url] :: HttpUrl -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.HttpUrl.HttpUrl
instance GHC.Show.Show API.HttpUrl.HttpUrl
instance Data.Aeson.Types.ToJSON.ToJSON API.HttpUrl.HttpUrl
instance Data.Aeson.Types.FromJSON.FromJSON API.HttpUrl.HttpUrl

module API.IdentityDocument

-- | An identity document
--   
--   <b>number</b> Document number; 1-24 characters
--   
--   <b>expiry_date</b> Document expiry date; may be null
--   
--   <b>front_side</b> Front side of the document
--   
--   <b>reverse_side</b> Reverse side of the document; only for driver
--   license and identity card; may be null
--   
--   <b>selfie</b> Selfie with the document; may be null
--   
--   <b>translation</b> List of files containing a certified English
--   translation of the document
data IdentityDocument
IdentityDocument :: Maybe [DatedFile] -> Maybe DatedFile -> Maybe DatedFile -> Maybe DatedFile -> Maybe Date -> Maybe String -> IdentityDocument
[translation] :: IdentityDocument -> Maybe [DatedFile]
[selfie] :: IdentityDocument -> Maybe DatedFile
[reverse_side] :: IdentityDocument -> Maybe DatedFile
[front_side] :: IdentityDocument -> Maybe DatedFile
[expiry_date] :: IdentityDocument -> Maybe Date
[number] :: IdentityDocument -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.IdentityDocument.IdentityDocument
instance GHC.Show.Show API.IdentityDocument.IdentityDocument
instance Data.Aeson.Types.ToJSON.ToJSON API.IdentityDocument.IdentityDocument
instance Data.Aeson.Types.FromJSON.FromJSON API.IdentityDocument.IdentityDocument

module API.ImportedContacts

-- | Represents the result of an ImportContacts request
--   
--   <b>user_ids</b> User identifiers of the imported contacts in the same
--   order as they were specified in the request; 0 if the contact is not
--   yet a registered user
--   
--   <b>importer_count</b> The number of users that imported the
--   corresponding contact; 0 for already registered users or if
--   unavailable
data ImportedContacts
ImportedContacts :: Maybe [Int] -> Maybe [Int] -> ImportedContacts
[importer_count] :: ImportedContacts -> Maybe [Int]
[user_ids] :: ImportedContacts -> Maybe [Int]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ImportedContacts.ImportedContacts
instance GHC.Show.Show API.ImportedContacts.ImportedContacts
instance Data.Aeson.Types.ToJSON.ToJSON API.ImportedContacts.ImportedContacts
instance Data.Aeson.Types.FromJSON.FromJSON API.ImportedContacts.ImportedContacts

module API.InlineKeyboardButton

-- | Represents a single button in an inline keyboard
--   
--   <b>text</b> Text of the button
--   
--   <b>type</b> Type of the button
data InlineKeyboardButton
InlineKeyboardButton :: Maybe InlineKeyboardButtonType -> Maybe String -> InlineKeyboardButton
[_type] :: InlineKeyboardButton -> Maybe InlineKeyboardButtonType
[text] :: InlineKeyboardButton -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InlineKeyboardButton.InlineKeyboardButton
instance GHC.Show.Show API.InlineKeyboardButton.InlineKeyboardButton
instance Data.Aeson.Types.ToJSON.ToJSON API.InlineKeyboardButton.InlineKeyboardButton
instance Data.Aeson.Types.FromJSON.FromJSON API.InlineKeyboardButton.InlineKeyboardButton

module API.InlineKeyboardButtonType

-- | Describes the type of an inline keyboard button
data InlineKeyboardButtonType

-- | A button that opens a specified URL
--   
--   <b>url</b> HTTP or tg:// URL to open
InlineKeyboardButtonTypeUrl :: Maybe String -> InlineKeyboardButtonType
[url] :: InlineKeyboardButtonType -> Maybe String

-- | A button that opens a specified URL and automatically authorize the
--   current user if allowed to do so
--   
--   <b>url</b> An HTTP URL to open
--   
--   <b>id</b> Unique button identifier
--   
--   <b>forward_text</b> If non-empty, new text of the button in forwarded
--   messages
InlineKeyboardButtonTypeLoginUrl :: Maybe String -> Maybe Int -> Maybe String -> InlineKeyboardButtonType
[forward_text] :: InlineKeyboardButtonType -> Maybe String
[_id] :: InlineKeyboardButtonType -> Maybe Int
[url] :: InlineKeyboardButtonType -> Maybe String

-- | A button that sends a callback query to a bot
--   
--   <b>data</b> Data to be sent to the bot via a callback query
InlineKeyboardButtonTypeCallback :: Maybe String -> InlineKeyboardButtonType
[_data] :: InlineKeyboardButtonType -> Maybe String

-- | A button that asks for password of the current user and then sends a
--   callback query to a bot
--   
--   <b>data</b> Data to be sent to the bot via a callback query
InlineKeyboardButtonTypeCallbackWithPassword :: Maybe String -> InlineKeyboardButtonType
[_data] :: InlineKeyboardButtonType -> Maybe String

-- | A button with a game that sends a callback query to a bot. This button
--   must be in the first column and row of the keyboard and can be
--   attached only to a message with content of the type messageGame
InlineKeyboardButtonTypeCallbackGame :: InlineKeyboardButtonType

-- | A button that forces an inline query to the bot to be inserted in the
--   input field
--   
--   <b>query</b> Inline query to be sent to the bot
--   
--   <b>in_current_chat</b> True, if the inline query must be sent from the
--   current chat
InlineKeyboardButtonTypeSwitchInline :: Maybe Bool -> Maybe String -> InlineKeyboardButtonType
[in_current_chat] :: InlineKeyboardButtonType -> Maybe Bool
[query] :: InlineKeyboardButtonType -> Maybe String

-- | A button to buy something. This button must be in the first column and
--   row of the keyboard and can be attached only to a message with content
--   of the type messageInvoice
InlineKeyboardButtonTypeBuy :: InlineKeyboardButtonType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InlineKeyboardButtonType.InlineKeyboardButtonType
instance GHC.Show.Show API.InlineKeyboardButtonType.InlineKeyboardButtonType
instance Data.Aeson.Types.ToJSON.ToJSON API.InlineKeyboardButtonType.InlineKeyboardButtonType
instance Data.Aeson.Types.FromJSON.FromJSON API.InlineKeyboardButtonType.InlineKeyboardButtonType

module API.InlineQueryResults

-- | Represents the results of the inline query. Use
--   sendInlineQueryResultMessage to send the result of the query
--   
--   <b>inline_query_id</b> Unique identifier of the inline query
--   
--   <b>next_offset</b> The offset for the next request. If empty, there
--   are no more results
--   
--   <b>results</b> Results of the query
--   
--   <b>switch_pm_text</b> If non-empty, this text must be shown on the
--   button, which opens a private chat with the bot and sends the bot a
--   start message with the switch_pm_parameter
--   
--   <b>switch_pm_parameter</b> Parameter for the bot start message
data InlineQueryResults
InlineQueryResults :: Maybe String -> Maybe String -> Maybe [InlineQueryResult] -> Maybe String -> Maybe Int -> InlineQueryResults
[switch_pm_parameter] :: InlineQueryResults -> Maybe String
[switch_pm_text] :: InlineQueryResults -> Maybe String
[results] :: InlineQueryResults -> Maybe [InlineQueryResult]
[next_offset] :: InlineQueryResults -> Maybe String
[inline_query_id] :: InlineQueryResults -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InlineQueryResults.InlineQueryResults
instance GHC.Show.Show API.InlineQueryResults.InlineQueryResults
instance Data.Aeson.Types.ToJSON.ToJSON API.InlineQueryResults.InlineQueryResults
instance Data.Aeson.Types.FromJSON.FromJSON API.InlineQueryResults.InlineQueryResults

module API.Functions.SetBackground

-- | Changes the background selected by the user; adds background to the
--   list of installed backgrounds
--   
--   <b>background</b> The input background to use; pass null to create a
--   new filled backgrounds or to remove the current background
--   
--   <b>type</b> Background type; pass null to use the default type of the
--   remote background or to remove the current background
--   
--   <b>for_dark_theme</b> True, if the background is chosen for dark theme
data SetBackground
SetBackground :: Maybe Bool -> Maybe BackgroundType -> Maybe InputBackground -> SetBackground
[for_dark_theme] :: SetBackground -> Maybe Bool
[_type] :: SetBackground -> Maybe BackgroundType
[background] :: SetBackground -> Maybe InputBackground
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetBackground.SetBackground
instance GHC.Show.Show API.Functions.SetBackground.SetBackground
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetBackground.SetBackground
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetBackground.SetBackground

module API.Functions.SetProfilePhoto

-- | Changes a profile photo for the current user
--   
--   <b>photo</b> Profile photo to set
data SetProfilePhoto
SetProfilePhoto :: Maybe InputChatPhoto -> SetProfilePhoto
[photo] :: SetProfilePhoto -> Maybe InputChatPhoto
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetProfilePhoto.SetProfilePhoto
instance GHC.Show.Show API.Functions.SetProfilePhoto.SetProfilePhoto
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetProfilePhoto.SetProfilePhoto
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetProfilePhoto.SetProfilePhoto

module API.Functions.SetChatPhoto

-- | Changes the photo of a chat. Supported only for basic groups,
--   supergroups and channels. Requires can_change_info administrator right
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>photo</b> New chat photo; pass null to delete the chat photo
data SetChatPhoto
SetChatPhoto :: Maybe InputChatPhoto -> Maybe Int -> SetChatPhoto
[photo] :: SetChatPhoto -> Maybe InputChatPhoto
[chat_id] :: SetChatPhoto -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetChatPhoto.SetChatPhoto
instance GHC.Show.Show API.Functions.SetChatPhoto.SetChatPhoto
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetChatPhoto.SetChatPhoto
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetChatPhoto.SetChatPhoto

module API.Functions.SendPaymentForm

-- | Sends a filled-out payment form to the bot for final verification
--   
--   <b>chat_id</b> Chat identifier of the Invoice message
--   
--   <b>message_id</b> Message identifier
--   
--   <b>payment_form_id</b> Payment form identifier returned by
--   getPaymentForm
--   
--   <b>order_info_id</b> Identifier returned by validateOrderInfo, or an
--   empty string
--   
--   <b>shipping_option_id</b> Identifier of a chosen shipping option, if
--   applicable
--   
--   <b>credentials</b> The credentials chosen by user for payment
--   
--   <b>tip_amount</b> Chosen by the user amount of tip in the smallest
--   units of the currency
data SendPaymentForm
SendPaymentForm :: Maybe Int -> Maybe InputCredentials -> Maybe String -> Maybe String -> Maybe Int -> Maybe Int -> Maybe Int -> SendPaymentForm
[tip_amount] :: SendPaymentForm -> Maybe Int
[credentials] :: SendPaymentForm -> Maybe InputCredentials
[shipping_option_id] :: SendPaymentForm -> Maybe String
[order_info_id] :: SendPaymentForm -> Maybe String
[payment_form_id] :: SendPaymentForm -> Maybe Int
[message_id] :: SendPaymentForm -> Maybe Int
[chat_id] :: SendPaymentForm -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendPaymentForm.SendPaymentForm
instance GHC.Show.Show API.Functions.SendPaymentForm.SendPaymentForm
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendPaymentForm.SendPaymentForm
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendPaymentForm.SendPaymentForm

module API.InputCredentials

-- | Contains information about the payment method chosen by the user
data InputCredentials

-- | Applies if a user chooses some previously saved payment credentials.
--   To use their previously saved credentials, the user must have a valid
--   temporary password
--   
--   <b>saved_credentials_id</b> Identifier of the saved credentials
InputCredentialsSaved :: Maybe String -> InputCredentials
[saved_credentials_id] :: InputCredentials -> Maybe String

-- | Applies if a user enters new credentials on a payment provider website
--   
--   <b>data</b> Contains JSON-encoded data with a credential identifier
--   from the payment provider
--   
--   <b>allow_save</b> True, if the credential identifier can be saved on
--   the server side
InputCredentialsNew :: Maybe Bool -> Maybe String -> InputCredentials
[allow_save] :: InputCredentials -> Maybe Bool
[_data] :: InputCredentials -> Maybe String

-- | Applies if a user enters new credentials using Apple Pay
--   
--   <b>data</b> JSON-encoded data with the credential identifier
InputCredentialsApplePay :: Maybe String -> InputCredentials
[_data] :: InputCredentials -> Maybe String

-- | Applies if a user enters new credentials using Google Pay
--   
--   <b>data</b> JSON-encoded data with the credential identifier
InputCredentialsGooglePay :: Maybe String -> InputCredentials
[_data] :: InputCredentials -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InputCredentials.InputCredentials
instance GHC.Show.Show API.InputCredentials.InputCredentials
instance Data.Aeson.Types.ToJSON.ToJSON API.InputCredentials.InputCredentials
instance Data.Aeson.Types.FromJSON.FromJSON API.InputCredentials.InputCredentials

module API.InputChatPhoto

-- | Describes a photo to be set as a user profile or chat photo
data InputChatPhoto

-- | A previously used profile photo of the current user
--   
--   <b>chat_photo_id</b> Identifier of the current user's profile photo to
--   reuse
InputChatPhotoPrevious :: Maybe Int -> InputChatPhoto
[chat_photo_id] :: InputChatPhoto -> Maybe Int

-- | A static photo in JPEG format
--   
--   <b>photo</b> Photo to be set as profile photo. Only inputFileLocal and
--   inputFileGenerated are allowed
InputChatPhotoStatic :: Maybe InputFile -> InputChatPhoto
[photo] :: InputChatPhoto -> Maybe InputFile

-- | An animation in MPEG4 format; must be square, at most 10 seconds long,
--   have width between 160 and 800 and be at most 2MB in size
--   
--   <b>animation</b> Animation to be set as profile photo. Only
--   inputFileLocal and inputFileGenerated are allowed
--   
--   <b>main_frame_timestamp</b> Timestamp of the frame, which will be used
--   as static chat photo
InputChatPhotoAnimation :: Maybe Float -> Maybe InputFile -> InputChatPhoto
[main_frame_timestamp] :: InputChatPhoto -> Maybe Float
[animation] :: InputChatPhoto -> Maybe InputFile
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InputChatPhoto.InputChatPhoto
instance GHC.Show.Show API.InputChatPhoto.InputChatPhoto
instance Data.Aeson.Types.ToJSON.ToJSON API.InputChatPhoto.InputChatPhoto
instance Data.Aeson.Types.FromJSON.FromJSON API.InputChatPhoto.InputChatPhoto

module API.InputBackground

-- | Contains information about background to set
data InputBackground

-- | A background from a local file
--   
--   <b>background</b> Background file to use. Only inputFileLocal and
--   inputFileGenerated are supported. The file must be in JPEG format for
--   wallpapers and in PNG format for patterns
InputBackgroundLocal :: Maybe InputFile -> InputBackground
[background] :: InputBackground -> Maybe InputFile

-- | A background from the server
--   
--   <b>background_id</b> The background identifier
InputBackgroundRemote :: Maybe Int -> InputBackground
[background_id] :: InputBackground -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InputBackground.InputBackground
instance GHC.Show.Show API.InputBackground.InputBackground
instance Data.Aeson.Types.ToJSON.ToJSON API.InputBackground.InputBackground
instance Data.Aeson.Types.FromJSON.FromJSON API.InputBackground.InputBackground

module API.Functions.UploadFile

-- | Asynchronously uploads a file to the cloud without sending it in a
--   message. updateFile will be used to notify about upload progress and
--   successful completion of the upload. The file will not have a
--   persistent remote identifier until it will be sent in a message
--   
--   <b>file</b> File to upload
--   
--   <b>file_type</b> File type; pass null if unknown
--   
--   <b>priority</b> Priority of the upload (1-32). The higher the
--   priority, the earlier the file will be uploaded. If the priorities of
--   two files are equal, then the first one for which uploadFile was
--   called will be uploaded first
data UploadFile
UploadFile :: Maybe Int -> Maybe FileType -> Maybe InputFile -> UploadFile
[priority] :: UploadFile -> Maybe Int
[file_type] :: UploadFile -> Maybe FileType
[file] :: UploadFile -> Maybe InputFile
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.UploadFile.UploadFile
instance GHC.Show.Show API.Functions.UploadFile.UploadFile
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.UploadFile.UploadFile
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.UploadFile.UploadFile

module API.Functions.SetStickerSetThumbnail

-- | Sets a sticker set thumbnail; for bots only. Returns the sticker set
--   
--   <b>user_id</b> Sticker set owner
--   
--   <b>name</b> Sticker set name
--   
--   <b>thumbnail</b> Thumbnail to set in PNG or TGS format; pass null to
--   remove the sticker set thumbnail. Animated thumbnail must be set for
--   animated sticker sets and only for them
data SetStickerSetThumbnail
SetStickerSetThumbnail :: Maybe InputFile -> Maybe String -> Maybe Int -> SetStickerSetThumbnail
[thumbnail] :: SetStickerSetThumbnail -> Maybe InputFile
[name] :: SetStickerSetThumbnail -> Maybe String
[user_id] :: SetStickerSetThumbnail -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetStickerSetThumbnail.SetStickerSetThumbnail
instance GHC.Show.Show API.Functions.SetStickerSetThumbnail.SetStickerSetThumbnail
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetStickerSetThumbnail.SetStickerSetThumbnail
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetStickerSetThumbnail.SetStickerSetThumbnail

module API.Functions.SetStickerPositionInSet

-- | Changes the position of a sticker in the set to which it belongs; for
--   bots only. The sticker set must have been created by the bot
--   
--   <b>sticker</b> Sticker
--   
--   <b>position</b> New position of the sticker in the set, zero-based
data SetStickerPositionInSet
SetStickerPositionInSet :: Maybe Int -> Maybe InputFile -> SetStickerPositionInSet
[position] :: SetStickerPositionInSet -> Maybe Int
[sticker] :: SetStickerPositionInSet -> Maybe InputFile
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetStickerPositionInSet.SetStickerPositionInSet
instance GHC.Show.Show API.Functions.SetStickerPositionInSet.SetStickerPositionInSet
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetStickerPositionInSet.SetStickerPositionInSet
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetStickerPositionInSet.SetStickerPositionInSet

module API.Functions.RemoveStickerFromSet

-- | Removes a sticker from the set to which it belongs; for bots only. The
--   sticker set must have been created by the bot
--   
--   <b>sticker</b> Sticker
data RemoveStickerFromSet
RemoveStickerFromSet :: Maybe InputFile -> RemoveStickerFromSet
[sticker] :: RemoveStickerFromSet -> Maybe InputFile
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RemoveStickerFromSet.RemoveStickerFromSet
instance GHC.Show.Show API.Functions.RemoveStickerFromSet.RemoveStickerFromSet
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RemoveStickerFromSet.RemoveStickerFromSet
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RemoveStickerFromSet.RemoveStickerFromSet

module API.Functions.RemoveSavedAnimation

-- | Removes an animation from the list of saved animations
--   
--   <b>animation</b> Animation file to be removed
data RemoveSavedAnimation
RemoveSavedAnimation :: Maybe InputFile -> RemoveSavedAnimation
[animation] :: RemoveSavedAnimation -> Maybe InputFile
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RemoveSavedAnimation.RemoveSavedAnimation
instance GHC.Show.Show API.Functions.RemoveSavedAnimation.RemoveSavedAnimation
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RemoveSavedAnimation.RemoveSavedAnimation
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RemoveSavedAnimation.RemoveSavedAnimation

module API.Functions.RemoveRecentSticker

-- | Removes a sticker from the list of recently used stickers
--   
--   <b>is_attached</b> Pass true to remove the sticker from the list of
--   stickers recently attached to photo or video files; pass false to
--   remove the sticker from the list of recently sent stickers
--   
--   <b>sticker</b> Sticker file to delete
data RemoveRecentSticker
RemoveRecentSticker :: Maybe InputFile -> Maybe Bool -> RemoveRecentSticker
[sticker] :: RemoveRecentSticker -> Maybe InputFile
[is_attached] :: RemoveRecentSticker -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RemoveRecentSticker.RemoveRecentSticker
instance GHC.Show.Show API.Functions.RemoveRecentSticker.RemoveRecentSticker
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RemoveRecentSticker.RemoveRecentSticker
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RemoveRecentSticker.RemoveRecentSticker

module API.Functions.RemoveFavoriteSticker

-- | Removes a sticker from the list of favorite stickers
--   
--   <b>sticker</b> Sticker file to delete from the list
data RemoveFavoriteSticker
RemoveFavoriteSticker :: Maybe InputFile -> RemoveFavoriteSticker
[sticker] :: RemoveFavoriteSticker -> Maybe InputFile
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RemoveFavoriteSticker.RemoveFavoriteSticker
instance GHC.Show.Show API.Functions.RemoveFavoriteSticker.RemoveFavoriteSticker
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RemoveFavoriteSticker.RemoveFavoriteSticker
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RemoveFavoriteSticker.RemoveFavoriteSticker

module API.Functions.ImportMessages

-- | Imports messages exported from another app
--   
--   <b>chat_id</b> Identifier of a chat to which the messages will be
--   imported. It must be an identifier of a private chat with a mutual
--   contact or an identifier of a supergroup chat with can_change_info
--   administrator right
--   
--   <b>message_file</b> File with messages to import. Only inputFileLocal
--   and inputFileGenerated are supported. The file must not be previously
--   uploaded
--   
--   <b>attached_files</b> Files used in the imported messages. Only
--   inputFileLocal and inputFileGenerated are supported. The files must
--   not be previously uploaded
data ImportMessages
ImportMessages :: Maybe [InputFile] -> Maybe InputFile -> Maybe Int -> ImportMessages
[attached_files] :: ImportMessages -> Maybe [InputFile]
[message_file] :: ImportMessages -> Maybe InputFile
[chat_id] :: ImportMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ImportMessages.ImportMessages
instance GHC.Show.Show API.Functions.ImportMessages.ImportMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ImportMessages.ImportMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ImportMessages.ImportMessages

module API.Functions.GetStickerEmojis

-- | Returns emoji corresponding to a sticker. The list is only for
--   informational purposes, because a sticker is always sent with a fixed
--   emoji from the corresponding Sticker object
--   
--   <b>sticker</b> Sticker file identifier
data GetStickerEmojis
GetStickerEmojis :: Maybe InputFile -> GetStickerEmojis
[sticker] :: GetStickerEmojis -> Maybe InputFile
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetStickerEmojis.GetStickerEmojis
instance GHC.Show.Show API.Functions.GetStickerEmojis.GetStickerEmojis
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetStickerEmojis.GetStickerEmojis
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetStickerEmojis.GetStickerEmojis

module API.Functions.AddSavedAnimation

-- | Manually adds a new animation to the list of saved animations. The new
--   animation is added to the beginning of the list. If the animation was
--   already in the list, it is removed first. Only non-secret video
--   animations with MIME type "video/mp4" can be added to the list
--   
--   <b>animation</b> The animation file to be added. Only animations known
--   to the server (i.e., successfully sent via a message) can be added to
--   the list
data AddSavedAnimation
AddSavedAnimation :: Maybe InputFile -> AddSavedAnimation
[animation] :: AddSavedAnimation -> Maybe InputFile
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddSavedAnimation.AddSavedAnimation
instance GHC.Show.Show API.Functions.AddSavedAnimation.AddSavedAnimation
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddSavedAnimation.AddSavedAnimation
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddSavedAnimation.AddSavedAnimation

module API.Functions.AddRecentSticker

-- | Manually adds a new sticker to the list of recently used stickers. The
--   new sticker is added to the top of the list. If the sticker was
--   already in the list, it is removed from the list first. Only stickers
--   belonging to a sticker set can be added to this list
--   
--   <b>is_attached</b> Pass true to add the sticker to the list of
--   stickers recently attached to photo or video files; pass false to add
--   the sticker to the list of recently sent stickers
--   
--   <b>sticker</b> Sticker file to add
data AddRecentSticker
AddRecentSticker :: Maybe InputFile -> Maybe Bool -> AddRecentSticker
[sticker] :: AddRecentSticker -> Maybe InputFile
[is_attached] :: AddRecentSticker -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddRecentSticker.AddRecentSticker
instance GHC.Show.Show API.Functions.AddRecentSticker.AddRecentSticker
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddRecentSticker.AddRecentSticker
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddRecentSticker.AddRecentSticker

module API.Functions.AddFavoriteSticker

-- | Adds a new sticker to the list of favorite stickers. The new sticker
--   is added to the top of the list. If the sticker was already in the
--   list, it is removed from the list first. Only stickers belonging to a
--   sticker set can be added to this list
--   
--   <b>sticker</b> Sticker file to add
data AddFavoriteSticker
AddFavoriteSticker :: Maybe InputFile -> AddFavoriteSticker
[sticker] :: AddFavoriteSticker -> Maybe InputFile
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddFavoriteSticker.AddFavoriteSticker
instance GHC.Show.Show API.Functions.AddFavoriteSticker.AddFavoriteSticker
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddFavoriteSticker.AddFavoriteSticker
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddFavoriteSticker.AddFavoriteSticker

module API.InputFile

-- | Points to a file
data InputFile

-- | A file defined by its unique ID
--   
--   <b>id</b> Unique file identifier
InputFileId :: Maybe Int -> InputFile
[__id] :: InputFile -> Maybe Int

-- | A file defined by its remote ID. The remote ID is guaranteed to be
--   usable only if the corresponding file is still accessible to the user
--   and known to TDLib.
--   
--   <ul>
--   <li>For example, if the file is from a message, then the message must
--   be not deleted and accessible to the user. If the file database is
--   disabled, then the corresponding object with the file must be
--   preloaded by the application</li>
--   </ul>
--   
--   <b>id</b> Remote file identifier
InputFileRemote :: Maybe String -> InputFile
[_id] :: InputFile -> Maybe String

-- | A file defined by a local path
--   
--   <b>path</b> Local path to the file
InputFileLocal :: Maybe String -> InputFile
[path] :: InputFile -> Maybe String

-- | A file generated by the application
--   
--   <b>original_path</b> Local path to a file from which the file is
--   generated; may be empty if there is no such file
--   
--   <b>conversion</b> String specifying the conversion applied to the
--   original file; must be persistent across application restarts.
--   Conversions beginning with <tt>#</tt> are reserved for internal TDLib
--   usage
--   
--   <b>expected_size</b> Expected size of the generated file, in bytes; 0
--   if unknown
InputFileGenerated :: Maybe Int -> Maybe String -> Maybe String -> InputFile
[expected_size] :: InputFile -> Maybe Int
[conversion] :: InputFile -> Maybe String
[original_path] :: InputFile -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InputFile.InputFile
instance GHC.Show.Show API.InputFile.InputFile
instance Data.Aeson.Types.ToJSON.ToJSON API.InputFile.InputFile
instance Data.Aeson.Types.FromJSON.FromJSON API.InputFile.InputFile

module API.InputIdentityDocument

-- | An identity document to be saved to Telegram Passport
--   
--   <b>number</b> Document number; 1-24 characters
--   
--   <b>expiry_date</b> Document expiry date, if available
--   
--   <b>front_side</b> Front side of the document
--   
--   <b>reverse_side</b> Reverse side of the document; only for driver
--   license and identity card; pass null otherwise
--   
--   <b>selfie</b> Selfie with the document; pass null if unavailable
--   
--   <b>translation</b> List of files containing a certified English
--   translation of the document
data InputIdentityDocument
InputIdentityDocument :: Maybe [InputFile] -> Maybe InputFile -> Maybe InputFile -> Maybe InputFile -> Maybe Date -> Maybe String -> InputIdentityDocument
[translation] :: InputIdentityDocument -> Maybe [InputFile]
[selfie] :: InputIdentityDocument -> Maybe InputFile
[reverse_side] :: InputIdentityDocument -> Maybe InputFile
[front_side] :: InputIdentityDocument -> Maybe InputFile
[expiry_date] :: InputIdentityDocument -> Maybe Date
[number] :: InputIdentityDocument -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InputIdentityDocument.InputIdentityDocument
instance GHC.Show.Show API.InputIdentityDocument.InputIdentityDocument
instance Data.Aeson.Types.ToJSON.ToJSON API.InputIdentityDocument.InputIdentityDocument
instance Data.Aeson.Types.FromJSON.FromJSON API.InputIdentityDocument.InputIdentityDocument

module API.Functions.AnswerInlineQuery

-- | Sets the result of an inline query; for bots only
--   
--   <b>inline_query_id</b> Identifier of the inline query
--   
--   <b>is_personal</b> True, if the result of the query can be cached for
--   the specified user
--   
--   <b>results</b> The results of the query
--   
--   <b>cache_time</b> Allowed time to cache the results of the query, in
--   seconds
--   
--   <b>next_offset</b> Offset for the next inline query; pass an empty
--   string if there are no more results
--   
--   <b>switch_pm_text</b> If non-empty, this text must be shown on the
--   button that opens a private chat with the bot and sends a start
--   message to the bot with the parameter switch_pm_parameter
--   
--   <b>switch_pm_parameter</b> The parameter for the bot start message
data AnswerInlineQuery
AnswerInlineQuery :: Maybe String -> Maybe String -> Maybe String -> Maybe Int -> Maybe [InputInlineQueryResult] -> Maybe Bool -> Maybe Int -> AnswerInlineQuery
[switch_pm_parameter] :: AnswerInlineQuery -> Maybe String
[switch_pm_text] :: AnswerInlineQuery -> Maybe String
[next_offset] :: AnswerInlineQuery -> Maybe String
[cache_time] :: AnswerInlineQuery -> Maybe Int
[results] :: AnswerInlineQuery -> Maybe [InputInlineQueryResult]
[is_personal] :: AnswerInlineQuery -> Maybe Bool
[inline_query_id] :: AnswerInlineQuery -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AnswerInlineQuery.AnswerInlineQuery
instance GHC.Show.Show API.Functions.AnswerInlineQuery.AnswerInlineQuery
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AnswerInlineQuery.AnswerInlineQuery
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AnswerInlineQuery.AnswerInlineQuery

module API.DraftMessage

-- | Contains information about a message draft
--   
--   <b>reply_to_message_id</b> Identifier of the message to reply to; 0 if
--   none
--   
--   <b>date</b> Point in time (Unix timestamp) when the draft was created
--   
--   <b>input_message_text</b> Content of the message draft; must be of the
--   type inputMessageText
data DraftMessage
DraftMessage :: Maybe InputMessageContent -> Maybe Int -> Maybe Int -> DraftMessage
[input_message_text] :: DraftMessage -> Maybe InputMessageContent
[date] :: DraftMessage -> Maybe Int
[reply_to_message_id] :: DraftMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.DraftMessage.DraftMessage
instance GHC.Show.Show API.DraftMessage.DraftMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.DraftMessage.DraftMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.DraftMessage.DraftMessage

module API.Functions.SetPassportElement

-- | Adds an element to the user's Telegram Passport. May return an error
--   with a message <a>PHONE_VERIFICATION_NEEDED</a> or
--   <a>EMAIL_VERIFICATION_NEEDED</a> if the chosen phone number or the
--   chosen email address must be verified first
--   
--   <b>element</b> Input Telegram Passport element
--   
--   <b>password</b> Password of the current user
data SetPassportElement
SetPassportElement :: Maybe String -> Maybe InputPassportElement -> SetPassportElement
[password] :: SetPassportElement -> Maybe String
[element] :: SetPassportElement -> Maybe InputPassportElement
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetPassportElement.SetPassportElement
instance GHC.Show.Show API.Functions.SetPassportElement.SetPassportElement
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetPassportElement.SetPassportElement
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetPassportElement.SetPassportElement

module API.Functions.SetPassportElementErrors

-- | Informs the user that some of the elements in their Telegram Passport
--   contain errors; for bots only. The user will not be able to resend the
--   elements, until the errors are fixed
--   
--   <b>user_id</b> User identifier
--   
--   <b>errors</b> The errors
data SetPassportElementErrors
SetPassportElementErrors :: Maybe [InputPassportElementError] -> Maybe Int -> SetPassportElementErrors
[errors] :: SetPassportElementErrors -> Maybe [InputPassportElementError]
[user_id] :: SetPassportElementErrors -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetPassportElementErrors.SetPassportElementErrors
instance GHC.Show.Show API.Functions.SetPassportElementErrors.SetPassportElementErrors
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetPassportElementErrors.SetPassportElementErrors
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetPassportElementErrors.SetPassportElementErrors

module API.InputPassportElementErrorSource

-- | Contains the description of an error in a Telegram Passport element;
--   for bots only
data InputPassportElementErrorSource

-- | The element contains an error in an unspecified place. The error will
--   be considered resolved when new data is added
--   
--   <b>element_hash</b> Current hash of the entire element
InputPassportElementErrorSourceUnspecified :: Maybe String -> InputPassportElementErrorSource
[element_hash] :: InputPassportElementErrorSource -> Maybe String

-- | A data field contains an error. The error is considered resolved when
--   the field's value changes
--   
--   <b>field_name</b> Field name
--   
--   <b>data_hash</b> Current data hash
InputPassportElementErrorSourceDataField :: Maybe String -> Maybe String -> InputPassportElementErrorSource
[data_hash] :: InputPassportElementErrorSource -> Maybe String
[field_name] :: InputPassportElementErrorSource -> Maybe String

-- | The front side of the document contains an error. The error is
--   considered resolved when the file with the front side of the document
--   changes
--   
--   <b>file_hash</b> Current hash of the file containing the front side
InputPassportElementErrorSourceFrontSide :: Maybe String -> InputPassportElementErrorSource
[file_hash] :: InputPassportElementErrorSource -> Maybe String

-- | The reverse side of the document contains an error. The error is
--   considered resolved when the file with the reverse side of the
--   document changes
--   
--   <b>file_hash</b> Current hash of the file containing the reverse side
InputPassportElementErrorSourceReverseSide :: Maybe String -> InputPassportElementErrorSource
[file_hash] :: InputPassportElementErrorSource -> Maybe String

-- | The selfie contains an error. The error is considered resolved when
--   the file with the selfie changes
--   
--   <b>file_hash</b> Current hash of the file containing the selfie
InputPassportElementErrorSourceSelfie :: Maybe String -> InputPassportElementErrorSource
[file_hash] :: InputPassportElementErrorSource -> Maybe String

-- | One of the files containing the translation of the document contains
--   an error. The error is considered resolved when the file with the
--   translation changes
--   
--   <b>file_hash</b> Current hash of the file containing the translation
InputPassportElementErrorSourceTranslationFile :: Maybe String -> InputPassportElementErrorSource
[file_hash] :: InputPassportElementErrorSource -> Maybe String

-- | The translation of the document contains an error. The error is
--   considered resolved when the list of files changes
--   
--   <b>file_hashes</b> Current hashes of all files with the translation
InputPassportElementErrorSourceTranslationFiles :: Maybe [String] -> InputPassportElementErrorSource
[file_hashes] :: InputPassportElementErrorSource -> Maybe [String]

-- | The file contains an error. The error is considered resolved when the
--   file changes
--   
--   <b>file_hash</b> Current hash of the file which has the error
InputPassportElementErrorSourceFile :: Maybe String -> InputPassportElementErrorSource
[file_hash] :: InputPassportElementErrorSource -> Maybe String

-- | The list of attached files contains an error. The error is considered
--   resolved when the file list changes
--   
--   <b>file_hashes</b> Current hashes of all attached files
InputPassportElementErrorSourceFiles :: Maybe [String] -> InputPassportElementErrorSource
[file_hashes] :: InputPassportElementErrorSource -> Maybe [String]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InputPassportElementErrorSource.InputPassportElementErrorSource
instance GHC.Show.Show API.InputPassportElementErrorSource.InputPassportElementErrorSource
instance Data.Aeson.Types.ToJSON.ToJSON API.InputPassportElementErrorSource.InputPassportElementErrorSource
instance Data.Aeson.Types.FromJSON.FromJSON API.InputPassportElementErrorSource.InputPassportElementErrorSource

module API.InputPersonalDocument

-- | A personal document to be saved to Telegram Passport
--   
--   <b>files</b> List of files containing the pages of the document
--   
--   <b>translation</b> List of files containing a certified English
--   translation of the document
data InputPersonalDocument
InputPersonalDocument :: Maybe [InputFile] -> Maybe [InputFile] -> InputPersonalDocument
[translation] :: InputPersonalDocument -> Maybe [InputFile]
[files] :: InputPersonalDocument -> Maybe [InputFile]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InputPersonalDocument.InputPersonalDocument
instance GHC.Show.Show API.InputPersonalDocument.InputPersonalDocument
instance Data.Aeson.Types.ToJSON.ToJSON API.InputPersonalDocument.InputPersonalDocument
instance Data.Aeson.Types.FromJSON.FromJSON API.InputPersonalDocument.InputPersonalDocument

module API.Functions.UploadStickerFile

-- | Uploads a PNG image with a sticker; returns the uploaded file
--   
--   <b>user_id</b> Sticker file owner; ignored for regular users
--   
--   <b>sticker</b> Sticker file to upload
data UploadStickerFile
UploadStickerFile :: Maybe InputSticker -> Maybe Int -> UploadStickerFile
[sticker] :: UploadStickerFile -> Maybe InputSticker
[user_id] :: UploadStickerFile -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.UploadStickerFile.UploadStickerFile
instance GHC.Show.Show API.Functions.UploadStickerFile.UploadStickerFile
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.UploadStickerFile.UploadStickerFile
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.UploadStickerFile.UploadStickerFile

module API.Functions.CreateNewStickerSet

-- | Creates a new sticker set. Returns the newly created sticker set
--   
--   <b>user_id</b> Sticker set owner; ignored for regular users
--   
--   <b>title</b> Sticker set title; 1-64 characters
--   
--   <b>name</b> Sticker set name. Can contain only English letters, digits
--   and underscores. Must end with *"_by_<a>username</a>"*
--   (*<a>bot_username</a>* is case insensitive) for bots; 1-64 characters
--   
--   <b>is_masks</b> True, if stickers are masks. Animated stickers can't
--   be masks
--   
--   <b>stickers</b> List of stickers to be added to the set; must be
--   non-empty. All stickers must be of the same type. For animated
--   stickers, uploadStickerFile must be used before the sticker is shown
--   
--   <b>source</b> Source of the sticker set; may be empty if unknown
data CreateNewStickerSet
CreateNewStickerSet :: Maybe String -> Maybe [InputSticker] -> Maybe Bool -> Maybe String -> Maybe String -> Maybe Int -> CreateNewStickerSet
[source] :: CreateNewStickerSet -> Maybe String
[stickers] :: CreateNewStickerSet -> Maybe [InputSticker]
[is_masks] :: CreateNewStickerSet -> Maybe Bool
[name] :: CreateNewStickerSet -> Maybe String
[title] :: CreateNewStickerSet -> Maybe String
[user_id] :: CreateNewStickerSet -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CreateNewStickerSet.CreateNewStickerSet
instance GHC.Show.Show API.Functions.CreateNewStickerSet.CreateNewStickerSet
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CreateNewStickerSet.CreateNewStickerSet
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CreateNewStickerSet.CreateNewStickerSet

module API.Functions.AddStickerToSet

-- | Adds a new sticker to a set; for bots only. Returns the sticker set
--   
--   <b>user_id</b> Sticker set owner
--   
--   <b>name</b> Sticker set name
--   
--   <b>sticker</b> Sticker to add to the set
data AddStickerToSet
AddStickerToSet :: Maybe InputSticker -> Maybe String -> Maybe Int -> AddStickerToSet
[sticker] :: AddStickerToSet -> Maybe InputSticker
[name] :: AddStickerToSet -> Maybe String
[user_id] :: AddStickerToSet -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddStickerToSet.AddStickerToSet
instance GHC.Show.Show API.Functions.AddStickerToSet.AddStickerToSet
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddStickerToSet.AddStickerToSet
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddStickerToSet.AddStickerToSet

module API.InputThumbnail

-- | A thumbnail to be sent along with a file; must be in JPEG or WEBP
--   format for stickers, and less than 200 KB in size
--   
--   <b>thumbnail</b> Thumbnail file to send. Sending thumbnails by file_id
--   is currently not supported
--   
--   <b>width</b> Thumbnail width, usually shouldn't exceed 320. Use 0 if
--   unknown
--   
--   <b>height</b> Thumbnail height, usually shouldn't exceed 320. Use 0 if
--   unknown
data InputThumbnail
InputThumbnail :: Maybe Int -> Maybe Int -> Maybe InputFile -> InputThumbnail
[height] :: InputThumbnail -> Maybe Int
[width] :: InputThumbnail -> Maybe Int
[thumbnail] :: InputThumbnail -> Maybe InputFile
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InputThumbnail.InputThumbnail
instance GHC.Show.Show API.InputThumbnail.InputThumbnail
instance Data.Aeson.Types.ToJSON.ToJSON API.InputThumbnail.InputThumbnail
instance Data.Aeson.Types.FromJSON.FromJSON API.InputThumbnail.InputThumbnail

module API.JsonObjectMember

-- | Represents one member of a JSON object
--   
--   <b>key</b> Member's key
--   
--   <b>value</b> Member's value
data JsonObjectMember
JsonObjectMember :: Maybe JsonValue -> Maybe String -> JsonObjectMember
[value] :: JsonObjectMember -> Maybe JsonValue
[key] :: JsonObjectMember -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.JsonObjectMember.JsonObjectMember
instance GHC.Show.Show API.JsonObjectMember.JsonObjectMember
instance Data.Aeson.Types.ToJSON.ToJSON API.JsonObjectMember.JsonObjectMember
instance Data.Aeson.Types.FromJSON.FromJSON API.JsonObjectMember.JsonObjectMember

module API.Functions.SaveApplicationLogEvent

-- | Saves application log event on the server. Can be called before
--   authorization
--   
--   <b>type</b> Event type
--   
--   <b>chat_id</b> Optional chat identifier, associated with the event
--   
--   <b>data</b> The log event data
data SaveApplicationLogEvent
SaveApplicationLogEvent :: Maybe JsonValue -> Maybe Int -> Maybe String -> SaveApplicationLogEvent
[_data] :: SaveApplicationLogEvent -> Maybe JsonValue
[chat_id] :: SaveApplicationLogEvent -> Maybe Int
[_type] :: SaveApplicationLogEvent -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SaveApplicationLogEvent.SaveApplicationLogEvent
instance GHC.Show.Show API.Functions.SaveApplicationLogEvent.SaveApplicationLogEvent
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SaveApplicationLogEvent.SaveApplicationLogEvent
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SaveApplicationLogEvent.SaveApplicationLogEvent

module API.Functions.GetJsonString

-- | Converts a JsonValue object to corresponding JSON-serialized string.
--   Can be called synchronously
--   
--   <b>json_value</b> The JsonValue object
data GetJsonString
GetJsonString :: Maybe JsonValue -> GetJsonString
[json_value] :: GetJsonString -> Maybe JsonValue
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetJsonString.GetJsonString
instance GHC.Show.Show API.Functions.GetJsonString.GetJsonString
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetJsonString.GetJsonString
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetJsonString.GetJsonString

module API.JsonValue

-- | Represents a JSON value
data JsonValue

-- | Represents a null JSON value
JsonValueNull :: JsonValue

-- | Represents a boolean JSON value
--   
--   <b>value</b> The value
JsonValueBoolean :: Maybe Bool -> JsonValue
[__value] :: JsonValue -> Maybe Bool

-- | Represents a numeric JSON value
--   
--   <b>value</b> The value
JsonValueNumber :: Maybe Float -> JsonValue
[_value] :: JsonValue -> Maybe Float

-- | Represents a string JSON value
--   
--   <b>value</b> The value
JsonValueString :: Maybe String -> JsonValue
[value] :: JsonValue -> Maybe String

-- | Represents a JSON array
--   
--   <b>values</b> The list of array elements
JsonValueArray :: Maybe [JsonValue] -> JsonValue
[values] :: JsonValue -> Maybe [JsonValue]

-- | Represents a JSON object
--   
--   <b>members</b> The list of object members
JsonValueObject :: Maybe [JsonObjectMember] -> JsonValue
[members] :: JsonValue -> Maybe [JsonObjectMember]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.JsonValue.JsonValue
instance GHC.Show.Show API.JsonValue.JsonValue
instance Data.Aeson.Types.ToJSON.ToJSON API.JsonValue.JsonValue
instance Data.Aeson.Types.FromJSON.FromJSON API.JsonValue.JsonValue

module API.KeyboardButton

-- | Represents a single button in a bot keyboard
--   
--   <b>text</b> Text of the button
--   
--   <b>type</b> Type of the button
data KeyboardButton
KeyboardButton :: Maybe KeyboardButtonType -> Maybe String -> KeyboardButton
[_type] :: KeyboardButton -> Maybe KeyboardButtonType
[text] :: KeyboardButton -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.KeyboardButton.KeyboardButton
instance GHC.Show.Show API.KeyboardButton.KeyboardButton
instance Data.Aeson.Types.ToJSON.ToJSON API.KeyboardButton.KeyboardButton
instance Data.Aeson.Types.FromJSON.FromJSON API.KeyboardButton.KeyboardButton

module API.KeyboardButtonType

-- | Describes a keyboard button type
data KeyboardButtonType

-- | A simple button, with text that must be sent when the button is
--   pressed
KeyboardButtonTypeText :: KeyboardButtonType

-- | A button that sends the user's phone number when pressed; available
--   only in private chats
KeyboardButtonTypeRequestPhoneNumber :: KeyboardButtonType

-- | A button that sends the user's location when pressed; available only
--   in private chats
KeyboardButtonTypeRequestLocation :: KeyboardButtonType

-- | A button that allows the user to create and send a poll when pressed;
--   available only in private chats
--   
--   <b>force_regular</b> If true, only regular polls must be allowed to
--   create
--   
--   <b>force_quiz</b> If true, only polls in quiz mode must be allowed to
--   create
KeyboardButtonTypeRequestPoll :: Maybe Bool -> Maybe Bool -> KeyboardButtonType
[force_quiz] :: KeyboardButtonType -> Maybe Bool
[force_regular] :: KeyboardButtonType -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.KeyboardButtonType.KeyboardButtonType
instance GHC.Show.Show API.KeyboardButtonType.KeyboardButtonType
instance Data.Aeson.Types.ToJSON.ToJSON API.KeyboardButtonType.KeyboardButtonType
instance Data.Aeson.Types.FromJSON.FromJSON API.KeyboardButtonType.KeyboardButtonType

module API.Invoice

-- | Product invoice
--   
--   <b>currency</b> ISO 4217 currency code
--   
--   <b>price_parts</b> A list of objects used to calculate the total price
--   of the product
--   
--   <b>max_tip_amount</b> The maximum allowed amount of tip in the
--   smallest units of the currency
--   
--   <b>suggested_tip_amounts</b> Suggested amounts of tip in the smallest
--   units of the currency
--   
--   <b>is_test</b> True, if the payment is a test payment
--   
--   <b>need_name</b> True, if the user's name is needed for payment
--   
--   <b>need_phone_number</b> True, if the user's phone number is needed
--   for payment
--   
--   <b>need_email_address</b> True, if the user's email address is needed
--   for payment
--   
--   <b>need_shipping_address</b> True, if the user's shipping address is
--   needed for payment
--   
--   <b>send_phone_number_to_provider</b> True, if the user's phone number
--   will be sent to the provider
--   
--   <b>send_email_address_to_provider</b> True, if the user's email
--   address will be sent to the provider
--   
--   <b>is_flexible</b> True, if the total price depends on the shipping
--   method
data Invoice
Invoice :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe [Int] -> Maybe Int -> Maybe [LabeledPricePart] -> Maybe String -> Invoice
[is_flexible] :: Invoice -> Maybe Bool
[send_email_address_to_provider] :: Invoice -> Maybe Bool
[send_phone_number_to_provider] :: Invoice -> Maybe Bool
[need_shipping_address] :: Invoice -> Maybe Bool
[need_email_address] :: Invoice -> Maybe Bool
[need_phone_number] :: Invoice -> Maybe Bool
[need_name] :: Invoice -> Maybe Bool
[is_test] :: Invoice -> Maybe Bool
[suggested_tip_amounts] :: Invoice -> Maybe [Int]
[max_tip_amount] :: Invoice -> Maybe Int
[price_parts] :: Invoice -> Maybe [LabeledPricePart]
[currency] :: Invoice -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Invoice.Invoice
instance GHC.Show.Show API.Invoice.Invoice
instance Data.Aeson.Types.ToJSON.ToJSON API.Invoice.Invoice
instance Data.Aeson.Types.FromJSON.FromJSON API.Invoice.Invoice

module API.LabeledPricePart

-- | Portion of the price of a product (e.g., "delivery cost", "tax
--   amount")
--   
--   <b>label</b> Label for this portion of the product price
--   
--   <b>amount</b> Currency amount in the smallest units of the currency
data LabeledPricePart
LabeledPricePart :: Maybe Int -> Maybe String -> LabeledPricePart
[amount] :: LabeledPricePart -> Maybe Int
[label] :: LabeledPricePart -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.LabeledPricePart.LabeledPricePart
instance GHC.Show.Show API.LabeledPricePart.LabeledPricePart
instance Data.Aeson.Types.ToJSON.ToJSON API.LabeledPricePart.LabeledPricePart
instance Data.Aeson.Types.FromJSON.FromJSON API.LabeledPricePart.LabeledPricePart

module API.Functions.EditCustomLanguagePackInfo

-- | Edits information about a custom local language pack in the current
--   localization target. Can be called before authorization
--   
--   <b>info</b> New information about the custom local language pack
data EditCustomLanguagePackInfo
EditCustomLanguagePackInfo :: Maybe LanguagePackInfo -> EditCustomLanguagePackInfo
[info] :: EditCustomLanguagePackInfo -> Maybe LanguagePackInfo
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditCustomLanguagePackInfo.EditCustomLanguagePackInfo
instance GHC.Show.Show API.Functions.EditCustomLanguagePackInfo.EditCustomLanguagePackInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditCustomLanguagePackInfo.EditCustomLanguagePackInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditCustomLanguagePackInfo.EditCustomLanguagePackInfo

module API.LanguagePackInfo

-- | Contains information about a language pack
--   
--   <b>id</b> Unique language pack identifier
--   
--   <b>base_language_pack_id</b> Identifier of a base language pack; may
--   be empty. If a string is missed in the language pack, then it must be
--   fetched from base language pack. Unsupported in custom language packs
--   
--   <b>name</b> Language name
--   
--   <b>native_name</b> Name of the language in that language
--   
--   <b>plural_code</b> A language code to be used to apply plural forms.
--   See
--   <a>https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html</a>
--   for more info
--   
--   <b>is_official</b> True, if the language pack is official
--   
--   <b>is_rtl</b> True, if the language pack strings are RTL
--   
--   <b>is_beta</b> True, if the language pack is a beta language pack
--   
--   <b>is_installed</b> True, if the language pack is installed by the
--   current user
--   
--   <b>total_string_count</b> Total number of non-deleted strings from the
--   language pack
--   
--   <b>translated_string_count</b> Total number of translated strings from
--   the language pack
--   
--   <b>local_string_count</b> Total number of non-deleted strings from the
--   language pack available locally
--   
--   <b>translation_url</b> Link to language translation interface; empty
--   for custom local language packs
data LanguagePackInfo
LanguagePackInfo :: Maybe String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> LanguagePackInfo
[translation_url] :: LanguagePackInfo -> Maybe String
[local_string_count] :: LanguagePackInfo -> Maybe Int
[translated_string_count] :: LanguagePackInfo -> Maybe Int
[total_string_count] :: LanguagePackInfo -> Maybe Int
[is_installed] :: LanguagePackInfo -> Maybe Bool
[is_beta] :: LanguagePackInfo -> Maybe Bool
[is_rtl] :: LanguagePackInfo -> Maybe Bool
[is_official] :: LanguagePackInfo -> Maybe Bool
[plural_code] :: LanguagePackInfo -> Maybe String
[native_name] :: LanguagePackInfo -> Maybe String
[name] :: LanguagePackInfo -> Maybe String
[base_language_pack_id] :: LanguagePackInfo -> Maybe String
[_id] :: LanguagePackInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.LanguagePackInfo.LanguagePackInfo
instance GHC.Show.Show API.LanguagePackInfo.LanguagePackInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.LanguagePackInfo.LanguagePackInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.LanguagePackInfo.LanguagePackInfo

module API.Functions.SetCustomLanguagePackString

-- | Adds, edits or deletes a string in a custom local language pack. Can
--   be called before authorization
--   
--   <b>language_pack_id</b> Identifier of a previously added custom local
--   language pack in the current localization target
--   
--   <b>new_string</b> New language pack string
data SetCustomLanguagePackString
SetCustomLanguagePackString :: Maybe LanguagePackString -> Maybe String -> SetCustomLanguagePackString
[new_string] :: SetCustomLanguagePackString -> Maybe LanguagePackString
[language_pack_id] :: SetCustomLanguagePackString -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetCustomLanguagePackString.SetCustomLanguagePackString
instance GHC.Show.Show API.Functions.SetCustomLanguagePackString.SetCustomLanguagePackString
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetCustomLanguagePackString.SetCustomLanguagePackString
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetCustomLanguagePackString.SetCustomLanguagePackString

module API.Functions.SetCustomLanguagePack

-- | Adds or changes a custom local language pack to the current
--   localization target
--   
--   <b>info</b> Information about the language pack. Language pack ID must
--   start with <tt>X</tt>, consist only of English letters, digits and
--   hyphens, and must not exceed 64 characters. Can be called before
--   authorization
--   
--   <b>strings</b> Strings of the new language pack
data SetCustomLanguagePack
SetCustomLanguagePack :: Maybe [LanguagePackString] -> Maybe LanguagePackInfo -> SetCustomLanguagePack
[strings] :: SetCustomLanguagePack -> Maybe [LanguagePackString]
[info] :: SetCustomLanguagePack -> Maybe LanguagePackInfo
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetCustomLanguagePack.SetCustomLanguagePack
instance GHC.Show.Show API.Functions.SetCustomLanguagePack.SetCustomLanguagePack
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetCustomLanguagePack.SetCustomLanguagePack
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetCustomLanguagePack.SetCustomLanguagePack

module API.LanguagePackString

-- | Represents one language pack string
--   
--   <b>key</b> String key
--   
--   <b>value</b> String value; pass null if the string needs to be taken
--   from the built-in English language pack
data LanguagePackString
LanguagePackString :: Maybe LanguagePackStringValue -> Maybe String -> LanguagePackString
[value] :: LanguagePackString -> Maybe LanguagePackStringValue
[key] :: LanguagePackString -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.LanguagePackString.LanguagePackString
instance GHC.Show.Show API.LanguagePackString.LanguagePackString
instance Data.Aeson.Types.ToJSON.ToJSON API.LanguagePackString.LanguagePackString
instance Data.Aeson.Types.FromJSON.FromJSON API.LanguagePackString.LanguagePackString

module API.LanguagePackStringValue

-- | Represents the value of a string in a language pack
data LanguagePackStringValue

-- | An ordinary language pack string
--   
--   <b>value</b> String value
LanguagePackStringValueOrdinary :: Maybe String -> LanguagePackStringValue
[value] :: LanguagePackStringValue -> Maybe String

-- | A language pack string which has different forms based on the number
--   of some object it mentions. See
--   <a>https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html</a>
--   for more info
--   
--   <b>zero_value</b> Value for zero objects
--   
--   <b>one_value</b> Value for one object
--   
--   <b>two_value</b> Value for two objects
--   
--   <b>few_value</b> Value for few objects
--   
--   <b>many_value</b> Value for many objects
--   
--   <b>other_value</b> Default value
LanguagePackStringValuePluralized :: Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> LanguagePackStringValue
[other_value] :: LanguagePackStringValue -> Maybe String
[many_value] :: LanguagePackStringValue -> Maybe String
[few_value] :: LanguagePackStringValue -> Maybe String
[two_value] :: LanguagePackStringValue -> Maybe String
[one_value] :: LanguagePackStringValue -> Maybe String
[zero_value] :: LanguagePackStringValue -> Maybe String

-- | A deleted language pack string, the value must be taken from the
--   built-in English language pack
LanguagePackStringValueDeleted :: LanguagePackStringValue
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.LanguagePackStringValue.LanguagePackStringValue
instance GHC.Show.Show API.LanguagePackStringValue.LanguagePackStringValue
instance Data.Aeson.Types.ToJSON.ToJSON API.LanguagePackStringValue.LanguagePackStringValue
instance Data.Aeson.Types.FromJSON.FromJSON API.LanguagePackStringValue.LanguagePackStringValue

module API.LanguagePackStrings

-- | Contains a list of language pack strings
--   
--   <b>strings</b> A list of language pack strings
data LanguagePackStrings
LanguagePackStrings :: Maybe [LanguagePackString] -> LanguagePackStrings
[strings] :: LanguagePackStrings -> Maybe [LanguagePackString]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.LanguagePackStrings.LanguagePackStrings
instance GHC.Show.Show API.LanguagePackStrings.LanguagePackStrings
instance Data.Aeson.Types.ToJSON.ToJSON API.LanguagePackStrings.LanguagePackStrings
instance Data.Aeson.Types.FromJSON.FromJSON API.LanguagePackStrings.LanguagePackStrings

module API.LocalFile

-- | Represents a local file
--   
--   <b>path</b> Local path to the locally available file part; may be
--   empty
--   
--   <b>can_be_downloaded</b> True, if it is possible to try to download or
--   generate the file
--   
--   <b>can_be_deleted</b> True, if the file can be deleted
--   
--   <b>is_downloading_active</b> True, if the file is currently being
--   downloaded (or a local copy is being generated by some other means)
--   
--   <b>is_downloading_completed</b> True, if the local copy is fully
--   available
--   
--   <b>download_offset</b> Download will be started from this offset.
--   downloaded_prefix_size is calculated from this offset
--   
--   <b>downloaded_prefix_size</b> If is_downloading_completed is false,
--   then only some prefix of the file starting from download_offset is
--   ready to be read. downloaded_prefix_size is the size of that prefix in
--   bytes
--   
--   <b>downloaded_size</b> Total downloaded file size, in bytes. Can be
--   used only for calculating download progress. The actual file size may
--   be bigger, and some parts of it may contain garbage
data LocalFile
LocalFile :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe String -> LocalFile
[downloaded_size] :: LocalFile -> Maybe Int
[downloaded_prefix_size] :: LocalFile -> Maybe Int
[download_offset] :: LocalFile -> Maybe Int
[is_downloading_completed] :: LocalFile -> Maybe Bool
[is_downloading_active] :: LocalFile -> Maybe Bool
[can_be_deleted] :: LocalFile -> Maybe Bool
[can_be_downloaded] :: LocalFile -> Maybe Bool
[path] :: LocalFile -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.LocalFile.LocalFile
instance GHC.Show.Show API.LocalFile.LocalFile
instance Data.Aeson.Types.ToJSON.ToJSON API.LocalFile.LocalFile
instance Data.Aeson.Types.FromJSON.FromJSON API.LocalFile.LocalFile

module API.LocalizationTargetInfo

-- | Contains information about the current localization target
--   
--   <b>language_packs</b> List of available language packs for this
--   application
data LocalizationTargetInfo
LocalizationTargetInfo :: Maybe [LanguagePackInfo] -> LocalizationTargetInfo
[language_packs] :: LocalizationTargetInfo -> Maybe [LanguagePackInfo]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.LocalizationTargetInfo.LocalizationTargetInfo
instance GHC.Show.Show API.LocalizationTargetInfo.LocalizationTargetInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.LocalizationTargetInfo.LocalizationTargetInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.LocalizationTargetInfo.LocalizationTargetInfo

module API.Functions.SetLocation

-- | Changes the location of the current user. Needs to be called if
--   GetOption("is_location_visible") is true and location changes for more
--   than 1 kilometer
--   
--   <b>location</b> The new location of the user
data SetLocation
SetLocation :: Maybe Location -> SetLocation
[location] :: SetLocation -> Maybe Location
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetLocation.SetLocation
instance GHC.Show.Show API.Functions.SetLocation.SetLocation
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetLocation.SetLocation
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetLocation.SetLocation

module API.Functions.SearchChatsNearby

-- | Returns a list of users and location-based supergroups nearby. The
--   list of users nearby will be updated for 60 seconds after the request
--   by the updates updateUsersNearby. The request must be sent again every
--   25 seconds with adjusted location to not miss new chats
--   
--   <b>location</b> Current user location
data SearchChatsNearby
SearchChatsNearby :: Maybe Location -> SearchChatsNearby
[location] :: SearchChatsNearby -> Maybe Location
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchChatsNearby.SearchChatsNearby
instance GHC.Show.Show API.Functions.SearchChatsNearby.SearchChatsNearby
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchChatsNearby.SearchChatsNearby
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchChatsNearby.SearchChatsNearby

module API.Functions.GetMapThumbnailFile

-- | Returns information about a file with a map thumbnail in PNG format.
--   Only map thumbnail files with size less than 1MB can be downloaded
--   
--   <b>location</b> Location of the map center
--   
--   <b>zoom</b> Map zoom level; 13-20
--   
--   <b>width</b> Map width in pixels before applying scale; 16-1024
--   
--   <b>height</b> Map height in pixels before applying scale; 16-1024
--   
--   <b>scale</b> Map scale; 1-3
--   
--   <b>chat_id</b> Identifier of a chat, in which the thumbnail will be
--   shown. Use 0 if unknown
data GetMapThumbnailFile
GetMapThumbnailFile :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Location -> GetMapThumbnailFile
[chat_id] :: GetMapThumbnailFile -> Maybe Int
[scale] :: GetMapThumbnailFile -> Maybe Int
[height] :: GetMapThumbnailFile -> Maybe Int
[width] :: GetMapThumbnailFile -> Maybe Int
[zoom] :: GetMapThumbnailFile -> Maybe Int
[location] :: GetMapThumbnailFile -> Maybe Location
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetMapThumbnailFile.GetMapThumbnailFile
instance GHC.Show.Show API.Functions.GetMapThumbnailFile.GetMapThumbnailFile
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetMapThumbnailFile.GetMapThumbnailFile
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetMapThumbnailFile.GetMapThumbnailFile

module API.Functions.GetInlineQueryResults

-- | Sends an inline query to a bot and returns its results. Returns an
--   error with code 502 if the bot fails to answer the query before the
--   query timeout expires
--   
--   <b>bot_user_id</b> The identifier of the target bot
--   
--   <b>chat_id</b> Identifier of the chat where the query was sent
--   
--   <b>user_location</b> Location of the user; pass null if unknown or the
--   bot doesn't need user's location
--   
--   <b>query</b> Text of the query
--   
--   <b>offset</b> Offset of the first entry to return
data GetInlineQueryResults
GetInlineQueryResults :: Maybe String -> Maybe String -> Maybe Location -> Maybe Int -> Maybe Int -> GetInlineQueryResults
[offset] :: GetInlineQueryResults -> Maybe String
[query] :: GetInlineQueryResults -> Maybe String
[user_location] :: GetInlineQueryResults -> Maybe Location
[chat_id] :: GetInlineQueryResults -> Maybe Int
[bot_user_id] :: GetInlineQueryResults -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetInlineQueryResults.GetInlineQueryResults
instance GHC.Show.Show API.Functions.GetInlineQueryResults.GetInlineQueryResults
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetInlineQueryResults.GetInlineQueryResults
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetInlineQueryResults.GetInlineQueryResults

module API.ChatLocation

-- | Represents a location to which a chat is connected
--   
--   <b>location</b> The location
--   
--   <b>address</b> Location address; 1-64 characters, as defined by the
--   chat owner
data ChatLocation
ChatLocation :: Maybe String -> Maybe Location -> ChatLocation
[address] :: ChatLocation -> Maybe String
[location] :: ChatLocation -> Maybe Location
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatLocation.ChatLocation
instance GHC.Show.Show API.ChatLocation.ChatLocation
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatLocation.ChatLocation
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatLocation.ChatLocation

module API.Location

-- | Describes a location on planet Earth
--   
--   <b>latitude</b> Latitude of the location in degrees; as defined by the
--   sender
--   
--   <b>longitude</b> Longitude of the location, in degrees; as defined by
--   the sender
--   
--   <b>horizontal_accuracy</b> The estimated horizontal accuracy of the
--   location, in meters; as defined by the sender. 0 if unknown
data Location
Location :: Maybe Float -> Maybe Float -> Maybe Float -> Location
[horizontal_accuracy] :: Location -> Maybe Float
[longitude] :: Location -> Maybe Float
[latitude] :: Location -> Maybe Float
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Location.Location
instance GHC.Show.Show API.Location.Location
instance Data.Aeson.Types.ToJSON.ToJSON API.Location.Location
instance Data.Aeson.Types.FromJSON.FromJSON API.Location.Location

module API.Functions.SetLogStream

-- | Sets new log stream for internal logging of TDLib. Can be called
--   synchronously
--   
--   <b>log_stream</b> New log stream
data SetLogStream
SetLogStream :: Maybe LogStream -> SetLogStream
[log_stream] :: SetLogStream -> Maybe LogStream
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetLogStream.SetLogStream
instance GHC.Show.Show API.Functions.SetLogStream.SetLogStream
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetLogStream.SetLogStream
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetLogStream.SetLogStream

module API.LogStream

-- | Describes a stream to which TDLib internal log is written
data LogStream

-- | The log is written to stderr or an OS specific log
LogStreamDefault :: LogStream

-- | The log is written to a file
--   
--   <b>path</b> Path to the file to where the internal TDLib log will be
--   written
--   
--   <b>max_file_size</b> The maximum size of the file to where the
--   internal TDLib log is written before the file will be auto-rotated, in
--   bytes
--   
--   <b>redirect_stderr</b> Pass true to additionally redirect stderr to
--   the log file. Ignored on Windows
LogStreamFile :: Maybe Bool -> Maybe Int -> Maybe String -> LogStream
[redirect_stderr] :: LogStream -> Maybe Bool
[max_file_size] :: LogStream -> Maybe Int
[path] :: LogStream -> Maybe String

-- | The log is written nowhere
LogStreamEmpty :: LogStream
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.LogStream.LogStream
instance GHC.Show.Show API.LogStream.LogStream
instance Data.Aeson.Types.ToJSON.ToJSON API.LogStream.LogStream
instance Data.Aeson.Types.FromJSON.FromJSON API.LogStream.LogStream

module API.LogTags

-- | Contains a list of available TDLib internal log tags
--   
--   <b>tags</b> List of log tags
data LogTags
LogTags :: Maybe [String] -> LogTags
[tags] :: LogTags -> Maybe [String]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.LogTags.LogTags
instance GHC.Show.Show API.LogTags.LogTags
instance Data.Aeson.Types.ToJSON.ToJSON API.LogTags.LogTags
instance Data.Aeson.Types.FromJSON.FromJSON API.LogTags.LogTags

module API.LogVerbosityLevel

-- | Contains a TDLib internal log verbosity level
--   
--   <b>verbosity_level</b> Log verbosity level
data LogVerbosityLevel
LogVerbosityLevel :: Maybe Int -> LogVerbosityLevel
[verbosity_level] :: LogVerbosityLevel -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.LogVerbosityLevel.LogVerbosityLevel
instance GHC.Show.Show API.LogVerbosityLevel.LogVerbosityLevel
instance Data.Aeson.Types.ToJSON.ToJSON API.LogVerbosityLevel.LogVerbosityLevel
instance Data.Aeson.Types.FromJSON.FromJSON API.LogVerbosityLevel.LogVerbosityLevel

module API.LoginUrlInfo

-- | Contains information about an inline button of type
--   inlineKeyboardButtonTypeLoginUrl
data LoginUrlInfo

-- | An HTTP url needs to be open
--   
--   <b>url</b> The URL to open
--   
--   <b>skip_confirm</b> True, if there is no need to show an ordinary open
--   URL confirm
LoginUrlInfoOpen :: Maybe Bool -> Maybe String -> LoginUrlInfo
[skip_confirm] :: LoginUrlInfo -> Maybe Bool
[url] :: LoginUrlInfo -> Maybe String

-- | An authorization confirmation dialog needs to be shown to the user
--   
--   <b>url</b> An HTTP URL to be opened
--   
--   <b>domain</b> A domain of the URL
--   
--   <b>bot_user_id</b> User identifier of a bot linked with the website
--   
--   <b>request_write_access</b> True, if the user needs to be requested to
--   give the permission to the bot to send them messages
LoginUrlInfoRequestConfirmation :: Maybe Bool -> Maybe Int -> Maybe String -> Maybe String -> LoginUrlInfo
[request_write_access] :: LoginUrlInfo -> Maybe Bool
[bot_user_id] :: LoginUrlInfo -> Maybe Int
[domain] :: LoginUrlInfo -> Maybe String
[url] :: LoginUrlInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.LoginUrlInfo.LoginUrlInfo
instance GHC.Show.Show API.LoginUrlInfo.LoginUrlInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.LoginUrlInfo.LoginUrlInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.LoginUrlInfo.LoginUrlInfo

module API.MaskPoint

-- | Part of the face, relative to which a mask is placed
data MaskPoint

-- | The mask is placed relatively to the forehead
MaskPointForehead :: MaskPoint

-- | The mask is placed relatively to the eyes
MaskPointEyes :: MaskPoint

-- | The mask is placed relatively to the mouth
MaskPointMouth :: MaskPoint

-- | The mask is placed relatively to the chin
MaskPointChin :: MaskPoint
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MaskPoint.MaskPoint
instance GHC.Show.Show API.MaskPoint.MaskPoint
instance Data.Aeson.Types.ToJSON.ToJSON API.MaskPoint.MaskPoint
instance Data.Aeson.Types.FromJSON.FromJSON API.MaskPoint.MaskPoint

module API.InputSticker

-- | Describes a sticker that needs to be added to a sticker set
data InputSticker

-- | A static sticker in PNG format, which will be converted to WEBP
--   server-side
--   
--   <b>sticker</b> PNG image with the sticker; must be up to 512 KB in
--   size and fit in a 512x512 square
--   
--   <b>emojis</b> Emojis corresponding to the sticker
--   
--   <b>mask_position</b> For masks, position where the mask is placed;
--   pass null if unspecified
InputStickerStatic :: Maybe MaskPosition -> Maybe String -> Maybe InputFile -> InputSticker
[mask_position] :: InputSticker -> Maybe MaskPosition
[emojis] :: InputSticker -> Maybe String
[sticker] :: InputSticker -> Maybe InputFile

-- | An animated sticker in TGS format
--   
--   <b>sticker</b> File with the animated sticker. Only local or uploaded
--   within a week files are supported. See
--   <a>https://core.telegram.org/animated_stickers#technical-requirements</a>
--   for technical requirements
--   
--   <b>emojis</b> Emojis corresponding to the sticker
InputStickerAnimated :: Maybe String -> Maybe InputFile -> InputSticker
[emojis] :: InputSticker -> Maybe String
[sticker] :: InputSticker -> Maybe InputFile
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InputSticker.InputSticker
instance GHC.Show.Show API.InputSticker.InputSticker
instance Data.Aeson.Types.ToJSON.ToJSON API.InputSticker.InputSticker
instance Data.Aeson.Types.FromJSON.FromJSON API.InputSticker.InputSticker

module API.MaskPosition

-- | Position on a photo where a mask is placed
--   
--   <b>point</b> Part of the face, relative to which the mask is placed
--   
--   <b>x_shift</b> Shift by X-axis measured in widths of the mask scaled
--   to the face size, from left to right. (For example, -1.0 will place
--   the mask just to the left of the default mask position)
--   
--   <b>y_shift</b> Shift by Y-axis measured in heights of the mask scaled
--   to the face size, from top to bottom. (For example, 1.0 will place the
--   mask just below the default mask position)
--   
--   <b>scale</b> Mask scaling coefficient. (For example, 2.0 means a
--   doubled size)
data MaskPosition
MaskPosition :: Maybe Float -> Maybe Float -> Maybe Float -> Maybe MaskPoint -> MaskPosition
[scale] :: MaskPosition -> Maybe Float
[y_shift] :: MaskPosition -> Maybe Float
[x_shift] :: MaskPosition -> Maybe Float
[point] :: MaskPosition -> Maybe MaskPoint
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MaskPosition.MaskPosition
instance GHC.Show.Show API.MaskPosition.MaskPosition
instance Data.Aeson.Types.ToJSON.ToJSON API.MaskPosition.MaskPosition
instance Data.Aeson.Types.FromJSON.FromJSON API.MaskPosition.MaskPosition

module API.FoundMessages

-- | Contains a list of messages found by a search
--   
--   <b>total_count</b> Approximate total count of messages found; -1 if
--   unknown
--   
--   <b>messages</b> List of messages
--   
--   <b>next_offset</b> The offset for the next request. If empty, there
--   are no more results
data FoundMessages
FoundMessages :: Maybe String -> Maybe [Message] -> Maybe Int -> FoundMessages
[next_offset] :: FoundMessages -> Maybe String
[messages] :: FoundMessages -> Maybe [Message]
[total_count] :: FoundMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.FoundMessages.FoundMessages
instance GHC.Show.Show API.FoundMessages.FoundMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.FoundMessages.FoundMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.FoundMessages.FoundMessages

module API.MessageCopyOptions

-- | Options to be used when a message content is copied without reference
--   to the original sender. Service messages and messageInvoice can't be
--   copied
--   
--   <b>send_copy</b> True, if content of the message needs to be copied
--   without reference to the original sender. Always true if the message
--   is forwarded to a secret chat or is local
--   
--   <b>replace_caption</b> True, if media caption of the message copy
--   needs to be replaced. Ignored if send_copy is false
--   
--   <b>new_caption</b> New message caption; pass null to copy message
--   without caption. Ignored if replace_caption is false
data MessageCopyOptions
MessageCopyOptions :: Maybe FormattedText -> Maybe Bool -> Maybe Bool -> MessageCopyOptions
[new_caption] :: MessageCopyOptions -> Maybe FormattedText
[replace_caption] :: MessageCopyOptions -> Maybe Bool
[send_copy] :: MessageCopyOptions -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageCopyOptions.MessageCopyOptions
instance GHC.Show.Show API.MessageCopyOptions.MessageCopyOptions
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageCopyOptions.MessageCopyOptions
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageCopyOptions.MessageCopyOptions

module API.MessageFileType

-- | Contains information about a file with messages exported from another
--   app
data MessageFileType

-- | The messages was exported from a private chat
--   
--   <b>name</b> Name of the other party; may be empty if unrecognized
MessageFileTypePrivate :: Maybe String -> MessageFileType
[name] :: MessageFileType -> Maybe String

-- | The messages was exported from a group chat
--   
--   <b>title</b> Title of the group chat; may be empty if unrecognized
MessageFileTypeGroup :: Maybe String -> MessageFileType
[title] :: MessageFileType -> Maybe String

-- | The messages was exported from a chat of unknown type
MessageFileTypeUnknown :: MessageFileType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageFileType.MessageFileType
instance GHC.Show.Show API.MessageFileType.MessageFileType
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageFileType.MessageFileType
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageFileType.MessageFileType

module API.MessageForwardInfo

-- | Contains information about a forwarded message
--   
--   <b>origin</b> Origin of a forwarded message
--   
--   <b>date</b> Point in time (Unix timestamp) when the message was
--   originally sent
--   
--   <b>public_service_announcement_type</b> The type of a public service
--   announcement for the forwarded message
--   
--   <b>from_chat_id</b> For messages forwarded to the chat with the
--   current user (Saved Messages), to the Replies bot chat, or to the
--   channel's discussion group, the identifier of the chat from which the
--   message was forwarded last time; 0 if unknown
--   
--   <b>from_message_id</b> For messages forwarded to the chat with the
--   current user (Saved Messages), to the Replies bot chat, or to the
--   channel's discussion group, the identifier of the original message
--   from which the new message was forwarded last time; 0 if unknown
data MessageForwardInfo
MessageForwardInfo :: Maybe Int -> Maybe Int -> Maybe String -> Maybe Int -> Maybe MessageForwardOrigin -> MessageForwardInfo
[from_message_id] :: MessageForwardInfo -> Maybe Int
[from_chat_id] :: MessageForwardInfo -> Maybe Int
[public_service_announcement_type] :: MessageForwardInfo -> Maybe String
[date] :: MessageForwardInfo -> Maybe Int
[origin] :: MessageForwardInfo -> Maybe MessageForwardOrigin
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageForwardInfo.MessageForwardInfo
instance GHC.Show.Show API.MessageForwardInfo.MessageForwardInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageForwardInfo.MessageForwardInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageForwardInfo.MessageForwardInfo

module API.MessageForwardOrigin

-- | Contains information about the origin of a forwarded message
data MessageForwardOrigin

-- | The message was originally sent by a known user
--   
--   <b>sender_user_id</b> Identifier of the user that originally sent the
--   message
MessageForwardOriginUser :: Maybe Int -> MessageForwardOrigin
[sender_user_id] :: MessageForwardOrigin -> Maybe Int

-- | The message was originally sent by an anonymous chat administrator on
--   behalf of the chat
--   
--   <b>sender_chat_id</b> Identifier of the chat that originally sent the
--   message
--   
--   <b>author_signature</b> Original message author signature
MessageForwardOriginChat :: Maybe String -> Maybe Int -> MessageForwardOrigin
[author_signature] :: MessageForwardOrigin -> Maybe String
[sender_chat_id] :: MessageForwardOrigin -> Maybe Int

-- | The message was originally sent by a user, which is hidden by their
--   privacy settings
--   
--   <b>sender_name</b> Name of the sender
MessageForwardOriginHiddenUser :: Maybe String -> MessageForwardOrigin
[sender_name] :: MessageForwardOrigin -> Maybe String

-- | The message was originally a post in a channel
--   
--   <b>chat_id</b> Identifier of the chat from which the message was
--   originally forwarded
--   
--   <b>message_id</b> Message identifier of the original message
--   
--   <b>author_signature</b> Original post author signature
MessageForwardOriginChannel :: Maybe String -> Maybe Int -> Maybe Int -> MessageForwardOrigin
[author_signature] :: MessageForwardOrigin -> Maybe String
[message_id] :: MessageForwardOrigin -> Maybe Int
[chat_id] :: MessageForwardOrigin -> Maybe Int

-- | The message was imported from an exported message history
--   
--   <b>sender_name</b> Name of the sender
MessageForwardOriginMessageImport :: Maybe String -> MessageForwardOrigin
[sender_name] :: MessageForwardOrigin -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageForwardOrigin.MessageForwardOrigin
instance GHC.Show.Show API.MessageForwardOrigin.MessageForwardOrigin
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageForwardOrigin.MessageForwardOrigin
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageForwardOrigin.MessageForwardOrigin

module API.MessageLink

-- | Contains an HTTPS link to a message in a supergroup or channel
--   
--   <b>link</b> Message link
--   
--   <b>is_public</b> True, if the link will work for non-members of the
--   chat
data MessageLink
MessageLink :: Maybe Bool -> Maybe String -> MessageLink
[is_public] :: MessageLink -> Maybe Bool
[link] :: MessageLink -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageLink.MessageLink
instance GHC.Show.Show API.MessageLink.MessageLink
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageLink.MessageLink
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageLink.MessageLink

module API.MessageLinkInfo

-- | Contains information about a link to a message in a chat
--   
--   <b>is_public</b> True, if the link is a public link for a message in a
--   chat
--   
--   <b>chat_id</b> If found, identifier of the chat to which the message
--   belongs, 0 otherwise
--   
--   <b>message</b> If found, the linked message; may be null
--   
--   <b>media_timestamp</b> Timestamp from which the video<i>audio</i>video
--   note/voice note playing must start, in seconds; 0 if not specified.
--   The media can be in the message content or in its web page preview
--   
--   <b>for_album</b> True, if the whole media album to which the message
--   belongs is linked
--   
--   <b>for_comment</b> True, if the message is linked as a channel post
--   comment or from a message thread
data MessageLinkInfo
MessageLinkInfo :: Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe Message -> Maybe Int -> Maybe Bool -> MessageLinkInfo
[for_comment] :: MessageLinkInfo -> Maybe Bool
[for_album] :: MessageLinkInfo -> Maybe Bool
[media_timestamp] :: MessageLinkInfo -> Maybe Int
[message] :: MessageLinkInfo -> Maybe Message
[chat_id] :: MessageLinkInfo -> Maybe Int
[is_public] :: MessageLinkInfo -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageLinkInfo.MessageLinkInfo
instance GHC.Show.Show API.MessageLinkInfo.MessageLinkInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageLinkInfo.MessageLinkInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageLinkInfo.MessageLinkInfo

module API.MessageInteractionInfo

-- | Contains information about interactions with a message
--   
--   <b>view_count</b> Number of times the message was viewed
--   
--   <b>forward_count</b> Number of times the message was forwarded
--   
--   <b>reply_info</b> Contains information about direct or indirect
--   replies to the message; may be null. Currently, available only in
--   channels with a discussion supergroup and discussion supergroups for
--   messages, which are not replies itself
data MessageInteractionInfo
MessageInteractionInfo :: Maybe MessageReplyInfo -> Maybe Int -> Maybe Int -> MessageInteractionInfo
[reply_info] :: MessageInteractionInfo -> Maybe MessageReplyInfo
[forward_count] :: MessageInteractionInfo -> Maybe Int
[view_count] :: MessageInteractionInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageInteractionInfo.MessageInteractionInfo
instance GHC.Show.Show API.MessageInteractionInfo.MessageInteractionInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageInteractionInfo.MessageInteractionInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageInteractionInfo.MessageInteractionInfo

module API.Functions.EditMessageSchedulingState

-- | Edits the time when a scheduled message will be sent. Scheduling state
--   of all messages in the same album or forwarded together with the
--   message will be also changed
--   
--   <b>chat_id</b> The chat the message belongs to
--   
--   <b>message_id</b> Identifier of the message
--   
--   <b>scheduling_state</b> The new message scheduling state; pass null to
--   send the message immediately
data EditMessageSchedulingState
EditMessageSchedulingState :: Maybe MessageSchedulingState -> Maybe Int -> Maybe Int -> EditMessageSchedulingState
[scheduling_state] :: EditMessageSchedulingState -> Maybe MessageSchedulingState
[message_id] :: EditMessageSchedulingState -> Maybe Int
[chat_id] :: EditMessageSchedulingState -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditMessageSchedulingState.EditMessageSchedulingState
instance GHC.Show.Show API.Functions.EditMessageSchedulingState.EditMessageSchedulingState
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditMessageSchedulingState.EditMessageSchedulingState
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditMessageSchedulingState.EditMessageSchedulingState

module API.MessageSchedulingState

-- | Contains information about the time when a scheduled message will be
--   sent
data MessageSchedulingState

-- | The message will be sent at the specified date
--   
--   <b>send_date</b> Date the message will be sent. The date must be
--   within 367 days in the future
MessageSchedulingStateSendAtDate :: Maybe Int -> MessageSchedulingState
[send_date] :: MessageSchedulingState -> Maybe Int

-- | The message will be sent when the peer will be online. Applicable to
--   private chats only and when the exact online status of the peer is
--   known
MessageSchedulingStateSendWhenOnline :: MessageSchedulingState
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageSchedulingState.MessageSchedulingState
instance GHC.Show.Show API.MessageSchedulingState.MessageSchedulingState
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageSchedulingState.MessageSchedulingState
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageSchedulingState.MessageSchedulingState

module API.Functions.SendMessageAlbum

-- | Sends 2-10 messages grouped together into an album. Currently only
--   audio, document, photo and video messages can be grouped into an
--   album. Documents and audio files can be only grouped in an album with
--   messages of the same type. Returns sent messages
--   
--   <b>chat_id</b> Target chat
--   
--   <b>message_thread_id</b> If not 0, a message thread identifier in
--   which the messages will be sent
--   
--   <b>reply_to_message_id</b> Identifier of a message to reply to or 0
--   
--   <b>options</b> Options to be used to send the messages; pass null to
--   use default options
--   
--   <b>input_message_contents</b> Contents of messages to be sent. At most
--   10 messages can be added to an album
data SendMessageAlbum
SendMessageAlbum :: Maybe [InputMessageContent] -> Maybe MessageSendOptions -> Maybe Int -> Maybe Int -> Maybe Int -> SendMessageAlbum
[input_message_contents] :: SendMessageAlbum -> Maybe [InputMessageContent]
[options] :: SendMessageAlbum -> Maybe MessageSendOptions
[reply_to_message_id] :: SendMessageAlbum -> Maybe Int
[message_thread_id] :: SendMessageAlbum -> Maybe Int
[chat_id] :: SendMessageAlbum -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendMessageAlbum.SendMessageAlbum
instance GHC.Show.Show API.Functions.SendMessageAlbum.SendMessageAlbum
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendMessageAlbum.SendMessageAlbum
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendMessageAlbum.SendMessageAlbum

module API.Functions.SendInlineQueryResultMessage

-- | Sends the result of an inline query as a message. Returns the sent
--   message. Always clears a chat draft message
--   
--   <b>chat_id</b> Target chat
--   
--   <b>message_thread_id</b> If not 0, a message thread identifier in
--   which the message will be sent
--   
--   <b>reply_to_message_id</b> Identifier of a message to reply to or 0
--   
--   <b>options</b> Options to be used to send the message; pass null to
--   use default options
--   
--   <b>query_id</b> Identifier of the inline query
--   
--   <b>result_id</b> Identifier of the inline result
--   
--   <b>hide_via_bot</b> If true, there will be no mention of a bot, via
--   which the message is sent. Can be used only for bots
--   GetOption("animation_search_bot_username"),
--   GetOption("photo_search_bot_username") and
--   GetOption("venue_search_bot_username")
data SendInlineQueryResultMessage
SendInlineQueryResultMessage :: Maybe Bool -> Maybe String -> Maybe Int -> Maybe MessageSendOptions -> Maybe Int -> Maybe Int -> Maybe Int -> SendInlineQueryResultMessage
[hide_via_bot] :: SendInlineQueryResultMessage -> Maybe Bool
[result_id] :: SendInlineQueryResultMessage -> Maybe String
[query_id] :: SendInlineQueryResultMessage -> Maybe Int
[options] :: SendInlineQueryResultMessage -> Maybe MessageSendOptions
[reply_to_message_id] :: SendInlineQueryResultMessage -> Maybe Int
[message_thread_id] :: SendInlineQueryResultMessage -> Maybe Int
[chat_id] :: SendInlineQueryResultMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendInlineQueryResultMessage.SendInlineQueryResultMessage
instance GHC.Show.Show API.Functions.SendInlineQueryResultMessage.SendInlineQueryResultMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendInlineQueryResultMessage.SendInlineQueryResultMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendInlineQueryResultMessage.SendInlineQueryResultMessage

module API.Functions.ForwardMessages

-- | Forwards previously sent messages. Returns the forwarded messages in
--   the same order as the message identifiers passed in message_ids. If a
--   message can't be forwarded, null will be returned instead of the
--   message
--   
--   <b>chat_id</b> Identifier of the chat to which to forward messages
--   
--   <b>from_chat_id</b> Identifier of the chat from which to forward
--   messages
--   
--   <b>message_ids</b> Identifiers of the messages to forward. Message
--   identifiers must be in a strictly increasing order. At most 100
--   messages can be forwarded simultaneously
--   
--   <b>options</b> Options to be used to send the messages; pass null to
--   use default options
--   
--   <b>send_copy</b> If true, content of the messages will be copied
--   without reference to the original sender. Always true if the messages
--   are forwarded to a secret chat or are local
--   
--   <b>remove_caption</b> If true, media caption of message copies will be
--   removed. Ignored if send_copy is false
--   
--   <b>only_preview</b> If true, messages will not be forwarded and
--   instead fake messages will be returned
data ForwardMessages
ForwardMessages :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe MessageSendOptions -> Maybe [Int] -> Maybe Int -> Maybe Int -> ForwardMessages
[only_preview] :: ForwardMessages -> Maybe Bool
[remove_caption] :: ForwardMessages -> Maybe Bool
[send_copy] :: ForwardMessages -> Maybe Bool
[options] :: ForwardMessages -> Maybe MessageSendOptions
[message_ids] :: ForwardMessages -> Maybe [Int]
[from_chat_id] :: ForwardMessages -> Maybe Int
[chat_id] :: ForwardMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ForwardMessages.ForwardMessages
instance GHC.Show.Show API.Functions.ForwardMessages.ForwardMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ForwardMessages.ForwardMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ForwardMessages.ForwardMessages

module API.MessageSendOptions

-- | Options to be used when a message is sent
--   
--   <b>disable_notification</b> Pass true to disable notification for the
--   message
--   
--   <b>from_background</b> Pass true if the message is sent from the
--   background
--   
--   <b>scheduling_state</b> Message scheduling state; pass null to send
--   message immediately. Messages sent to a secret chat, live location
--   messages and self-destructing messages can't be scheduled
data MessageSendOptions
MessageSendOptions :: Maybe MessageSchedulingState -> Maybe Bool -> Maybe Bool -> MessageSendOptions
[scheduling_state] :: MessageSendOptions -> Maybe MessageSchedulingState
[from_background] :: MessageSendOptions -> Maybe Bool
[disable_notification] :: MessageSendOptions -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageSendOptions.MessageSendOptions
instance GHC.Show.Show API.MessageSendOptions.MessageSendOptions
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageSendOptions.MessageSendOptions
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageSendOptions.MessageSendOptions

module API.MessageReplyInfo

-- | Contains information about replies to a message
--   
--   <b>reply_count</b> Number of times the message was directly or
--   indirectly replied
--   
--   <b>recent_repliers</b> Recent repliers to the message; available in
--   channels with a discussion supergroup
--   
--   <b>last_read_inbox_message_id</b> Identifier of the last read incoming
--   reply to the message
--   
--   <b>last_read_outbox_message_id</b> Identifier of the last read
--   outgoing reply to the message
--   
--   <b>last_message_id</b> Identifier of the last reply to the message
data MessageReplyInfo
MessageReplyInfo :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe [MessageSender] -> Maybe Int -> MessageReplyInfo
[last_message_id] :: MessageReplyInfo -> Maybe Int
[last_read_outbox_message_id] :: MessageReplyInfo -> Maybe Int
[last_read_inbox_message_id] :: MessageReplyInfo -> Maybe Int
[recent_repliers] :: MessageReplyInfo -> Maybe [MessageSender]
[reply_count] :: MessageReplyInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageReplyInfo.MessageReplyInfo
instance GHC.Show.Show API.MessageReplyInfo.MessageReplyInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageReplyInfo.MessageReplyInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageReplyInfo.MessageReplyInfo

module API.GroupCallRecentSpeaker

-- | Describes a recently speaking participant in a group call
--   
--   <b>participant_id</b> Group call participant identifier
--   
--   <b>is_speaking</b> True, is the user has spoken recently
data GroupCallRecentSpeaker
GroupCallRecentSpeaker :: Maybe Bool -> Maybe MessageSender -> GroupCallRecentSpeaker
[is_speaking] :: GroupCallRecentSpeaker -> Maybe Bool
[participant_id] :: GroupCallRecentSpeaker -> Maybe MessageSender
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.GroupCallRecentSpeaker.GroupCallRecentSpeaker
instance GHC.Show.Show API.GroupCallRecentSpeaker.GroupCallRecentSpeaker
instance Data.Aeson.Types.ToJSON.ToJSON API.GroupCallRecentSpeaker.GroupCallRecentSpeaker
instance Data.Aeson.Types.FromJSON.FromJSON API.GroupCallRecentSpeaker.GroupCallRecentSpeaker

module API.GroupCallParticipant

-- | Represents a group call participant
--   
--   <b>participant_id</b> Identifier of the group call participant
--   
--   <b>audio_source_id</b> User's audio channel synchronization source
--   identifier
--   
--   <b>screen_sharing_audio_source_id</b> User's screen sharing audio
--   channel synchronization source identifier
--   
--   <b>video_info</b> Information about user's video channel; may be null
--   if there is no active video
--   
--   <b>screen_sharing_video_info</b> Information about user's screen
--   sharing video channel; may be null if there is no active screen
--   sharing video
--   
--   <b>bio</b> The participant user's bio or the participant chat's
--   description
--   
--   <b>is_current_user</b> True, if the participant is the current user
--   
--   <b>is_speaking</b> True, if the participant is speaking as set by
--   setGroupCallParticipantIsSpeaking
--   
--   <b>is_hand_raised</b> True, if the participant hand is raised
--   
--   <b>can_be_muted_for_all_users</b> True, if the current user can mute
--   the participant for all other group call participants
--   
--   <b>can_be_unmuted_for_all_users</b> True, if the current user can
--   allow the participant to unmute themselves or unmute the participant
--   (if the participant is the current user)
--   
--   <b>can_be_muted_for_current_user</b> True, if the current user can
--   mute the participant only for self
--   
--   <b>can_be_unmuted_for_current_user</b> True, if the current user can
--   unmute the participant for self
--   
--   <b>is_muted_for_all_users</b> True, if the participant is muted for
--   all users
--   
--   <b>is_muted_for_current_user</b> True, if the participant is muted for
--   the current user
--   
--   <b>can_unmute_self</b> True, if the participant is muted for all
--   users, but can unmute themselves
--   
--   <b>volume_level</b> Participant's volume level; 1-20000 in hundreds of
--   percents
--   
--   <b>order</b> User's order in the group call participant list. Orders
--   must be compared lexicographically. The bigger is order, the higher is
--   user in the list. If order is empty, the user must be removed from the
--   participant list
data GroupCallParticipant
GroupCallParticipant :: Maybe String -> Maybe Int -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe String -> Maybe GroupCallParticipantVideoInfo -> Maybe GroupCallParticipantVideoInfo -> Maybe Int -> Maybe Int -> Maybe MessageSender -> GroupCallParticipant
[order] :: GroupCallParticipant -> Maybe String
[volume_level] :: GroupCallParticipant -> Maybe Int
[can_unmute_self] :: GroupCallParticipant -> Maybe Bool
[is_muted_for_current_user] :: GroupCallParticipant -> Maybe Bool
[is_muted_for_all_users] :: GroupCallParticipant -> Maybe Bool
[can_be_unmuted_for_current_user] :: GroupCallParticipant -> Maybe Bool
[can_be_muted_for_current_user] :: GroupCallParticipant -> Maybe Bool
[can_be_unmuted_for_all_users] :: GroupCallParticipant -> Maybe Bool
[can_be_muted_for_all_users] :: GroupCallParticipant -> Maybe Bool
[is_hand_raised] :: GroupCallParticipant -> Maybe Bool
[is_speaking] :: GroupCallParticipant -> Maybe Bool
[is_current_user] :: GroupCallParticipant -> Maybe Bool
[bio] :: GroupCallParticipant -> Maybe String
[screen_sharing_video_info] :: GroupCallParticipant -> Maybe GroupCallParticipantVideoInfo
[video_info] :: GroupCallParticipant -> Maybe GroupCallParticipantVideoInfo
[screen_sharing_audio_source_id] :: GroupCallParticipant -> Maybe Int
[audio_source_id] :: GroupCallParticipant -> Maybe Int
[participant_id] :: GroupCallParticipant -> Maybe MessageSender
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.GroupCallParticipant.GroupCallParticipant
instance GHC.Show.Show API.GroupCallParticipant.GroupCallParticipant
instance Data.Aeson.Types.ToJSON.ToJSON API.GroupCallParticipant.GroupCallParticipant
instance Data.Aeson.Types.FromJSON.FromJSON API.GroupCallParticipant.GroupCallParticipant

module API.Functions.ToggleMessageSenderIsBlocked

-- | Changes the block state of a message sender. Currently, only users and
--   supergroup chats can be blocked
--   
--   <b>sender</b> Message Sender
--   
--   <b>is_blocked</b> New value of is_blocked
data ToggleMessageSenderIsBlocked
ToggleMessageSenderIsBlocked :: Maybe Bool -> Maybe MessageSender -> ToggleMessageSenderIsBlocked
[is_blocked] :: ToggleMessageSenderIsBlocked -> Maybe Bool
[sender] :: ToggleMessageSenderIsBlocked -> Maybe MessageSender
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleMessageSenderIsBlocked.ToggleMessageSenderIsBlocked
instance GHC.Show.Show API.Functions.ToggleMessageSenderIsBlocked.ToggleMessageSenderIsBlocked
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleMessageSenderIsBlocked.ToggleMessageSenderIsBlocked
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleMessageSenderIsBlocked.ToggleMessageSenderIsBlocked

module API.Functions.ToggleGroupCallParticipantIsMuted

-- | Toggles whether a participant of an active group call is muted,
--   unmuted, or allowed to unmute themselves
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>participant_id</b> Participant identifier
--   
--   <b>is_muted</b> Pass true if the user must be muted and false
--   otherwise
data ToggleGroupCallParticipantIsMuted
ToggleGroupCallParticipantIsMuted :: Maybe Bool -> Maybe MessageSender -> Maybe Int -> ToggleGroupCallParticipantIsMuted
[is_muted] :: ToggleGroupCallParticipantIsMuted -> Maybe Bool
[participant_id] :: ToggleGroupCallParticipantIsMuted -> Maybe MessageSender
[group_call_id] :: ToggleGroupCallParticipantIsMuted -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleGroupCallParticipantIsMuted.ToggleGroupCallParticipantIsMuted
instance GHC.Show.Show API.Functions.ToggleGroupCallParticipantIsMuted.ToggleGroupCallParticipantIsMuted
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleGroupCallParticipantIsMuted.ToggleGroupCallParticipantIsMuted
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleGroupCallParticipantIsMuted.ToggleGroupCallParticipantIsMuted

module API.Functions.ToggleGroupCallParticipantIsHandRaised

-- | Toggles whether a group call participant hand is rased
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>participant_id</b> Participant identifier
--   
--   <b>is_hand_raised</b> Pass true if the user's hand needs to be raised.
--   Only self hand can be raised. Requires groupCall.can_be_managed group
--   call flag to lower other's hand
data ToggleGroupCallParticipantIsHandRaised
ToggleGroupCallParticipantIsHandRaised :: Maybe Bool -> Maybe MessageSender -> Maybe Int -> ToggleGroupCallParticipantIsHandRaised
[is_hand_raised] :: ToggleGroupCallParticipantIsHandRaised -> Maybe Bool
[participant_id] :: ToggleGroupCallParticipantIsHandRaised -> Maybe MessageSender
[group_call_id] :: ToggleGroupCallParticipantIsHandRaised -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ToggleGroupCallParticipantIsHandRaised.ToggleGroupCallParticipantIsHandRaised
instance GHC.Show.Show API.Functions.ToggleGroupCallParticipantIsHandRaised.ToggleGroupCallParticipantIsHandRaised
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ToggleGroupCallParticipantIsHandRaised.ToggleGroupCallParticipantIsHandRaised
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ToggleGroupCallParticipantIsHandRaised.ToggleGroupCallParticipantIsHandRaised

module API.Functions.SetVoiceChatDefaultParticipant

-- | Changes default participant identifier, which can be used to join
--   voice chats in a chat
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>default_participant_id</b> Default group call participant
--   identifier to join the voice chats
data SetVoiceChatDefaultParticipant
SetVoiceChatDefaultParticipant :: Maybe MessageSender -> Maybe Int -> SetVoiceChatDefaultParticipant
[default_participant_id] :: SetVoiceChatDefaultParticipant -> Maybe MessageSender
[chat_id] :: SetVoiceChatDefaultParticipant -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetVoiceChatDefaultParticipant.SetVoiceChatDefaultParticipant
instance GHC.Show.Show API.Functions.SetVoiceChatDefaultParticipant.SetVoiceChatDefaultParticipant
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetVoiceChatDefaultParticipant.SetVoiceChatDefaultParticipant
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetVoiceChatDefaultParticipant.SetVoiceChatDefaultParticipant

module API.Functions.SetGroupCallParticipantVolumeLevel

-- | Changes volume level of a participant of an active group call. If the
--   current user can manage the group call, then the participant's volume
--   level will be changed for all users with the default volume level
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>participant_id</b> Participant identifier
--   
--   <b>volume_level</b> New participant's volume level; 1-20000 in
--   hundreds of percents
data SetGroupCallParticipantVolumeLevel
SetGroupCallParticipantVolumeLevel :: Maybe Int -> Maybe MessageSender -> Maybe Int -> SetGroupCallParticipantVolumeLevel
[volume_level] :: SetGroupCallParticipantVolumeLevel -> Maybe Int
[participant_id] :: SetGroupCallParticipantVolumeLevel -> Maybe MessageSender
[group_call_id] :: SetGroupCallParticipantVolumeLevel -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetGroupCallParticipantVolumeLevel.SetGroupCallParticipantVolumeLevel
instance GHC.Show.Show API.Functions.SetGroupCallParticipantVolumeLevel.SetGroupCallParticipantVolumeLevel
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetGroupCallParticipantVolumeLevel.SetGroupCallParticipantVolumeLevel
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetGroupCallParticipantVolumeLevel.SetGroupCallParticipantVolumeLevel

module API.Functions.SetChatMemberStatus

-- | Changes the status of a chat member, needs appropriate privileges.
--   This function is currently not suitable for transferring chat
--   ownership; use transferChatOwnership instead. Use addChatMember or
--   banChatMember if you need to pass some additional parameters
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>member_id</b> Member identifier. Chats can be only banned and
--   unbanned in supergroups and channels
--   
--   <b>status</b> The new status of the member in the chat
data SetChatMemberStatus
SetChatMemberStatus :: Maybe ChatMemberStatus -> Maybe MessageSender -> Maybe Int -> SetChatMemberStatus
[status] :: SetChatMemberStatus -> Maybe ChatMemberStatus
[member_id] :: SetChatMemberStatus -> Maybe MessageSender
[chat_id] :: SetChatMemberStatus -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetChatMemberStatus.SetChatMemberStatus
instance GHC.Show.Show API.Functions.SetChatMemberStatus.SetChatMemberStatus
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetChatMemberStatus.SetChatMemberStatus
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetChatMemberStatus.SetChatMemberStatus

module API.Functions.JoinGroupCall

-- | Joins an active group call. Returns join response payload for tgcalls
--   
--   <b>group_call_id</b> Group call identifier
--   
--   <b>participant_id</b> Identifier of a group call participant, which
--   will be used to join the call; pass null to join as self; voice chats
--   only
--   
--   <b>audio_source_id</b> Caller audio channel synchronization source
--   identifier; received from tgcalls
--   
--   <b>payload</b> Group call join payload; received from tgcalls
--   
--   <b>is_muted</b> True, if the user's microphone is muted
--   
--   <b>is_my_video_enabled</b> True, if the user's video is enabled
--   
--   <b>invite_hash</b> If non-empty, invite hash to be used to join the
--   group call without being muted by administrators
data JoinGroupCall
JoinGroupCall :: Maybe String -> Maybe Bool -> Maybe Bool -> Maybe String -> Maybe Int -> Maybe MessageSender -> Maybe Int -> JoinGroupCall
[invite_hash] :: JoinGroupCall -> Maybe String
[is_my_video_enabled] :: JoinGroupCall -> Maybe Bool
[is_muted] :: JoinGroupCall -> Maybe Bool
[payload] :: JoinGroupCall -> Maybe String
[audio_source_id] :: JoinGroupCall -> Maybe Int
[participant_id] :: JoinGroupCall -> Maybe MessageSender
[group_call_id] :: JoinGroupCall -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.JoinGroupCall.JoinGroupCall
instance GHC.Show.Show API.Functions.JoinGroupCall.JoinGroupCall
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.JoinGroupCall.JoinGroupCall
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.JoinGroupCall.JoinGroupCall

module API.Functions.GetChatMember

-- | Returns information about a single member of a chat
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>member_id</b> Member identifier
data GetChatMember
GetChatMember :: Maybe MessageSender -> Maybe Int -> GetChatMember
[member_id] :: GetChatMember -> Maybe MessageSender
[chat_id] :: GetChatMember -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatMember.GetChatMember
instance GHC.Show.Show API.Functions.GetChatMember.GetChatMember
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatMember.GetChatMember
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatMember.GetChatMember

module API.Functions.BanChatMember

-- | Bans a member in a chat. Members can't be banned in private or secret
--   chats. In supergroups and channels, the user will not be able to
--   return to the group on their own using invite links, etc., unless
--   unbanned first
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>member_id</b> Member identifier
--   
--   <b>banned_until_date</b> Point in time (Unix timestamp) when the user
--   will be unbanned; 0 if never. If the user is banned for more than 366
--   days or for less than 30 seconds from the current time, the user is
--   considered to be banned forever. Ignored in basic groups
--   
--   <b>revoke_messages</b> Pass true to delete all messages in the chat
--   for the user that is being removed. Always true for supergroups and
--   channels
data BanChatMember
BanChatMember :: Maybe Bool -> Maybe Int -> Maybe MessageSender -> Maybe Int -> BanChatMember
[revoke_messages] :: BanChatMember -> Maybe Bool
[banned_until_date] :: BanChatMember -> Maybe Int
[member_id] :: BanChatMember -> Maybe MessageSender
[chat_id] :: BanChatMember -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.BanChatMember.BanChatMember
instance GHC.Show.Show API.Functions.BanChatMember.BanChatMember
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.BanChatMember.BanChatMember
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.BanChatMember.BanChatMember

module API.Functions.AddLocalMessage

-- | Adds a local message to a chat. The message is persistent across
--   application restarts only if the message database is used. Returns the
--   added message
--   
--   <b>chat_id</b> Target chat
--   
--   <b>sender</b> The sender of the message
--   
--   <b>reply_to_message_id</b> Identifier of the message to reply to or 0
--   
--   <b>disable_notification</b> Pass true to disable notification for the
--   message
--   
--   <b>input_message_content</b> The content of the message to be added
data AddLocalMessage
AddLocalMessage :: Maybe InputMessageContent -> Maybe Bool -> Maybe Int -> Maybe MessageSender -> Maybe Int -> AddLocalMessage
[input_message_content] :: AddLocalMessage -> Maybe InputMessageContent
[disable_notification] :: AddLocalMessage -> Maybe Bool
[reply_to_message_id] :: AddLocalMessage -> Maybe Int
[sender] :: AddLocalMessage -> Maybe MessageSender
[chat_id] :: AddLocalMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddLocalMessage.AddLocalMessage
instance GHC.Show.Show API.Functions.AddLocalMessage.AddLocalMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddLocalMessage.AddLocalMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddLocalMessage.AddLocalMessage

module API.ChatMember

-- | Information about a user or a chat as a member of another chat
--   
--   <b>member_id</b> Identifier of the chat member. Currently, other chats
--   can be only Left or Banned. Only supergroups and channels can have
--   other chats as Left or Banned members and these chats must be
--   supergroups or channels
--   
--   <b>inviter_user_id</b> Identifier of a user that
--   invited<i>promoted</i>banned this member in the chat; 0 if unknown
--   
--   <b>joined_chat_date</b> Point in time (Unix timestamp) when the user
--   joined the chat
--   
--   <b>status</b> Status of the member in the chat
data ChatMember
ChatMember :: Maybe ChatMemberStatus -> Maybe Int -> Maybe Int -> Maybe MessageSender -> ChatMember
[status] :: ChatMember -> Maybe ChatMemberStatus
[joined_chat_date] :: ChatMember -> Maybe Int
[inviter_user_id] :: ChatMember -> Maybe Int
[member_id] :: ChatMember -> Maybe MessageSender
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatMember.ChatMember
instance GHC.Show.Show API.ChatMember.ChatMember
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatMember.ChatMember
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatMember.ChatMember

module API.ChatEventAction

-- | Represents a chat event
data ChatEventAction

-- | A message was edited
--   
--   <b>old_message</b> The original message before the edit
--   
--   <b>new_message</b> The message after it was edited
ChatEventMessageEdited :: Maybe Message -> Maybe Message -> ChatEventAction
[new_message] :: ChatEventAction -> Maybe Message
[old_message] :: ChatEventAction -> Maybe Message

-- | A message was deleted
--   
--   <b>message</b> Deleted message
ChatEventMessageDeleted :: Maybe Message -> ChatEventAction
[message] :: ChatEventAction -> Maybe Message

-- | A poll in a message was stopped
--   
--   <b>message</b> The message with the poll
ChatEventPollStopped :: Maybe Message -> ChatEventAction
[message] :: ChatEventAction -> Maybe Message

-- | A message was pinned
--   
--   <b>message</b> Pinned message
ChatEventMessagePinned :: Maybe Message -> ChatEventAction
[message] :: ChatEventAction -> Maybe Message

-- | A message was unpinned
--   
--   <b>message</b> Unpinned message
ChatEventMessageUnpinned :: Maybe Message -> ChatEventAction
[message] :: ChatEventAction -> Maybe Message

-- | A new member joined the chat
ChatEventMemberJoined :: ChatEventAction

-- | A new member joined the chat by an invite link
--   
--   <b>invite_link</b> Invite link used to join the chat
ChatEventMemberJoinedByInviteLink :: Maybe ChatInviteLink -> ChatEventAction
[invite_link] :: ChatEventAction -> Maybe ChatInviteLink

-- | A member left the chat
ChatEventMemberLeft :: ChatEventAction

-- | A new chat member was invited
--   
--   <b>user_id</b> New member user identifier
--   
--   <b>status</b> New member status
ChatEventMemberInvited :: Maybe ChatMemberStatus -> Maybe Int -> ChatEventAction
[status] :: ChatEventAction -> Maybe ChatMemberStatus
[user_id] :: ChatEventAction -> Maybe Int

-- | A chat member has gained/lost administrator status, or the list of
--   their administrator privileges has changed
--   
--   <b>user_id</b> Affected chat member user identifier
--   
--   <b>old_status</b> Previous status of the chat member
--   
--   <b>new_status</b> New status of the chat member
ChatEventMemberPromoted :: Maybe ChatMemberStatus -> Maybe ChatMemberStatus -> Maybe Int -> ChatEventAction
[new_status] :: ChatEventAction -> Maybe ChatMemberStatus
[old_status] :: ChatEventAction -> Maybe ChatMemberStatus
[user_id] :: ChatEventAction -> Maybe Int

-- | A chat member was restricted<i>unrestricted or banned</i>unbanned, or
--   the list of their restrictions has changed
--   
--   <b>member_id</b> Affected chat member identifier
--   
--   <b>old_status</b> Previous status of the chat member
--   
--   <b>new_status</b> New status of the chat member
ChatEventMemberRestricted :: Maybe ChatMemberStatus -> Maybe ChatMemberStatus -> Maybe MessageSender -> ChatEventAction
[new_status] :: ChatEventAction -> Maybe ChatMemberStatus
[old_status] :: ChatEventAction -> Maybe ChatMemberStatus
[member_id] :: ChatEventAction -> Maybe MessageSender

-- | The chat title was changed
--   
--   <b>old_title</b> Previous chat title
--   
--   <b>new_title</b> New chat title
ChatEventTitleChanged :: Maybe String -> Maybe String -> ChatEventAction
[new_title] :: ChatEventAction -> Maybe String
[old_title] :: ChatEventAction -> Maybe String

-- | The chat permissions was changed
--   
--   <b>old_permissions</b> Previous chat permissions
--   
--   <b>new_permissions</b> New chat permissions
ChatEventPermissionsChanged :: Maybe ChatPermissions -> Maybe ChatPermissions -> ChatEventAction
[new_permissions] :: ChatEventAction -> Maybe ChatPermissions
[old_permissions] :: ChatEventAction -> Maybe ChatPermissions

-- | The chat description was changed
--   
--   <b>old_description</b> Previous chat description
--   
--   <b>new_description</b> New chat description
ChatEventDescriptionChanged :: Maybe String -> Maybe String -> ChatEventAction
[new_description] :: ChatEventAction -> Maybe String
[old_description] :: ChatEventAction -> Maybe String

-- | The chat username was changed
--   
--   <b>old_username</b> Previous chat username
--   
--   <b>new_username</b> New chat username
ChatEventUsernameChanged :: Maybe String -> Maybe String -> ChatEventAction
[new_username] :: ChatEventAction -> Maybe String
[old_username] :: ChatEventAction -> Maybe String

-- | The chat photo was changed
--   
--   <b>old_photo</b> Previous chat photo value; may be null
--   
--   <b>new_photo</b> New chat photo value; may be null
ChatEventPhotoChanged :: Maybe ChatPhoto -> Maybe ChatPhoto -> ChatEventAction
[new_photo] :: ChatEventAction -> Maybe ChatPhoto
[old_photo] :: ChatEventAction -> Maybe ChatPhoto

-- | The can_invite_users permission of a supergroup chat was toggled
--   
--   <b>can_invite_users</b> New value of can_invite_users permission
ChatEventInvitesToggled :: Maybe Bool -> ChatEventAction
[can_invite_users] :: ChatEventAction -> Maybe Bool

-- | The linked chat of a supergroup was changed
--   
--   <b>old_linked_chat_id</b> Previous supergroup linked chat identifier
--   
--   <b>new_linked_chat_id</b> New supergroup linked chat identifier
ChatEventLinkedChatChanged :: Maybe Int -> Maybe Int -> ChatEventAction
[new_linked_chat_id] :: ChatEventAction -> Maybe Int
[old_linked_chat_id] :: ChatEventAction -> Maybe Int

-- | The slow_mode_delay setting of a supergroup was changed
--   
--   <b>old_slow_mode_delay</b> Previous value of slow_mode_delay
--   
--   <b>new_slow_mode_delay</b> New value of slow_mode_delay
ChatEventSlowModeDelayChanged :: Maybe Int -> Maybe Int -> ChatEventAction
[new_slow_mode_delay] :: ChatEventAction -> Maybe Int
[old_slow_mode_delay] :: ChatEventAction -> Maybe Int

-- | The message TTL setting was changed
--   
--   <b>old_message_ttl_setting</b> Previous value of message_ttl_setting
--   
--   <b>new_message_ttl_setting</b> New value of message_ttl_setting
ChatEventMessageTtlSettingChanged :: Maybe Int -> Maybe Int -> ChatEventAction
[new_message_ttl_setting] :: ChatEventAction -> Maybe Int
[old_message_ttl_setting] :: ChatEventAction -> Maybe Int

-- | The sign_messages setting of a channel was toggled
--   
--   <b>sign_messages</b> New value of sign_messages
ChatEventSignMessagesToggled :: Maybe Bool -> ChatEventAction
[sign_messages] :: ChatEventAction -> Maybe Bool

-- | The supergroup sticker set was changed
--   
--   <b>old_sticker_set_id</b> Previous identifier of the chat sticker set;
--   0 if none
--   
--   <b>new_sticker_set_id</b> New identifier of the chat sticker set; 0 if
--   none
ChatEventStickerSetChanged :: Maybe Int -> Maybe Int -> ChatEventAction
[new_sticker_set_id] :: ChatEventAction -> Maybe Int
[old_sticker_set_id] :: ChatEventAction -> Maybe Int

-- | The supergroup location was changed
--   
--   <b>old_location</b> Previous location; may be null
--   
--   <b>new_location</b> New location; may be null
ChatEventLocationChanged :: Maybe ChatLocation -> Maybe ChatLocation -> ChatEventAction
[new_location] :: ChatEventAction -> Maybe ChatLocation
[old_location] :: ChatEventAction -> Maybe ChatLocation

-- | The is_all_history_available setting of a supergroup was toggled
--   
--   <b>is_all_history_available</b> New value of is_all_history_available
ChatEventIsAllHistoryAvailableToggled :: Maybe Bool -> ChatEventAction
[is_all_history_available] :: ChatEventAction -> Maybe Bool

-- | A chat invite link was edited
--   
--   <b>old_invite_link</b> Previous information about the invite link
--   
--   <b>new_invite_link</b> New information about the invite link
ChatEventInviteLinkEdited :: Maybe ChatInviteLink -> Maybe ChatInviteLink -> ChatEventAction
[new_invite_link] :: ChatEventAction -> Maybe ChatInviteLink
[old_invite_link] :: ChatEventAction -> Maybe ChatInviteLink

-- | A chat invite link was revoked
--   
--   <b>invite_link</b> The invite link
ChatEventInviteLinkRevoked :: Maybe ChatInviteLink -> ChatEventAction
[invite_link] :: ChatEventAction -> Maybe ChatInviteLink

-- | A revoked chat invite link was deleted
--   
--   <b>invite_link</b> The invite link
ChatEventInviteLinkDeleted :: Maybe ChatInviteLink -> ChatEventAction
[invite_link] :: ChatEventAction -> Maybe ChatInviteLink

-- | A voice chat was created
--   
--   <b>group_call_id</b> Identifier of the voice chat. The voice chat can
--   be received through the method getGroupCall
ChatEventVoiceChatCreated :: Maybe Int -> ChatEventAction
[group_call_id] :: ChatEventAction -> Maybe Int

-- | A voice chat was discarded
--   
--   <b>group_call_id</b> Identifier of the voice chat. The voice chat can
--   be received through the method getGroupCall
ChatEventVoiceChatDiscarded :: Maybe Int -> ChatEventAction
[group_call_id] :: ChatEventAction -> Maybe Int

-- | A voice chat participant was muted or unmuted
--   
--   <b>participant_id</b> Identifier of the affected group call
--   participant
--   
--   <b>is_muted</b> New value of is_muted
ChatEventVoiceChatParticipantIsMutedToggled :: Maybe Bool -> Maybe MessageSender -> ChatEventAction
[is_muted] :: ChatEventAction -> Maybe Bool
[participant_id] :: ChatEventAction -> Maybe MessageSender

-- | A voice chat participant volume level was changed
--   
--   <b>participant_id</b> Identifier of the affected group call
--   participant
--   
--   <b>volume_level</b> New value of volume_level; 1-20000 in hundreds of
--   percents
ChatEventVoiceChatParticipantVolumeLevelChanged :: Maybe Int -> Maybe MessageSender -> ChatEventAction
[volume_level] :: ChatEventAction -> Maybe Int
[participant_id] :: ChatEventAction -> Maybe MessageSender

-- | The mute_new_participants setting of a voice chat was toggled
--   
--   <b>mute_new_participants</b> New value of the mute_new_participants
--   setting
ChatEventVoiceChatMuteNewParticipantsToggled :: Maybe Bool -> ChatEventAction
[mute_new_participants] :: ChatEventAction -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatEventAction.ChatEventAction
instance GHC.Show.Show API.ChatEventAction.ChatEventAction
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatEventAction.ChatEventAction
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatEventAction.ChatEventAction

module API.MessageSender

-- | Contains information about the sender of a message
data MessageSender

-- | The message was sent by a known user
--   
--   <b>user_id</b> Identifier of the user that sent the message
MessageSenderUser :: Maybe Int -> MessageSender
[user_id] :: MessageSender -> Maybe Int

-- | The message was sent on behalf of a chat
--   
--   <b>chat_id</b> Identifier of the chat that sent the message
MessageSenderChat :: Maybe Int -> MessageSender
[chat_id] :: MessageSender -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageSender.MessageSender
instance GHC.Show.Show API.MessageSender.MessageSender
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageSender.MessageSender
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageSender.MessageSender

module API.MessageSenders

-- | Represents a list of message senders
--   
--   <b>total_count</b> Approximate total count of messages senders found
--   
--   <b>senders</b> List of message senders
data MessageSenders
MessageSenders :: Maybe [MessageSender] -> Maybe Int -> MessageSenders
[senders] :: MessageSenders -> Maybe [MessageSender]
[total_count] :: MessageSenders -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageSenders.MessageSenders
instance GHC.Show.Show API.MessageSenders.MessageSenders
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageSenders.MessageSenders
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageSenders.MessageSenders

module API.MessageSendingState

-- | Contains information about the sending state of the message
data MessageSendingState

-- | The message is being sent now, but has not yet been delivered to the
--   server
MessageSendingStatePending :: MessageSendingState

-- | The message failed to be sent
--   
--   <b>error_code</b> An error code; 0 if unknown
--   
--   <b>error_message</b> Error message
--   
--   <b>can_retry</b> True, if the message can be re-sent
--   
--   <b>retry_after</b> Time left before the message can be re-sent, in
--   seconds. No update is sent when this field changes
MessageSendingStateFailed :: Maybe Float -> Maybe Bool -> Maybe String -> Maybe Int -> MessageSendingState
[retry_after] :: MessageSendingState -> Maybe Float
[can_retry] :: MessageSendingState -> Maybe Bool
[error_message] :: MessageSendingState -> Maybe String
[error_code] :: MessageSendingState -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageSendingState.MessageSendingState
instance GHC.Show.Show API.MessageSendingState.MessageSendingState
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageSendingState.MessageSendingState
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageSendingState.MessageSendingState

module API.MessageThreadInfo

-- | Contains information about a message thread
--   
--   <b>chat_id</b> Identifier of the chat to which the message thread
--   belongs
--   
--   <b>message_thread_id</b> Message thread identifier, unique within the
--   chat
--   
--   <b>reply_info</b> Contains information about the message thread
--   
--   <b>unread_message_count</b> Approximate number of unread messages in
--   the message thread
--   
--   <b>messages</b> The messages from which the thread starts. The
--   messages are returned in a reverse chronological order (i.e., in order
--   of decreasing message_id)
--   
--   <b>draft_message</b> A draft of a message in the message thread; may
--   be null
data MessageThreadInfo
MessageThreadInfo :: Maybe DraftMessage -> Maybe [Message] -> Maybe Int -> Maybe MessageReplyInfo -> Maybe Int -> Maybe Int -> MessageThreadInfo
[draft_message] :: MessageThreadInfo -> Maybe DraftMessage
[messages] :: MessageThreadInfo -> Maybe [Message]
[unread_message_count] :: MessageThreadInfo -> Maybe Int
[reply_info] :: MessageThreadInfo -> Maybe MessageReplyInfo
[message_thread_id] :: MessageThreadInfo -> Maybe Int
[chat_id] :: MessageThreadInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageThreadInfo.MessageThreadInfo
instance GHC.Show.Show API.MessageThreadInfo.MessageThreadInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageThreadInfo.MessageThreadInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageThreadInfo.MessageThreadInfo

module API.Messages

-- | Contains a list of messages
--   
--   <b>total_count</b> Approximate total count of messages found
--   
--   <b>messages</b> List of messages; messages may be null
data Messages
Messages :: Maybe [Message] -> Maybe Int -> Messages
[messages] :: Messages -> Maybe [Message]
[total_count] :: Messages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Messages.Messages
instance GHC.Show.Show API.Messages.Messages
instance Data.Aeson.Types.ToJSON.ToJSON API.Messages.Messages
instance Data.Aeson.Types.FromJSON.FromJSON API.Messages.Messages

module API.ChatPhotoInfo

-- | Contains basic information about the photo of a chat
--   
--   <b>small</b> A small (160x160) chat photo variant in JPEG format. The
--   file can be downloaded only before the photo is changed
--   
--   <b>big</b> A big (640x640) chat photo variant in JPEG format. The file
--   can be downloaded only before the photo is changed
--   
--   <b>minithumbnail</b> Chat photo minithumbnail; may be null
--   
--   <b>has_animation</b> True, if the photo has animated variant
data ChatPhotoInfo
ChatPhotoInfo :: Maybe Bool -> Maybe Minithumbnail -> Maybe File -> Maybe File -> ChatPhotoInfo
[has_animation] :: ChatPhotoInfo -> Maybe Bool
[minithumbnail] :: ChatPhotoInfo -> Maybe Minithumbnail
[big] :: ChatPhotoInfo -> Maybe File
[small] :: ChatPhotoInfo -> Maybe File
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatPhotoInfo.ChatPhotoInfo
instance GHC.Show.Show API.ChatPhotoInfo.ChatPhotoInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatPhotoInfo.ChatPhotoInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatPhotoInfo.ChatPhotoInfo

module API.Minithumbnail

-- | Thumbnail image of a very poor quality and low resolution
--   
--   <b>width</b> Thumbnail width, usually doesn't exceed 40
--   
--   <b>height</b> Thumbnail height, usually doesn't exceed 40
--   
--   <b>data</b> The thumbnail in JPEG format
data Minithumbnail
Minithumbnail :: Maybe String -> Maybe Int -> Maybe Int -> Minithumbnail
[_data] :: Minithumbnail -> Maybe String
[height] :: Minithumbnail -> Maybe Int
[width] :: Minithumbnail -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Minithumbnail.Minithumbnail
instance GHC.Show.Show API.Minithumbnail.Minithumbnail
instance Data.Aeson.Types.ToJSON.ToJSON API.Minithumbnail.Minithumbnail
instance Data.Aeson.Types.FromJSON.FromJSON API.Minithumbnail.Minithumbnail

module API.NetworkStatistics

-- | A full list of available network statistic entries
--   
--   <b>since_date</b> Point in time (Unix timestamp) from which the
--   statistics are collected
--   
--   <b>entries</b> Network statistics entries
data NetworkStatistics
NetworkStatistics :: Maybe [NetworkStatisticsEntry] -> Maybe Int -> NetworkStatistics
[entries] :: NetworkStatistics -> Maybe [NetworkStatisticsEntry]
[since_date] :: NetworkStatistics -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.NetworkStatistics.NetworkStatistics
instance GHC.Show.Show API.NetworkStatistics.NetworkStatistics
instance Data.Aeson.Types.ToJSON.ToJSON API.NetworkStatistics.NetworkStatistics
instance Data.Aeson.Types.FromJSON.FromJSON API.NetworkStatistics.NetworkStatistics

module API.Functions.AddNetworkStatistics

-- | Adds the specified data to data usage statistics. Can be called before
--   authorization
--   
--   <b>entry</b> The network statistics entry with the data to be added to
--   statistics
data AddNetworkStatistics
AddNetworkStatistics :: Maybe NetworkStatisticsEntry -> AddNetworkStatistics
[entry] :: AddNetworkStatistics -> Maybe NetworkStatisticsEntry
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddNetworkStatistics.AddNetworkStatistics
instance GHC.Show.Show API.Functions.AddNetworkStatistics.AddNetworkStatistics
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddNetworkStatistics.AddNetworkStatistics
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddNetworkStatistics.AddNetworkStatistics

module API.NetworkStatisticsEntry

-- | Contains statistics about network usage
data NetworkStatisticsEntry

-- | Contains information about the total amount of data that was used to
--   send and receive files
--   
--   <b>file_type</b> Type of the file the data is part of; pass null if
--   the data isn't related to files
--   
--   <b>network_type</b> Type of the network the data was sent through.
--   Call setNetworkType to maintain the actual network type
--   
--   <b>sent_bytes</b> Total number of bytes sent
--   
--   <b>received_bytes</b> Total number of bytes received
NetworkStatisticsEntryFile :: Maybe Int -> Maybe Int -> Maybe NetworkType -> Maybe FileType -> NetworkStatisticsEntry
[received_bytes] :: NetworkStatisticsEntry -> Maybe Int
[sent_bytes] :: NetworkStatisticsEntry -> Maybe Int
[network_type] :: NetworkStatisticsEntry -> Maybe NetworkType
[file_type] :: NetworkStatisticsEntry -> Maybe FileType

-- | Contains information about the total amount of data that was used for
--   calls
--   
--   <b>network_type</b> Type of the network the data was sent through.
--   Call setNetworkType to maintain the actual network type
--   
--   <b>sent_bytes</b> Total number of bytes sent
--   
--   <b>received_bytes</b> Total number of bytes received
--   
--   <b>duration</b> Total call duration, in seconds
NetworkStatisticsEntryCall :: Maybe Float -> Maybe Int -> Maybe Int -> Maybe NetworkType -> NetworkStatisticsEntry
[duration] :: NetworkStatisticsEntry -> Maybe Float
[received_bytes] :: NetworkStatisticsEntry -> Maybe Int
[sent_bytes] :: NetworkStatisticsEntry -> Maybe Int
[network_type] :: NetworkStatisticsEntry -> Maybe NetworkType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.NetworkStatisticsEntry.NetworkStatisticsEntry
instance GHC.Show.Show API.NetworkStatisticsEntry.NetworkStatisticsEntry
instance Data.Aeson.Types.ToJSON.ToJSON API.NetworkStatisticsEntry.NetworkStatisticsEntry
instance Data.Aeson.Types.FromJSON.FromJSON API.NetworkStatisticsEntry.NetworkStatisticsEntry

module API.Functions.SetNetworkType

-- | Sets the current network type. Can be called before authorization.
--   Calling this method forces all network connections to reopen,
--   mitigating the delay in switching between different networks, so it
--   must be called whenever the network is changed, even if the network
--   type remains the same.
--   
--   <ul>
--   <li>Network type is used to check whether the library can use the
--   network at all and also for collecting detailed network data usage
--   statistics</li>
--   </ul>
--   
--   <b>type</b> The new network type; pass null to set network type to
--   networkTypeOther
data SetNetworkType
SetNetworkType :: Maybe NetworkType -> SetNetworkType
[_type] :: SetNetworkType -> Maybe NetworkType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetNetworkType.SetNetworkType
instance GHC.Show.Show API.Functions.SetNetworkType.SetNetworkType
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetNetworkType.SetNetworkType
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetNetworkType.SetNetworkType

module API.Functions.SetAutoDownloadSettings

-- | Sets auto-download settings
--   
--   <b>settings</b> New user auto-download settings
--   
--   <b>type</b> Type of the network for which the new settings are
--   relevant
data SetAutoDownloadSettings
SetAutoDownloadSettings :: Maybe NetworkType -> Maybe AutoDownloadSettings -> SetAutoDownloadSettings
[_type] :: SetAutoDownloadSettings -> Maybe NetworkType
[settings] :: SetAutoDownloadSettings -> Maybe AutoDownloadSettings
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetAutoDownloadSettings.SetAutoDownloadSettings
instance GHC.Show.Show API.Functions.SetAutoDownloadSettings.SetAutoDownloadSettings
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetAutoDownloadSettings.SetAutoDownloadSettings
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetAutoDownloadSettings.SetAutoDownloadSettings

module API.NetworkType

-- | Represents the type of a network
data NetworkType

-- | The network is not available
NetworkTypeNone :: NetworkType

-- | A mobile network
NetworkTypeMobile :: NetworkType

-- | A mobile roaming network
NetworkTypeMobileRoaming :: NetworkType

-- | A Wi-Fi network
NetworkTypeWiFi :: NetworkType

-- | A different network type (e.g., Ethernet network)
NetworkTypeOther :: NetworkType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.NetworkType.NetworkType
instance GHC.Show.Show API.NetworkType.NetworkType
instance Data.Aeson.Types.ToJSON.ToJSON API.NetworkType.NetworkType
instance Data.Aeson.Types.FromJSON.FromJSON API.NetworkType.NetworkType

module API.NotificationGroup

-- | Describes a group of notifications
--   
--   <b>id</b> Unique persistent auto-incremented from 1 identifier of the
--   notification group
--   
--   <b>type</b> Type of the group
--   
--   <b>chat_id</b> Identifier of a chat to which all notifications in the
--   group belong
--   
--   <b>total_count</b> Total number of active notifications in the group
--   
--   <b>notifications</b> The list of active notifications
data NotificationGroup
NotificationGroup :: Maybe [Notification] -> Maybe Int -> Maybe Int -> Maybe NotificationGroupType -> Maybe Int -> NotificationGroup
[notifications] :: NotificationGroup -> Maybe [Notification]
[total_count] :: NotificationGroup -> Maybe Int
[chat_id] :: NotificationGroup -> Maybe Int
[_type] :: NotificationGroup -> Maybe NotificationGroupType
[_id] :: NotificationGroup -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.NotificationGroup.NotificationGroup
instance GHC.Show.Show API.NotificationGroup.NotificationGroup
instance Data.Aeson.Types.ToJSON.ToJSON API.NotificationGroup.NotificationGroup
instance Data.Aeson.Types.FromJSON.FromJSON API.NotificationGroup.NotificationGroup

module API.NotificationGroupType

-- | Describes the type of notifications in a notification group
data NotificationGroupType

-- | A group containing notifications of type notificationTypeNewMessage
--   and notificationTypeNewPushMessage with ordinary unread messages
NotificationGroupTypeMessages :: NotificationGroupType

-- | A group containing notifications of type notificationTypeNewMessage
--   and notificationTypeNewPushMessage with unread mentions of the current
--   user, replies to their messages, or a pinned message
NotificationGroupTypeMentions :: NotificationGroupType

-- | A group containing a notification of type
--   notificationTypeNewSecretChat
NotificationGroupTypeSecretChat :: NotificationGroupType

-- | A group containing notifications of type notificationTypeNewCall
NotificationGroupTypeCalls :: NotificationGroupType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.NotificationGroupType.NotificationGroupType
instance GHC.Show.Show API.NotificationGroupType.NotificationGroupType
instance Data.Aeson.Types.ToJSON.ToJSON API.NotificationGroupType.NotificationGroupType
instance Data.Aeson.Types.FromJSON.FromJSON API.NotificationGroupType.NotificationGroupType

module API.Functions.GetScopeNotificationSettings

-- | Returns the notification settings for chats of a given type
--   
--   <b>scope</b> Types of chats for which to return the notification
--   settings information
data GetScopeNotificationSettings
GetScopeNotificationSettings :: Maybe NotificationSettingsScope -> GetScopeNotificationSettings
[scope] :: GetScopeNotificationSettings -> Maybe NotificationSettingsScope
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetScopeNotificationSettings.GetScopeNotificationSettings
instance GHC.Show.Show API.Functions.GetScopeNotificationSettings.GetScopeNotificationSettings
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetScopeNotificationSettings.GetScopeNotificationSettings
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetScopeNotificationSettings.GetScopeNotificationSettings

module API.Functions.GetChatNotificationSettingsExceptions

-- | Returns list of chats with non-default notification settings
--   
--   <b>scope</b> If specified, only chats from the scope will be returned;
--   pass null to return chats from all scopes
--   
--   <b>compare_sound</b> If true, also chats with non-default sound will
--   be returned
data GetChatNotificationSettingsExceptions
GetChatNotificationSettingsExceptions :: Maybe Bool -> Maybe NotificationSettingsScope -> GetChatNotificationSettingsExceptions
[compare_sound] :: GetChatNotificationSettingsExceptions -> Maybe Bool
[scope] :: GetChatNotificationSettingsExceptions -> Maybe NotificationSettingsScope
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatNotificationSettingsExceptions.GetChatNotificationSettingsExceptions
instance GHC.Show.Show API.Functions.GetChatNotificationSettingsExceptions.GetChatNotificationSettingsExceptions
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatNotificationSettingsExceptions.GetChatNotificationSettingsExceptions
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatNotificationSettingsExceptions.GetChatNotificationSettingsExceptions

module API.NotificationSettingsScope

-- | Describes the types of chats to which notification settings are
--   relevant
data NotificationSettingsScope

-- | Notification settings applied to all private and secret chats when the
--   corresponding chat setting has a default value
NotificationSettingsScopePrivateChats :: NotificationSettingsScope

-- | Notification settings applied to all basic groups and supergroups when
--   the corresponding chat setting has a default value
NotificationSettingsScopeGroupChats :: NotificationSettingsScope

-- | Notification settings applied to all channels when the corresponding
--   chat setting has a default value
NotificationSettingsScopeChannelChats :: NotificationSettingsScope
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.NotificationSettingsScope.NotificationSettingsScope
instance GHC.Show.Show API.NotificationSettingsScope.NotificationSettingsScope
instance Data.Aeson.Types.ToJSON.ToJSON API.NotificationSettingsScope.NotificationSettingsScope
instance Data.Aeson.Types.FromJSON.FromJSON API.NotificationSettingsScope.NotificationSettingsScope

module API.Notification

-- | Contains information about a notification
--   
--   <b>id</b> Unique persistent identifier of this notification
--   
--   <b>date</b> Notification date
--   
--   <b>is_silent</b> True, if the notification was initially silent
--   
--   <b>type</b> Notification type
data Notification
Notification :: Maybe NotificationType -> Maybe Bool -> Maybe Int -> Maybe Int -> Notification
[_type] :: Notification -> Maybe NotificationType
[is_silent] :: Notification -> Maybe Bool
[date] :: Notification -> Maybe Int
[_id] :: Notification -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Notification.Notification
instance GHC.Show.Show API.Notification.Notification
instance Data.Aeson.Types.ToJSON.ToJSON API.Notification.Notification
instance Data.Aeson.Types.FromJSON.FromJSON API.Notification.Notification

module API.Ok

-- | An object of this type is returned on a successful function call for
--   certain functions
data Ok
Ok :: Ok
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Ok.Ok
instance GHC.Show.Show API.Ok.Ok
instance Data.Aeson.Types.ToJSON.ToJSON API.Ok.Ok
instance Data.Aeson.Types.FromJSON.FromJSON API.Ok.Ok

module API.Functions.SetOption

-- | Sets the value of an option. (Check the list of available options on
--   <a>https://core.telegram.org/tdlib/options.)</a> Only writable options
--   can be set. Can be called before authorization
--   
--   <b>name</b> The name of the option
--   
--   <b>value</b> The new value of the option; pass null to reset option
--   value to a default value
data SetOption
SetOption :: Maybe OptionValue -> Maybe String -> SetOption
[value] :: SetOption -> Maybe OptionValue
[name] :: SetOption -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetOption.SetOption
instance GHC.Show.Show API.Functions.SetOption.SetOption
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetOption.SetOption
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetOption.SetOption

module API.OptionValue

-- | Represents the value of an option
data OptionValue

-- | Represents a boolean option
--   
--   <b>value</b> The value of the option
OptionValueBoolean :: Maybe Bool -> OptionValue
[__value] :: OptionValue -> Maybe Bool

-- | Represents an unknown option or an option which has a default value
OptionValueEmpty :: OptionValue

-- | Represents an integer option
--   
--   <b>value</b> The value of the option
OptionValueInteger :: Maybe Int -> OptionValue
[_value] :: OptionValue -> Maybe Int

-- | Represents a string option
--   
--   <b>value</b> The value of the option
OptionValueString :: Maybe String -> OptionValue
[value] :: OptionValue -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.OptionValue.OptionValue
instance GHC.Show.Show API.OptionValue.OptionValue
instance Data.Aeson.Types.ToJSON.ToJSON API.OptionValue.OptionValue
instance Data.Aeson.Types.FromJSON.FromJSON API.OptionValue.OptionValue

module API.Functions.ValidateOrderInfo

-- | Validates the order information provided by a user and returns the
--   available shipping options for a flexible invoice
--   
--   <b>chat_id</b> Chat identifier of the Invoice message
--   
--   <b>message_id</b> Message identifier
--   
--   <b>order_info</b> The order information, provided by the user; pass
--   null if empty
--   
--   <b>allow_save</b> True, if the order information can be saved
data ValidateOrderInfo
ValidateOrderInfo :: Maybe Bool -> Maybe OrderInfo -> Maybe Int -> Maybe Int -> ValidateOrderInfo
[allow_save] :: ValidateOrderInfo -> Maybe Bool
[order_info] :: ValidateOrderInfo -> Maybe OrderInfo
[message_id] :: ValidateOrderInfo -> Maybe Int
[chat_id] :: ValidateOrderInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ValidateOrderInfo.ValidateOrderInfo
instance GHC.Show.Show API.Functions.ValidateOrderInfo.ValidateOrderInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ValidateOrderInfo.ValidateOrderInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ValidateOrderInfo.ValidateOrderInfo

module API.OrderInfo

-- | Order information
--   
--   <b>name</b> Name of the user
--   
--   <b>phone_number</b> Phone number of the user
--   
--   <b>email_address</b> Email address of the user
--   
--   <b>shipping_address</b> Shipping address for this order; may be null
data OrderInfo
OrderInfo :: Maybe Address -> Maybe String -> Maybe String -> Maybe String -> OrderInfo
[shipping_address] :: OrderInfo -> Maybe Address
[email_address] :: OrderInfo -> Maybe String
[phone_number] :: OrderInfo -> Maybe String
[name] :: OrderInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.OrderInfo.OrderInfo
instance GHC.Show.Show API.OrderInfo.OrderInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.OrderInfo.OrderInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.OrderInfo.OrderInfo

module API.PageBlockHorizontalAlignment

-- | Describes a horizontal alignment of a table cell content
data PageBlockHorizontalAlignment

-- | The content must be left-aligned
PageBlockHorizontalAlignmentLeft :: PageBlockHorizontalAlignment

-- | The content must be center-aligned
PageBlockHorizontalAlignmentCenter :: PageBlockHorizontalAlignment

-- | The content must be right-aligned
PageBlockHorizontalAlignmentRight :: PageBlockHorizontalAlignment
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PageBlockHorizontalAlignment.PageBlockHorizontalAlignment
instance GHC.Show.Show API.PageBlockHorizontalAlignment.PageBlockHorizontalAlignment
instance Data.Aeson.Types.ToJSON.ToJSON API.PageBlockHorizontalAlignment.PageBlockHorizontalAlignment
instance Data.Aeson.Types.FromJSON.FromJSON API.PageBlockHorizontalAlignment.PageBlockHorizontalAlignment

module API.PageBlockListItem

-- | Describes an item of a list page block
--   
--   <b>label</b> Item label
--   
--   <b>page_blocks</b> Item blocks
data PageBlockListItem
PageBlockListItem :: Maybe [PageBlock] -> Maybe String -> PageBlockListItem
[page_blocks] :: PageBlockListItem -> Maybe [PageBlock]
[label] :: PageBlockListItem -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PageBlockListItem.PageBlockListItem
instance GHC.Show.Show API.PageBlockListItem.PageBlockListItem
instance Data.Aeson.Types.ToJSON.ToJSON API.PageBlockListItem.PageBlockListItem
instance Data.Aeson.Types.FromJSON.FromJSON API.PageBlockListItem.PageBlockListItem

module API.PageBlockVerticalAlignment

-- | Describes a Vertical alignment of a table cell content
data PageBlockVerticalAlignment

-- | The content must be top-aligned
PageBlockVerticalAlignmentTop :: PageBlockVerticalAlignment

-- | The content must be middle-aligned
PageBlockVerticalAlignmentMiddle :: PageBlockVerticalAlignment

-- | The content must be bottom-aligned
PageBlockVerticalAlignmentBottom :: PageBlockVerticalAlignment
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PageBlockVerticalAlignment.PageBlockVerticalAlignment
instance GHC.Show.Show API.PageBlockVerticalAlignment.PageBlockVerticalAlignment
instance Data.Aeson.Types.ToJSON.ToJSON API.PageBlockVerticalAlignment.PageBlockVerticalAlignment
instance Data.Aeson.Types.FromJSON.FromJSON API.PageBlockVerticalAlignment.PageBlockVerticalAlignment

module API.PassportElementErrorSource

-- | Contains the description of an error in a Telegram Passport element
data PassportElementErrorSource

-- | The element contains an error in an unspecified place. The error will
--   be considered resolved when new data is added
PassportElementErrorSourceUnspecified :: PassportElementErrorSource

-- | One of the data fields contains an error. The error will be considered
--   resolved when the value of the field changes
--   
--   <b>field_name</b> Field name
PassportElementErrorSourceDataField :: Maybe String -> PassportElementErrorSource
[field_name] :: PassportElementErrorSource -> Maybe String

-- | The front side of the document contains an error. The error will be
--   considered resolved when the file with the front side changes
PassportElementErrorSourceFrontSide :: PassportElementErrorSource

-- | The reverse side of the document contains an error. The error will be
--   considered resolved when the file with the reverse side changes
PassportElementErrorSourceReverseSide :: PassportElementErrorSource

-- | The selfie with the document contains an error. The error will be
--   considered resolved when the file with the selfie changes
PassportElementErrorSourceSelfie :: PassportElementErrorSource

-- | One of files with the translation of the document contains an error.
--   The error will be considered resolved when the file changes
--   
--   <b>file_index</b> Index of a file with the error
PassportElementErrorSourceTranslationFile :: Maybe Int -> PassportElementErrorSource
[file_index] :: PassportElementErrorSource -> Maybe Int

-- | The translation of the document contains an error. The error will be
--   considered resolved when the list of translation files changes
PassportElementErrorSourceTranslationFiles :: PassportElementErrorSource

-- | The file contains an error. The error will be considered resolved when
--   the file changes
--   
--   <b>file_index</b> Index of a file with the error
PassportElementErrorSourceFile :: Maybe Int -> PassportElementErrorSource
[file_index] :: PassportElementErrorSource -> Maybe Int

-- | The list of attached files contains an error. The error will be
--   considered resolved when the list of files changes
PassportElementErrorSourceFiles :: PassportElementErrorSource
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PassportElementErrorSource.PassportElementErrorSource
instance GHC.Show.Show API.PassportElementErrorSource.PassportElementErrorSource
instance Data.Aeson.Types.ToJSON.ToJSON API.PassportElementErrorSource.PassportElementErrorSource
instance Data.Aeson.Types.FromJSON.FromJSON API.PassportElementErrorSource.PassportElementErrorSource

module API.PassportElementError

-- | Contains the description of an error in a Telegram Passport element
--   
--   <b>type</b> Type of the Telegram Passport element which has the error
--   
--   <b>message</b> Error message
--   
--   <b>source</b> Error source
data PassportElementError
PassportElementError :: Maybe PassportElementErrorSource -> Maybe String -> Maybe PassportElementType -> PassportElementError
[source] :: PassportElementError -> Maybe PassportElementErrorSource
[message] :: PassportElementError -> Maybe String
[_type] :: PassportElementError -> Maybe PassportElementType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PassportElementError.PassportElementError
instance GHC.Show.Show API.PassportElementError.PassportElementError
instance Data.Aeson.Types.ToJSON.ToJSON API.PassportElementError.PassportElementError
instance Data.Aeson.Types.FromJSON.FromJSON API.PassportElementError.PassportElementError

module API.InputPassportElementError

-- | Contains the description of an error in a Telegram Passport element;
--   for bots only
--   
--   <b>type</b> Type of Telegram Passport element that has the error
--   
--   <b>message</b> Error message
--   
--   <b>source</b> Error source
data InputPassportElementError
InputPassportElementError :: Maybe InputPassportElementErrorSource -> Maybe String -> Maybe PassportElementType -> InputPassportElementError
[source] :: InputPassportElementError -> Maybe InputPassportElementErrorSource
[message] :: InputPassportElementError -> Maybe String
[_type] :: InputPassportElementError -> Maybe PassportElementType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InputPassportElementError.InputPassportElementError
instance GHC.Show.Show API.InputPassportElementError.InputPassportElementError
instance Data.Aeson.Types.ToJSON.ToJSON API.InputPassportElementError.InputPassportElementError
instance Data.Aeson.Types.FromJSON.FromJSON API.InputPassportElementError.InputPassportElementError

module API.Functions.SendPassportAuthorizationForm

-- | Sends a Telegram Passport authorization form, effectively sharing data
--   with the service. This method must be called after
--   getPassportAuthorizationFormAvailableElements if some previously
--   available elements are going to be reused
--   
--   <b>autorization_form_id</b> Authorization form identifier
--   
--   <b>types</b> Types of Telegram Passport elements chosen by user to
--   complete the authorization form
data SendPassportAuthorizationForm
SendPassportAuthorizationForm :: Maybe [PassportElementType] -> Maybe Int -> SendPassportAuthorizationForm
[types] :: SendPassportAuthorizationForm -> Maybe [PassportElementType]
[autorization_form_id] :: SendPassportAuthorizationForm -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendPassportAuthorizationForm.SendPassportAuthorizationForm
instance GHC.Show.Show API.Functions.SendPassportAuthorizationForm.SendPassportAuthorizationForm
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendPassportAuthorizationForm.SendPassportAuthorizationForm
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendPassportAuthorizationForm.SendPassportAuthorizationForm

module API.Functions.GetPassportElement

-- | Returns one of the available Telegram Passport elements
--   
--   <b>type</b> Telegram Passport element type
--   
--   <b>password</b> Password of the current user
data GetPassportElement
GetPassportElement :: Maybe String -> Maybe PassportElementType -> GetPassportElement
[password] :: GetPassportElement -> Maybe String
[_type] :: GetPassportElement -> Maybe PassportElementType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetPassportElement.GetPassportElement
instance GHC.Show.Show API.Functions.GetPassportElement.GetPassportElement
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetPassportElement.GetPassportElement
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetPassportElement.GetPassportElement

module API.Functions.DeletePassportElement

-- | Deletes a Telegram Passport element
--   
--   <b>type</b> Element type
data DeletePassportElement
DeletePassportElement :: Maybe PassportElementType -> DeletePassportElement
[_type] :: DeletePassportElement -> Maybe PassportElementType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.DeletePassportElement.DeletePassportElement
instance GHC.Show.Show API.Functions.DeletePassportElement.DeletePassportElement
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.DeletePassportElement.DeletePassportElement
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.DeletePassportElement.DeletePassportElement

module API.EncryptedPassportElement

-- | Contains information about an encrypted Telegram Passport element; for
--   bots only
--   
--   <b>type</b> Type of Telegram Passport element
--   
--   <b>data</b> Encrypted JSON-encoded data about the user
--   
--   <b>front_side</b> The front side of an identity document
--   
--   <b>reverse_side</b> The reverse side of an identity document; may be
--   null
--   
--   <b>selfie</b> Selfie with the document; may be null
--   
--   <b>translation</b> List of files containing a certified English
--   translation of the document
--   
--   <b>files</b> List of attached files
--   
--   <b>value</b> Unencrypted data, phone number or email address
--   
--   <b>hash</b> Hash of the entire element
data EncryptedPassportElement
EncryptedPassportElement :: Maybe String -> Maybe String -> Maybe [DatedFile] -> Maybe [DatedFile] -> Maybe DatedFile -> Maybe DatedFile -> Maybe DatedFile -> Maybe String -> Maybe PassportElementType -> EncryptedPassportElement
[hash] :: EncryptedPassportElement -> Maybe String
[value] :: EncryptedPassportElement -> Maybe String
[files] :: EncryptedPassportElement -> Maybe [DatedFile]
[translation] :: EncryptedPassportElement -> Maybe [DatedFile]
[selfie] :: EncryptedPassportElement -> Maybe DatedFile
[reverse_side] :: EncryptedPassportElement -> Maybe DatedFile
[front_side] :: EncryptedPassportElement -> Maybe DatedFile
[_data] :: EncryptedPassportElement -> Maybe String
[_type] :: EncryptedPassportElement -> Maybe PassportElementType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.EncryptedPassportElement.EncryptedPassportElement
instance GHC.Show.Show API.EncryptedPassportElement.EncryptedPassportElement
instance Data.Aeson.Types.ToJSON.ToJSON API.EncryptedPassportElement.EncryptedPassportElement
instance Data.Aeson.Types.FromJSON.FromJSON API.EncryptedPassportElement.EncryptedPassportElement

module API.PassportElementType

-- | Contains the type of a Telegram Passport element
data PassportElementType

-- | A Telegram Passport element containing the user's personal details
PassportElementTypePersonalDetails :: PassportElementType

-- | A Telegram Passport element containing the user's passport
PassportElementTypePassport :: PassportElementType

-- | A Telegram Passport element containing the user's driver license
PassportElementTypeDriverLicense :: PassportElementType

-- | A Telegram Passport element containing the user's identity card
PassportElementTypeIdentityCard :: PassportElementType

-- | A Telegram Passport element containing the user's internal passport
PassportElementTypeInternalPassport :: PassportElementType

-- | A Telegram Passport element containing the user's address
PassportElementTypeAddress :: PassportElementType

-- | A Telegram Passport element containing the user's utility bill
PassportElementTypeUtilityBill :: PassportElementType

-- | A Telegram Passport element containing the user's bank statement
PassportElementTypeBankStatement :: PassportElementType

-- | A Telegram Passport element containing the user's rental agreement
PassportElementTypeRentalAgreement :: PassportElementType

-- | A Telegram Passport element containing the registration page of the
--   user's passport
PassportElementTypePassportRegistration :: PassportElementType

-- | A Telegram Passport element containing the user's temporary
--   registration
PassportElementTypeTemporaryRegistration :: PassportElementType

-- | A Telegram Passport element containing the user's phone number
PassportElementTypePhoneNumber :: PassportElementType

-- | A Telegram Passport element containing the user's email address
PassportElementTypeEmailAddress :: PassportElementType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PassportElementType.PassportElementType
instance GHC.Show.Show API.PassportElementType.PassportElementType
instance Data.Aeson.Types.ToJSON.ToJSON API.PassportElementType.PassportElementType
instance Data.Aeson.Types.FromJSON.FromJSON API.PassportElementType.PassportElementType

module API.PassportElements

-- | Contains information about saved Telegram Passport elements
--   
--   <b>elements</b> Telegram Passport elements
data PassportElements
PassportElements :: Maybe [PassportElement] -> PassportElements
[elements] :: PassportElements -> Maybe [PassportElement]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PassportElements.PassportElements
instance GHC.Show.Show API.PassportElements.PassportElements
instance Data.Aeson.Types.ToJSON.ToJSON API.PassportElements.PassportElements
instance Data.Aeson.Types.FromJSON.FromJSON API.PassportElements.PassportElements

module API.PassportElementsWithErrors

-- | Contains information about a Telegram Passport elements and
--   corresponding errors
--   
--   <b>elements</b> Telegram Passport elements
--   
--   <b>errors</b> Errors in the elements that are already available
data PassportElementsWithErrors
PassportElementsWithErrors :: Maybe [PassportElementError] -> Maybe [PassportElement] -> PassportElementsWithErrors
[errors] :: PassportElementsWithErrors -> Maybe [PassportElementError]
[elements] :: PassportElementsWithErrors -> Maybe [PassportElement]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PassportElementsWithErrors.PassportElementsWithErrors
instance GHC.Show.Show API.PassportElementsWithErrors.PassportElementsWithErrors
instance Data.Aeson.Types.ToJSON.ToJSON API.PassportElementsWithErrors.PassportElementsWithErrors
instance Data.Aeson.Types.FromJSON.FromJSON API.PassportElementsWithErrors.PassportElementsWithErrors

module API.PassportAuthorizationForm

-- | Contains information about a Telegram Passport authorization form that
--   was requested
--   
--   <b>id</b> Unique identifier of the authorization form
--   
--   <b>required_elements</b> Information about the Telegram Passport
--   elements that must be provided to complete the form
--   
--   <b>privacy_policy_url</b> URL for the privacy policy of the service;
--   may be empty
data PassportAuthorizationForm
PassportAuthorizationForm :: Maybe String -> Maybe [PassportRequiredElement] -> Maybe Int -> PassportAuthorizationForm
[privacy_policy_url] :: PassportAuthorizationForm -> Maybe String
[required_elements] :: PassportAuthorizationForm -> Maybe [PassportRequiredElement]
[_id] :: PassportAuthorizationForm -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PassportAuthorizationForm.PassportAuthorizationForm
instance GHC.Show.Show API.PassportAuthorizationForm.PassportAuthorizationForm
instance Data.Aeson.Types.ToJSON.ToJSON API.PassportAuthorizationForm.PassportAuthorizationForm
instance Data.Aeson.Types.FromJSON.FromJSON API.PassportAuthorizationForm.PassportAuthorizationForm

module API.PassportRequiredElement

-- | Contains a description of the required Telegram Passport element that
--   was requested by a service
--   
--   <b>suitable_elements</b> List of Telegram Passport elements any of
--   which is enough to provide
data PassportRequiredElement
PassportRequiredElement :: Maybe [PassportSuitableElement] -> PassportRequiredElement
[suitable_elements] :: PassportRequiredElement -> Maybe [PassportSuitableElement]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PassportRequiredElement.PassportRequiredElement
instance GHC.Show.Show API.PassportRequiredElement.PassportRequiredElement
instance Data.Aeson.Types.ToJSON.ToJSON API.PassportRequiredElement.PassportRequiredElement
instance Data.Aeson.Types.FromJSON.FromJSON API.PassportRequiredElement.PassportRequiredElement

module API.PassportSuitableElement

-- | Contains information about a Telegram Passport element that was
--   requested by a service
--   
--   <b>type</b> Type of the element
--   
--   <b>is_selfie_required</b> True, if a selfie is required with the
--   identity document
--   
--   <b>is_translation_required</b> True, if a certified English
--   translation is required with the document
--   
--   <b>is_native_name_required</b> True, if personal details must include
--   the user's name in the language of their country of residence
data PassportSuitableElement
PassportSuitableElement :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe PassportElementType -> PassportSuitableElement
[is_native_name_required] :: PassportSuitableElement -> Maybe Bool
[is_translation_required] :: PassportSuitableElement -> Maybe Bool
[is_selfie_required] :: PassportSuitableElement -> Maybe Bool
[_type] :: PassportSuitableElement -> Maybe PassportElementType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PassportSuitableElement.PassportSuitableElement
instance GHC.Show.Show API.PassportSuitableElement.PassportSuitableElement
instance Data.Aeson.Types.ToJSON.ToJSON API.PassportSuitableElement.PassportSuitableElement
instance Data.Aeson.Types.FromJSON.FromJSON API.PassportSuitableElement.PassportSuitableElement

module API.PasswordState

-- | Represents the current state of 2-step verification
--   
--   <b>has_password</b> True, if a 2-step verification password is set
--   
--   <b>password_hint</b> Hint for the password; may be empty
--   
--   <b>has_recovery_email_address</b> True, if a recovery email is set
--   
--   <b>has_passport_data</b> True, if some Telegram Passport elements were
--   saved
--   
--   <b>recovery_email_address_code_info</b> Information about the recovery
--   email address to which the confirmation email was sent; may be null
--   
--   <b>pending_reset_date</b> If not 0, point in time (Unix timestamp)
--   after which the password can be reset immediately using resetPassword
data PasswordState
PasswordState :: Maybe Int -> Maybe EmailAddressAuthenticationCodeInfo -> Maybe Bool -> Maybe Bool -> Maybe String -> Maybe Bool -> PasswordState
[pending_reset_date] :: PasswordState -> Maybe Int
[recovery_email_address_code_info] :: PasswordState -> Maybe EmailAddressAuthenticationCodeInfo
[has_passport_data] :: PasswordState -> Maybe Bool
[has_recovery_email_address] :: PasswordState -> Maybe Bool
[password_hint] :: PasswordState -> Maybe String
[has_password] :: PasswordState -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PasswordState.PasswordState
instance GHC.Show.Show API.PasswordState.PasswordState
instance Data.Aeson.Types.ToJSON.ToJSON API.PasswordState.PasswordState
instance Data.Aeson.Types.FromJSON.FromJSON API.PasswordState.PasswordState

module API.Functions.GetPaymentForm

-- | Returns an invoice payment form. This method must be called when the
--   user presses inlineKeyboardButtonBuy
--   
--   <b>chat_id</b> Chat identifier of the Invoice message
--   
--   <b>message_id</b> Message identifier
--   
--   <b>theme</b> Preferred payment form theme; pass null to use the
--   default theme
data GetPaymentForm
GetPaymentForm :: Maybe PaymentFormTheme -> Maybe Int -> Maybe Int -> GetPaymentForm
[theme] :: GetPaymentForm -> Maybe PaymentFormTheme
[message_id] :: GetPaymentForm -> Maybe Int
[chat_id] :: GetPaymentForm -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetPaymentForm.GetPaymentForm
instance GHC.Show.Show API.Functions.GetPaymentForm.GetPaymentForm
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetPaymentForm.GetPaymentForm
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetPaymentForm.GetPaymentForm

module API.PaymentFormTheme

-- | Theme colors for a payment form
--   
--   <b>background_color</b> A color of the payment form background in the
--   RGB24 format
--   
--   <b>text_color</b> A color of text in the RGB24 format
--   
--   <b>hint_color</b> A color of hints in the RGB24 format
--   
--   <b>link_color</b> A color of links in the RGB24 format
--   
--   <b>button_color</b> A color of thebuttons in the RGB24 format
--   
--   <b>button_text_color</b> A color of text on the buttons in the RGB24
--   format
data PaymentFormTheme
PaymentFormTheme :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> PaymentFormTheme
[button_text_color] :: PaymentFormTheme -> Maybe Int
[button_color] :: PaymentFormTheme -> Maybe Int
[link_color] :: PaymentFormTheme -> Maybe Int
[hint_color] :: PaymentFormTheme -> Maybe Int
[text_color] :: PaymentFormTheme -> Maybe Int
[background_color] :: PaymentFormTheme -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PaymentFormTheme.PaymentFormTheme
instance GHC.Show.Show API.PaymentFormTheme.PaymentFormTheme
instance Data.Aeson.Types.ToJSON.ToJSON API.PaymentFormTheme.PaymentFormTheme
instance Data.Aeson.Types.FromJSON.FromJSON API.PaymentFormTheme.PaymentFormTheme

module API.PaymentResult

-- | Contains the result of a payment request
--   
--   <b>success</b> True, if the payment request was successful; otherwise
--   the verification_url will be non-empty
--   
--   <b>verification_url</b> URL for additional payment credentials
--   verification
data PaymentResult
PaymentResult :: Maybe String -> Maybe Bool -> PaymentResult
[verification_url] :: PaymentResult -> Maybe String
[success] :: PaymentResult -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PaymentResult.PaymentResult
instance GHC.Show.Show API.PaymentResult.PaymentResult
instance Data.Aeson.Types.ToJSON.ToJSON API.PaymentResult.PaymentResult
instance Data.Aeson.Types.FromJSON.FromJSON API.PaymentResult.PaymentResult

module API.PaymentsProviderStripe

-- | Stripe payment provider
--   
--   <b>publishable_key</b> Stripe API publishable key
--   
--   <b>need_country</b> True, if the user country must be provided
--   
--   <b>need_postal_code</b> True, if the user ZIP/postal code must be
--   provided
--   
--   <b>need_cardholder_name</b> True, if the cardholder name must be
--   provided
data PaymentsProviderStripe
PaymentsProviderStripe :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe String -> PaymentsProviderStripe
[need_cardholder_name] :: PaymentsProviderStripe -> Maybe Bool
[need_postal_code] :: PaymentsProviderStripe -> Maybe Bool
[need_country] :: PaymentsProviderStripe -> Maybe Bool
[publishable_key] :: PaymentsProviderStripe -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PaymentsProviderStripe.PaymentsProviderStripe
instance GHC.Show.Show API.PaymentsProviderStripe.PaymentsProviderStripe
instance Data.Aeson.Types.ToJSON.ToJSON API.PaymentsProviderStripe.PaymentsProviderStripe
instance Data.Aeson.Types.FromJSON.FromJSON API.PaymentsProviderStripe.PaymentsProviderStripe

module API.InputPassportElement

-- | Contains information about a Telegram Passport element to be saved
data InputPassportElement

-- | A Telegram Passport element to be saved containing the user's personal
--   details
--   
--   <b>personal_details</b> Personal details of the user
InputPassportElementPersonalDetails :: Maybe PersonalDetails -> InputPassportElement
[personal_details] :: InputPassportElement -> Maybe PersonalDetails

-- | A Telegram Passport element to be saved containing the user's passport
--   
--   <b>passport</b> The passport to be saved
InputPassportElementPassport :: Maybe InputIdentityDocument -> InputPassportElement
[passport] :: InputPassportElement -> Maybe InputIdentityDocument

-- | A Telegram Passport element to be saved containing the user's driver
--   license
--   
--   <b>driver_license</b> The driver license to be saved
InputPassportElementDriverLicense :: Maybe InputIdentityDocument -> InputPassportElement
[driver_license] :: InputPassportElement -> Maybe InputIdentityDocument

-- | A Telegram Passport element to be saved containing the user's identity
--   card
--   
--   <b>identity_card</b> The identity card to be saved
InputPassportElementIdentityCard :: Maybe InputIdentityDocument -> InputPassportElement
[identity_card] :: InputPassportElement -> Maybe InputIdentityDocument

-- | A Telegram Passport element to be saved containing the user's internal
--   passport
--   
--   <b>internal_passport</b> The internal passport to be saved
InputPassportElementInternalPassport :: Maybe InputIdentityDocument -> InputPassportElement
[internal_passport] :: InputPassportElement -> Maybe InputIdentityDocument

-- | A Telegram Passport element to be saved containing the user's address
--   
--   <b>address</b> The address to be saved
InputPassportElementAddress :: Maybe Address -> InputPassportElement
[address] :: InputPassportElement -> Maybe Address

-- | A Telegram Passport element to be saved containing the user's utility
--   bill
--   
--   <b>utility_bill</b> The utility bill to be saved
InputPassportElementUtilityBill :: Maybe InputPersonalDocument -> InputPassportElement
[utility_bill] :: InputPassportElement -> Maybe InputPersonalDocument

-- | A Telegram Passport element to be saved containing the user's bank
--   statement
--   
--   <b>bank_statement</b> The bank statement to be saved
InputPassportElementBankStatement :: Maybe InputPersonalDocument -> InputPassportElement
[bank_statement] :: InputPassportElement -> Maybe InputPersonalDocument

-- | A Telegram Passport element to be saved containing the user's rental
--   agreement
--   
--   <b>rental_agreement</b> The rental agreement to be saved
InputPassportElementRentalAgreement :: Maybe InputPersonalDocument -> InputPassportElement
[rental_agreement] :: InputPassportElement -> Maybe InputPersonalDocument

-- | A Telegram Passport element to be saved containing the user's passport
--   registration
--   
--   <b>passport_registration</b> The passport registration page to be
--   saved
InputPassportElementPassportRegistration :: Maybe InputPersonalDocument -> InputPassportElement
[passport_registration] :: InputPassportElement -> Maybe InputPersonalDocument

-- | A Telegram Passport element to be saved containing the user's
--   temporary registration
--   
--   <b>temporary_registration</b> The temporary registration document to
--   be saved
InputPassportElementTemporaryRegistration :: Maybe InputPersonalDocument -> InputPassportElement
[temporary_registration] :: InputPassportElement -> Maybe InputPersonalDocument

-- | A Telegram Passport element to be saved containing the user's phone
--   number
--   
--   <b>phone_number</b> The phone number to be saved
InputPassportElementPhoneNumber :: Maybe String -> InputPassportElement
[phone_number] :: InputPassportElement -> Maybe String

-- | A Telegram Passport element to be saved containing the user's email
--   address
--   
--   <b>email_address</b> The email address to be saved
InputPassportElementEmailAddress :: Maybe String -> InputPassportElement
[email_address] :: InputPassportElement -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InputPassportElement.InputPassportElement
instance GHC.Show.Show API.InputPassportElement.InputPassportElement
instance Data.Aeson.Types.ToJSON.ToJSON API.InputPassportElement.InputPassportElement
instance Data.Aeson.Types.FromJSON.FromJSON API.InputPassportElement.InputPassportElement

module API.PersonalDetails

-- | Contains the user's personal details
--   
--   <b>first_name</b> First name of the user written in English; 1-255
--   characters
--   
--   <b>middle_name</b> Middle name of the user written in English; 0-255
--   characters
--   
--   <b>last_name</b> Last name of the user written in English; 1-255
--   characters
--   
--   <b>native_first_name</b> Native first name of the user; 1-255
--   characters
--   
--   <b>native_middle_name</b> Native middle name of the user; 0-255
--   characters
--   
--   <b>native_last_name</b> Native last name of the user; 1-255 characters
--   
--   <b>birthdate</b> Birthdate of the user
--   
--   <b>gender</b> Gender of the user, "male" or "female"
--   
--   <b>country_code</b> A two-letter ISO 3166-1 alpha-2 country code of
--   the user's country
--   
--   <b>residence_country_code</b> A two-letter ISO 3166-1 alpha-2 country
--   code of the user's residence country
data PersonalDetails
PersonalDetails :: Maybe String -> Maybe String -> Maybe String -> Maybe Date -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> PersonalDetails
[residence_country_code] :: PersonalDetails -> Maybe String
[country_code] :: PersonalDetails -> Maybe String
[gender] :: PersonalDetails -> Maybe String
[birthdate] :: PersonalDetails -> Maybe Date
[native_last_name] :: PersonalDetails -> Maybe String
[native_middle_name] :: PersonalDetails -> Maybe String
[native_first_name] :: PersonalDetails -> Maybe String
[last_name] :: PersonalDetails -> Maybe String
[middle_name] :: PersonalDetails -> Maybe String
[first_name] :: PersonalDetails -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PersonalDetails.PersonalDetails
instance GHC.Show.Show API.PersonalDetails.PersonalDetails
instance Data.Aeson.Types.ToJSON.ToJSON API.PersonalDetails.PersonalDetails
instance Data.Aeson.Types.FromJSON.FromJSON API.PersonalDetails.PersonalDetails

module API.PassportElement

-- | Contains information about a Telegram Passport element
data PassportElement

-- | A Telegram Passport element containing the user's personal details
--   
--   <b>personal_details</b> Personal details of the user
PassportElementPersonalDetails :: Maybe PersonalDetails -> PassportElement
[personal_details] :: PassportElement -> Maybe PersonalDetails

-- | A Telegram Passport element containing the user's passport
--   
--   <b>passport</b> Passport
PassportElementPassport :: Maybe IdentityDocument -> PassportElement
[passport] :: PassportElement -> Maybe IdentityDocument

-- | A Telegram Passport element containing the user's driver license
--   
--   <b>driver_license</b> Driver license
PassportElementDriverLicense :: Maybe IdentityDocument -> PassportElement
[driver_license] :: PassportElement -> Maybe IdentityDocument

-- | A Telegram Passport element containing the user's identity card
--   
--   <b>identity_card</b> Identity card
PassportElementIdentityCard :: Maybe IdentityDocument -> PassportElement
[identity_card] :: PassportElement -> Maybe IdentityDocument

-- | A Telegram Passport element containing the user's internal passport
--   
--   <b>internal_passport</b> Internal passport
PassportElementInternalPassport :: Maybe IdentityDocument -> PassportElement
[internal_passport] :: PassportElement -> Maybe IdentityDocument

-- | A Telegram Passport element containing the user's address
--   
--   <b>address</b> Address
PassportElementAddress :: Maybe Address -> PassportElement
[address] :: PassportElement -> Maybe Address

-- | A Telegram Passport element containing the user's utility bill
--   
--   <b>utility_bill</b> Utility bill
PassportElementUtilityBill :: Maybe PersonalDocument -> PassportElement
[utility_bill] :: PassportElement -> Maybe PersonalDocument

-- | A Telegram Passport element containing the user's bank statement
--   
--   <b>bank_statement</b> Bank statement
PassportElementBankStatement :: Maybe PersonalDocument -> PassportElement
[bank_statement] :: PassportElement -> Maybe PersonalDocument

-- | A Telegram Passport element containing the user's rental agreement
--   
--   <b>rental_agreement</b> Rental agreement
PassportElementRentalAgreement :: Maybe PersonalDocument -> PassportElement
[rental_agreement] :: PassportElement -> Maybe PersonalDocument

-- | A Telegram Passport element containing the user's passport
--   registration pages
--   
--   <b>passport_registration</b> Passport registration pages
PassportElementPassportRegistration :: Maybe PersonalDocument -> PassportElement
[passport_registration] :: PassportElement -> Maybe PersonalDocument

-- | A Telegram Passport element containing the user's temporary
--   registration
--   
--   <b>temporary_registration</b> Temporary registration
PassportElementTemporaryRegistration :: Maybe PersonalDocument -> PassportElement
[temporary_registration] :: PassportElement -> Maybe PersonalDocument

-- | A Telegram Passport element containing the user's phone number
--   
--   <b>phone_number</b> Phone number
PassportElementPhoneNumber :: Maybe String -> PassportElement
[phone_number] :: PassportElement -> Maybe String

-- | A Telegram Passport element containing the user's email address
--   
--   <b>email_address</b> Email address
PassportElementEmailAddress :: Maybe String -> PassportElement
[email_address] :: PassportElement -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PassportElement.PassportElement
instance GHC.Show.Show API.PassportElement.PassportElement
instance Data.Aeson.Types.ToJSON.ToJSON API.PassportElement.PassportElement
instance Data.Aeson.Types.FromJSON.FromJSON API.PassportElement.PassportElement

module API.PersonalDocument

-- | A personal document, containing some information about a user
--   
--   <b>files</b> List of files containing the pages of the document
--   
--   <b>translation</b> List of files containing a certified English
--   translation of the document
data PersonalDocument
PersonalDocument :: Maybe [DatedFile] -> Maybe [DatedFile] -> PersonalDocument
[translation] :: PersonalDocument -> Maybe [DatedFile]
[files] :: PersonalDocument -> Maybe [DatedFile]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PersonalDocument.PersonalDocument
instance GHC.Show.Show API.PersonalDocument.PersonalDocument
instance Data.Aeson.Types.ToJSON.ToJSON API.PersonalDocument.PersonalDocument
instance Data.Aeson.Types.FromJSON.FromJSON API.PersonalDocument.PersonalDocument

module API.Functions.SetAuthenticationPhoneNumber

-- | Sets the phone number of the user and sends an authentication code to
--   the user. Works only when the current authorization state is
--   authorizationStateWaitPhoneNumber,
--   
--   <ul>
--   <li>or if there is no pending authentication query and the current
--   authorization state is authorizationStateWaitCode,
--   authorizationStateWaitRegistration, or
--   authorizationStateWaitPassword</li>
--   </ul>
--   
--   <b>phone_number</b> The phone number of the user, in international
--   format
--   
--   <b>settings</b> Settings for the authentication of the user's phone
--   number; pass null to use default settings
data SetAuthenticationPhoneNumber
SetAuthenticationPhoneNumber :: Maybe PhoneNumberAuthenticationSettings -> Maybe String -> SetAuthenticationPhoneNumber
[settings] :: SetAuthenticationPhoneNumber -> Maybe PhoneNumberAuthenticationSettings
[phone_number] :: SetAuthenticationPhoneNumber -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetAuthenticationPhoneNumber.SetAuthenticationPhoneNumber
instance GHC.Show.Show API.Functions.SetAuthenticationPhoneNumber.SetAuthenticationPhoneNumber
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetAuthenticationPhoneNumber.SetAuthenticationPhoneNumber
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetAuthenticationPhoneNumber.SetAuthenticationPhoneNumber

module API.Functions.SendPhoneNumberVerificationCode

-- | Sends a code to verify a phone number to be added to a user's Telegram
--   Passport
--   
--   <b>phone_number</b> The phone number of the user, in international
--   format
--   
--   <b>settings</b> Settings for the authentication of the user's phone
--   number; pass null to use default settings
data SendPhoneNumberVerificationCode
SendPhoneNumberVerificationCode :: Maybe PhoneNumberAuthenticationSettings -> Maybe String -> SendPhoneNumberVerificationCode
[settings] :: SendPhoneNumberVerificationCode -> Maybe PhoneNumberAuthenticationSettings
[phone_number] :: SendPhoneNumberVerificationCode -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendPhoneNumberVerificationCode.SendPhoneNumberVerificationCode
instance GHC.Show.Show API.Functions.SendPhoneNumberVerificationCode.SendPhoneNumberVerificationCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendPhoneNumberVerificationCode.SendPhoneNumberVerificationCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendPhoneNumberVerificationCode.SendPhoneNumberVerificationCode

module API.Functions.SendPhoneNumberConfirmationCode

-- | Sends phone number confirmation code to handle links of the type
--   internalLinkTypePhoneNumberConfirmation
--   
--   <b>hash</b> Hash value from the link
--   
--   <b>phone_number</b> Phone number value from the link
--   
--   <b>settings</b> Settings for the authentication of the user's phone
--   number; pass null to use default settings
data SendPhoneNumberConfirmationCode
SendPhoneNumberConfirmationCode :: Maybe PhoneNumberAuthenticationSettings -> Maybe String -> Maybe String -> SendPhoneNumberConfirmationCode
[settings] :: SendPhoneNumberConfirmationCode -> Maybe PhoneNumberAuthenticationSettings
[phone_number] :: SendPhoneNumberConfirmationCode -> Maybe String
[hash] :: SendPhoneNumberConfirmationCode -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendPhoneNumberConfirmationCode.SendPhoneNumberConfirmationCode
instance GHC.Show.Show API.Functions.SendPhoneNumberConfirmationCode.SendPhoneNumberConfirmationCode
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendPhoneNumberConfirmationCode.SendPhoneNumberConfirmationCode
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendPhoneNumberConfirmationCode.SendPhoneNumberConfirmationCode

module API.Functions.ChangePhoneNumber

-- | Changes the phone number of the user and sends an authentication code
--   to the user's new phone number. On success, returns information about
--   the sent code
--   
--   <b>phone_number</b> The new phone number of the user in international
--   format
--   
--   <b>settings</b> Settings for the authentication of the user's phone
--   number; pass null to use default settings
data ChangePhoneNumber
ChangePhoneNumber :: Maybe PhoneNumberAuthenticationSettings -> Maybe String -> ChangePhoneNumber
[settings] :: ChangePhoneNumber -> Maybe PhoneNumberAuthenticationSettings
[phone_number] :: ChangePhoneNumber -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ChangePhoneNumber.ChangePhoneNumber
instance GHC.Show.Show API.Functions.ChangePhoneNumber.ChangePhoneNumber
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ChangePhoneNumber.ChangePhoneNumber
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ChangePhoneNumber.ChangePhoneNumber

module API.PhoneNumberAuthenticationSettings

-- | Contains settings for the authentication of the user's phone number
--   
--   <b>allow_flash_call</b> Pass true if the authentication code may be
--   sent via flash call to the specified phone number
--   
--   <b>is_current_phone_number</b> Pass true if the authenticated phone
--   number is used on the current device
--   
--   <b>allow_sms_retriever_api</b> For official applications only. True,
--   if the application can use Android SMS Retriever API (requires Google
--   Play Services &gt;= 10.2) to automatically receive the authentication
--   code from the SMS. See
--   <a>https://developers.google.com/identity/sms-retriever/</a> for more
--   details
data PhoneNumberAuthenticationSettings
PhoneNumberAuthenticationSettings :: Maybe Bool -> Maybe Bool -> Maybe Bool -> PhoneNumberAuthenticationSettings
[allow_sms_retriever_api] :: PhoneNumberAuthenticationSettings -> Maybe Bool
[is_current_phone_number] :: PhoneNumberAuthenticationSettings -> Maybe Bool
[allow_flash_call] :: PhoneNumberAuthenticationSettings -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PhoneNumberAuthenticationSettings.PhoneNumberAuthenticationSettings
instance GHC.Show.Show API.PhoneNumberAuthenticationSettings.PhoneNumberAuthenticationSettings
instance Data.Aeson.Types.ToJSON.ToJSON API.PhoneNumberAuthenticationSettings.PhoneNumberAuthenticationSettings
instance Data.Aeson.Types.FromJSON.FromJSON API.PhoneNumberAuthenticationSettings.PhoneNumberAuthenticationSettings

module API.PhoneNumberInfo

-- | Contains information about a phone number
--   
--   <b>country</b> Information about the country to which the phone number
--   belongs; may be null
--   
--   <b>country_calling_code</b> The part of the phone number denoting
--   country calling code or its part
--   
--   <b>formatted_phone_number</b> The phone number without country calling
--   code formatted accordingly to local rules. Expected digits are
--   returned as <a>-</a>, but even more digits might be entered by the
--   user
data PhoneNumberInfo
PhoneNumberInfo :: Maybe String -> Maybe String -> Maybe CountryInfo -> PhoneNumberInfo
[formatted_phone_number] :: PhoneNumberInfo -> Maybe String
[country_calling_code] :: PhoneNumberInfo -> Maybe String
[country] :: PhoneNumberInfo -> Maybe CountryInfo
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PhoneNumberInfo.PhoneNumberInfo
instance GHC.Show.Show API.PhoneNumberInfo.PhoneNumberInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.PhoneNumberInfo.PhoneNumberInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.PhoneNumberInfo.PhoneNumberInfo

module API.PageBlockRelatedArticle

-- | Contains information about a related article
--   
--   <b>url</b> Related article URL
--   
--   <b>title</b> Article title; may be empty
--   
--   <b>param_description</b> Article description; may be empty
--   
--   <b>photo</b> Article photo; may be null
--   
--   <b>author</b> Article author; may be empty
--   
--   <b>publish_date</b> Point in time (Unix timestamp) when the article
--   was published; 0 if unknown
data PageBlockRelatedArticle
PageBlockRelatedArticle :: Maybe Int -> Maybe String -> Maybe Photo -> Maybe String -> Maybe String -> Maybe String -> PageBlockRelatedArticle
[publish_date] :: PageBlockRelatedArticle -> Maybe Int
[author] :: PageBlockRelatedArticle -> Maybe String
[photo] :: PageBlockRelatedArticle -> Maybe Photo
[description] :: PageBlockRelatedArticle -> Maybe String
[title] :: PageBlockRelatedArticle -> Maybe String
[url] :: PageBlockRelatedArticle -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PageBlockRelatedArticle.PageBlockRelatedArticle
instance GHC.Show.Show API.PageBlockRelatedArticle.PageBlockRelatedArticle
instance Data.Aeson.Types.ToJSON.ToJSON API.PageBlockRelatedArticle.PageBlockRelatedArticle
instance Data.Aeson.Types.FromJSON.FromJSON API.PageBlockRelatedArticle.PageBlockRelatedArticle

module API.Game

-- | Describes a game
--   
--   <b>id</b> Game ID
--   
--   <b>short_name</b> Game short name. To share a game use the URL
--   <a>https://t.me/{bot_username}?game={game_short_name}</a>
--   
--   <b>title</b> Game title
--   
--   <b>text</b> Game text, usually containing scoreboards for a game
--   
--   <b>param_description</b> Game description
--   
--   <b>photo</b> Game photo
--   
--   <b>animation</b> Game animation; may be null
data Game
Game :: Maybe Animation -> Maybe Photo -> Maybe String -> Maybe FormattedText -> Maybe String -> Maybe String -> Maybe Int -> Game
[animation] :: Game -> Maybe Animation
[photo] :: Game -> Maybe Photo
[description] :: Game -> Maybe String
[text] :: Game -> Maybe FormattedText
[title] :: Game -> Maybe String
[short_name] :: Game -> Maybe String
[_id] :: Game -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Game.Game
instance GHC.Show.Show API.Game.Game
instance Data.Aeson.Types.ToJSON.ToJSON API.Game.Game
instance Data.Aeson.Types.FromJSON.FromJSON API.Game.Game

module API.Photo

-- | Describes a photo
--   
--   <b>has_stickers</b> True, if stickers were added to the photo. The
--   list of corresponding sticker sets can be received using
--   getAttachedStickerSets
--   
--   <b>minithumbnail</b> Photo minithumbnail; may be null
--   
--   <b>sizes</b> Available variants of the photo, in different sizes
data Photo
Photo :: Maybe [PhotoSize] -> Maybe Minithumbnail -> Maybe Bool -> Photo
[sizes] :: Photo -> Maybe [PhotoSize]
[minithumbnail] :: Photo -> Maybe Minithumbnail
[has_stickers] :: Photo -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Photo.Photo
instance GHC.Show.Show API.Photo.Photo
instance Data.Aeson.Types.ToJSON.ToJSON API.Photo.Photo
instance Data.Aeson.Types.FromJSON.FromJSON API.Photo.Photo

module API.ChatPhoto

-- | Describes a chat or user profile photo
--   
--   <b>id</b> Unique photo identifier
--   
--   <b>added_date</b> Point in time (Unix timestamp) when the photo has
--   been added
--   
--   <b>minithumbnail</b> Photo minithumbnail; may be null
--   
--   <b>sizes</b> Available variants of the photo in JPEG format, in
--   different size
--   
--   <b>animation</b> Animated variant of the photo in MPEG4 format; may be
--   null
data ChatPhoto
ChatPhoto :: Maybe AnimatedChatPhoto -> Maybe [PhotoSize] -> Maybe Minithumbnail -> Maybe Int -> Maybe Int -> ChatPhoto
[animation] :: ChatPhoto -> Maybe AnimatedChatPhoto
[sizes] :: ChatPhoto -> Maybe [PhotoSize]
[minithumbnail] :: ChatPhoto -> Maybe Minithumbnail
[added_date] :: ChatPhoto -> Maybe Int
[_id] :: ChatPhoto -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatPhoto.ChatPhoto
instance GHC.Show.Show API.ChatPhoto.ChatPhoto
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatPhoto.ChatPhoto
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatPhoto.ChatPhoto

module API.PhotoSize

-- | Describes an image in JPEG format
--   
--   <b>type</b> Image type (see
--   <a>https://core.telegram.org/constructor/photoSize)</a>
--   
--   <b>photo</b> Information about the image file
--   
--   <b>width</b> Image width
--   
--   <b>height</b> Image height
--   
--   <b>progressive_sizes</b> Sizes of progressive JPEG file prefixes,
--   which can be used to preliminarily show the image; in bytes
data PhotoSize
PhotoSize :: Maybe [Int] -> Maybe Int -> Maybe Int -> Maybe File -> Maybe String -> PhotoSize
[progressive_sizes] :: PhotoSize -> Maybe [Int]
[height] :: PhotoSize -> Maybe Int
[width] :: PhotoSize -> Maybe Int
[photo] :: PhotoSize -> Maybe File
[_type] :: PhotoSize -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PhotoSize.PhotoSize
instance GHC.Show.Show API.PhotoSize.PhotoSize
instance Data.Aeson.Types.ToJSON.ToJSON API.PhotoSize.PhotoSize
instance Data.Aeson.Types.FromJSON.FromJSON API.PhotoSize.PhotoSize

module API.Point

-- | A point on a Cartesian plane
--   
--   <b>x</b> The point's first coordinate
--   
--   <b>y</b> The point's second coordinate
data Point
Point :: Maybe Float -> Maybe Float -> Point
[y] :: Point -> Maybe Float
[x] :: Point -> Maybe Float
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Point.Point
instance GHC.Show.Show API.Point.Point
instance Data.Aeson.Types.ToJSON.ToJSON API.Point.Point
instance Data.Aeson.Types.FromJSON.FromJSON API.Point.Point

module API.PollOption

-- | Describes one answer option of a poll
--   
--   <b>text</b> Option text; 1-100 characters
--   
--   <b>voter_count</b> Number of voters for this option, available only
--   for closed or voted polls
--   
--   <b>vote_percentage</b> The percentage of votes for this option; 0-100
--   
--   <b>is_chosen</b> True, if the option was chosen by the user
--   
--   <b>is_being_chosen</b> True, if the option is being chosen by a
--   pending setPollAnswer request
data PollOption
PollOption :: Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe String -> PollOption
[is_being_chosen] :: PollOption -> Maybe Bool
[is_chosen] :: PollOption -> Maybe Bool
[vote_percentage] :: PollOption -> Maybe Int
[voter_count] :: PollOption -> Maybe Int
[text] :: PollOption -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PollOption.PollOption
instance GHC.Show.Show API.PollOption.PollOption
instance Data.Aeson.Types.ToJSON.ToJSON API.PollOption.PollOption
instance Data.Aeson.Types.FromJSON.FromJSON API.PollOption.PollOption

module API.Poll

-- | Describes a poll
--   
--   <b>id</b> Unique poll identifier
--   
--   <b>question</b> Poll question; 1-300 characters
--   
--   <b>options</b> List of poll answer options
--   
--   <b>total_voter_count</b> Total number of voters, participating in the
--   poll
--   
--   <b>recent_voter_user_ids</b> User identifiers of recent voters, if the
--   poll is non-anonymous
--   
--   <b>is_anonymous</b> True, if the poll is anonymous
--   
--   <b>type</b> Type of the poll
--   
--   <b>open_period</b> Amount of time the poll will be active after
--   creation, in seconds
--   
--   <b>close_date</b> Point in time (Unix timestamp) when the poll will be
--   automatically closed
--   
--   <b>is_closed</b> True, if the poll is closed
data Poll
Poll :: Maybe Bool -> Maybe Int -> Maybe Int -> Maybe PollType -> Maybe Bool -> Maybe [Int] -> Maybe Int -> Maybe [PollOption] -> Maybe String -> Maybe Int -> Poll
[is_closed] :: Poll -> Maybe Bool
[close_date] :: Poll -> Maybe Int
[open_period] :: Poll -> Maybe Int
[_type] :: Poll -> Maybe PollType
[is_anonymous] :: Poll -> Maybe Bool
[recent_voter_user_ids] :: Poll -> Maybe [Int]
[total_voter_count] :: Poll -> Maybe Int
[options] :: Poll -> Maybe [PollOption]
[question] :: Poll -> Maybe String
[_id] :: Poll -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Poll.Poll
instance GHC.Show.Show API.Poll.Poll
instance Data.Aeson.Types.ToJSON.ToJSON API.Poll.Poll
instance Data.Aeson.Types.FromJSON.FromJSON API.Poll.Poll

module API.PollType

-- | Describes the type of a poll
data PollType

-- | A regular poll
--   
--   <b>allow_multiple_answers</b> True, if multiple answer options can be
--   chosen simultaneously
PollTypeRegular :: Maybe Bool -> PollType
[allow_multiple_answers] :: PollType -> Maybe Bool

-- | A poll in quiz mode, which has exactly one correct answer option and
--   can be answered only once
--   
--   <b>correct_option_id</b> 0-based identifier of the correct answer
--   option; -1 for a yet unanswered poll
--   
--   <b>explanation</b> Text that is shown when the user chooses an
--   incorrect answer or taps on the lamp icon; 0-200 characters with at
--   most 2 line feeds; empty for a yet unanswered poll
PollTypeQuiz :: Maybe FormattedText -> Maybe Int -> PollType
[explanation] :: PollType -> Maybe FormattedText
[correct_option_id] :: PollType -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PollType.PollType
instance GHC.Show.Show API.PollType.PollType
instance Data.Aeson.Types.ToJSON.ToJSON API.PollType.PollType
instance Data.Aeson.Types.FromJSON.FromJSON API.PollType.PollType

module API.ProfilePhoto

-- | Describes a user profile photo
--   
--   <b>id</b> Photo identifier; 0 for an empty photo. Can be used to find
--   a photo in a list of user profile photos
--   
--   <b>small</b> A small (160x160) user profile photo. The file can be
--   downloaded only before the photo is changed
--   
--   <b>big</b> A big (640x640) user profile photo. The file can be
--   downloaded only before the photo is changed
--   
--   <b>minithumbnail</b> User profile photo minithumbnail; may be null
--   
--   <b>has_animation</b> True, if the photo has animated variant
data ProfilePhoto
ProfilePhoto :: Maybe Bool -> Maybe Minithumbnail -> Maybe File -> Maybe File -> Maybe Int -> ProfilePhoto
[has_animation] :: ProfilePhoto -> Maybe Bool
[minithumbnail] :: ProfilePhoto -> Maybe Minithumbnail
[big] :: ProfilePhoto -> Maybe File
[small] :: ProfilePhoto -> Maybe File
[_id] :: ProfilePhoto -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ProfilePhoto.ProfilePhoto
instance GHC.Show.Show API.ProfilePhoto.ProfilePhoto
instance Data.Aeson.Types.ToJSON.ToJSON API.ProfilePhoto.ProfilePhoto
instance Data.Aeson.Types.FromJSON.FromJSON API.ProfilePhoto.ProfilePhoto

module API.Proxies

-- | Represents a list of proxy servers
--   
--   <b>proxies</b> List of proxy servers
data Proxies
Proxies :: Maybe [Proxy] -> Proxies
[proxies] :: Proxies -> Maybe [Proxy]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Proxies.Proxies
instance GHC.Show.Show API.Proxies.Proxies
instance Data.Aeson.Types.ToJSON.ToJSON API.Proxies.Proxies
instance Data.Aeson.Types.FromJSON.FromJSON API.Proxies.Proxies

module API.Proxy

-- | Contains information about a proxy server
--   
--   <b>id</b> Unique identifier of the proxy
--   
--   <b>server</b> Proxy server IP address
--   
--   <b>port</b> Proxy server port
--   
--   <b>last_used_date</b> Point in time (Unix timestamp) when the proxy
--   was last used; 0 if never
--   
--   <b>is_enabled</b> True, if the proxy is enabled now
--   
--   <b>type</b> Type of the proxy
data Proxy
Proxy :: Maybe ProxyType -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe String -> Maybe Int -> Proxy
[_type] :: Proxy -> Maybe ProxyType
[is_enabled] :: Proxy -> Maybe Bool
[last_used_date] :: Proxy -> Maybe Int
[port] :: Proxy -> Maybe Int
[server] :: Proxy -> Maybe String
[_id] :: Proxy -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Proxy.Proxy
instance GHC.Show.Show API.Proxy.Proxy
instance Data.Aeson.Types.ToJSON.ToJSON API.Proxy.Proxy
instance Data.Aeson.Types.FromJSON.FromJSON API.Proxy.Proxy

module API.InternalLinkType

-- | Describes an internal <a>https://t.me</a> or tg: link, which must be
--   processed by the app in a special way
data InternalLinkType

-- | The link is a link to the active sessions section of the app. Use
--   getActiveSessions to handle the link
InternalLinkTypeActiveSessions :: InternalLinkType

-- | The link contains an authentication code. Call checkAuthenticationCode
--   with the code if the current authorization state is
--   authorizationStateWaitCode
--   
--   <b>code</b> The authentication code
InternalLinkTypeAuthenticationCode :: Maybe String -> InternalLinkType
[code] :: InternalLinkType -> Maybe String

-- | The link is a link to a background. Call searchBackground with the
--   given background name to process the link
--   
--   <b>background_name</b> Name of the background
InternalLinkTypeBackground :: Maybe String -> InternalLinkType
[background_name] :: InternalLinkType -> Maybe String

-- | The link is a link to a chat with a Telegram bot. Call
--   searchPublicChat with the given bot username, check that the user is a
--   bot, show START button in the chat with the bot,
--   
--   <ul>
--   <li>and then call sendBotStartMessage with the given start parameter
--   after the button is pressed</li>
--   </ul>
--   
--   <b>bot_username</b> Username of the bot
--   
--   <b>start_parameter</b> The parameter to be passed to
--   sendBotStartMessage
InternalLinkTypeBotStart :: Maybe String -> Maybe String -> InternalLinkType
[start_parameter] :: InternalLinkType -> Maybe String
[bot_username] :: InternalLinkType -> Maybe String

-- | The link is a link to a Telegram bot, which is supposed to be added to
--   a group chat. Call searchPublicChat with the given bot username, check
--   that the user is a bot and can be added to groups,
--   
--   <ul>
--   <li>ask the current user to select a group to add the bot to, and then
--   call sendBotStartMessage with the given start parameter and the chosen
--   group chat. Bots can be added to a public group only by administrators
--   of the group</li>
--   </ul>
--   
--   <b>bot_username</b> Username of the bot
--   
--   <b>start_parameter</b> The parameter to be passed to
--   sendBotStartMessage
InternalLinkTypeBotStartInGroup :: Maybe String -> Maybe String -> InternalLinkType
[start_parameter] :: InternalLinkType -> Maybe String
[bot_username] :: InternalLinkType -> Maybe String

-- | The link is a link to the change phone number section of the app
InternalLinkTypeChangePhoneNumber :: InternalLinkType

-- | The link is a chat invite link. Call checkChatInviteLink with the
--   given invite link to process the link
--   
--   <b>invite_link</b> Internal representation of the invite link
InternalLinkTypeChatInvite :: Maybe String -> InternalLinkType
[invite_link] :: InternalLinkType -> Maybe String

-- | The link is a link to the filter settings section of the app
InternalLinkTypeFilterSettings :: InternalLinkType

-- | The link is a link to a game. Call searchPublicChat with the given bot
--   username, check that the user is a bot, ask the current user to select
--   a chat to send the game, and then call sendMessage with
--   inputMessageGame
--   
--   <b>bot_username</b> Username of the bot that owns the game
--   
--   <b>game_short_name</b> Short name of the game
InternalLinkTypeGame :: Maybe String -> Maybe String -> InternalLinkType
[game_short_name] :: InternalLinkType -> Maybe String
[bot_username] :: InternalLinkType -> Maybe String

-- | The link is a link to a language pack. Call getLanguagePackInfo with
--   the given language pack identifier to process the link
--   
--   <b>language_pack_id</b> Language pack identifier
InternalLinkTypeLanguagePack :: Maybe String -> InternalLinkType
[language_pack_id] :: InternalLinkType -> Maybe String

-- | The link is a link to a Telegram message. Call getMessageLinkInfo with
--   the given URL to process the link
--   
--   <b>url</b> URL to be passed to getMessageLinkInfo
InternalLinkTypeMessage :: Maybe String -> InternalLinkType
[url] :: InternalLinkType -> Maybe String

-- | The link contains a message draft text. A share screen needs to be
--   shown to the user, then the chosen chat must be opened and the text is
--   added to the input field
--   
--   <b>text</b> Message draft text
--   
--   <b>contains_link</b> True, if the first line of the text contains a
--   link. If true, the input field needs to be focused and the text after
--   the link must be selected
InternalLinkTypeMessageDraft :: Maybe Bool -> Maybe FormattedText -> InternalLinkType
[contains_link] :: InternalLinkType -> Maybe Bool
[text] :: InternalLinkType -> Maybe FormattedText

-- | The link contains a request of Telegram passport data. Call
--   getPassportAuthorizationForm with the given parameters to process the
--   link if the link was received from outside of the app, otherwise
--   ignore it
--   
--   <b>bot_user_id</b> User identifier of the service's bot
--   
--   <b>scope</b> Telegram Passport element types requested by the service
--   
--   <b>public_key</b> Service's public key
--   
--   <b>nonce</b> Unique request identifier provided by the service
--   
--   <b>callback_url</b> An HTTP URL to open once the request is finished
--   or canceled with the parameter tg_passport=success or
--   tg_passport=cancel respectively. If empty, then the link
--   tgbot{bot_user_id}:/<i>passport</i>success or
--   tgbot{bot_user_id}:/<i>passport</i>cancel needs to be opened instead
InternalLinkTypePassportDataRequest :: Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe Int -> InternalLinkType
[callback_url] :: InternalLinkType -> Maybe String
[nonce] :: InternalLinkType -> Maybe String
[public_key] :: InternalLinkType -> Maybe String
[scope] :: InternalLinkType -> Maybe String
[bot_user_id] :: InternalLinkType -> Maybe Int

-- | The link can be used to confirm ownership of a phone number to prevent
--   account deletion. Call sendPhoneNumberConfirmationCode with the given
--   hash and phone number to process the link
--   
--   <b>hash</b> Hash value from the link
--   
--   <b>phone_number</b> Phone number value from the link
InternalLinkTypePhoneNumberConfirmation :: Maybe String -> Maybe String -> InternalLinkType
[phone_number] :: InternalLinkType -> Maybe String
[hash] :: InternalLinkType -> Maybe String

-- | The link is a link to a proxy. Call addProxy with the given parameters
--   to process the link and add the proxy
--   
--   <b>server</b> Proxy server IP address
--   
--   <b>port</b> Proxy server port
--   
--   <b>type</b> Type of the proxy
InternalLinkTypeProxy :: Maybe ProxyType -> Maybe Int -> Maybe String -> InternalLinkType
[_type] :: InternalLinkType -> Maybe ProxyType
[port] :: InternalLinkType -> Maybe Int
[server] :: InternalLinkType -> Maybe String

-- | The link is a link to a chat by its username. Call searchPublicChat
--   with the given chat username to process the link
--   
--   <b>chat_username</b> Username of the chat
InternalLinkTypePublicChat :: Maybe String -> InternalLinkType
[chat_username] :: InternalLinkType -> Maybe String

-- | The link can be used to login the current user on another device, but
--   it must be scanned from QR-code using in-app camera. An alert similar
--   to
--   
--   <ul>
--   <li>"This code can be used to allow someone to log in to your Telegram
--   account. To confirm Telegram login, please go to Settings &gt; Devices
--   &gt; Scan QR and scan the code" needs to be shown</li>
--   </ul>
InternalLinkTypeQrCodeAuthentication :: InternalLinkType

-- | The link is a link to app settings
InternalLinkTypeSettings :: InternalLinkType

-- | The link is a link to a sticker set. Call searchStickerSet with the
--   given sticker set name to process the link and show the sticker set
--   
--   <b>sticker_set_name</b> Name of the sticker set
InternalLinkTypeStickerSet :: Maybe String -> InternalLinkType
[sticker_set_name] :: InternalLinkType -> Maybe String

-- | The link is a link to a theme. TDLib has no theme support yet
--   
--   <b>theme_name</b> Name of the theme
InternalLinkTypeTheme :: Maybe String -> InternalLinkType
[theme_name] :: InternalLinkType -> Maybe String

-- | The link is a link to the theme settings section of the app
InternalLinkTypeThemeSettings :: InternalLinkType

-- | The link is an unknown tg: link. Call getDeepLinkInfo to process the
--   link
--   
--   <b>link</b> Link to be passed to getDeepLinkInfo
InternalLinkTypeUnknownDeepLink :: Maybe String -> InternalLinkType
[link] :: InternalLinkType -> Maybe String

-- | The link is a link to a voice chat. Call searchPublicChat with the
--   given chat username, and then joinGoupCall with the given invite hash
--   to process the link
--   
--   <b>chat_username</b> Username of the chat with the voice chat
--   
--   <b>invite_hash</b> If non-empty, invite hash to be used to join the
--   voice chat without being muted by administrators
--   
--   <b>is_live_stream</b> True, if the voice chat is expected to be a live
--   stream in a channel or a broadcast group
InternalLinkTypeVoiceChat :: Maybe Bool -> Maybe String -> Maybe String -> InternalLinkType
[is_live_stream] :: InternalLinkType -> Maybe Bool
[invite_hash] :: InternalLinkType -> Maybe String
[chat_username] :: InternalLinkType -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InternalLinkType.InternalLinkType
instance GHC.Show.Show API.InternalLinkType.InternalLinkType
instance Data.Aeson.Types.ToJSON.ToJSON API.InternalLinkType.InternalLinkType
instance Data.Aeson.Types.FromJSON.FromJSON API.InternalLinkType.InternalLinkType

module API.Functions.TestProxy

-- | Sends a simple network request to the Telegram servers via proxy; for
--   testing only. Can be called before authorization
--   
--   <b>server</b> Proxy server IP address
--   
--   <b>port</b> Proxy server port
--   
--   <b>type</b> Proxy type
--   
--   <b>dc_id</b> Identifier of a datacenter, with which to test connection
--   
--   <b>timeout</b> The maximum overall timeout for the request
data TestProxy
TestProxy :: Maybe Float -> Maybe Int -> Maybe ProxyType -> Maybe Int -> Maybe String -> TestProxy
[timeout] :: TestProxy -> Maybe Float
[dc_id] :: TestProxy -> Maybe Int
[_type] :: TestProxy -> Maybe ProxyType
[port] :: TestProxy -> Maybe Int
[server] :: TestProxy -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TestProxy.TestProxy
instance GHC.Show.Show API.Functions.TestProxy.TestProxy
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TestProxy.TestProxy
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TestProxy.TestProxy

module API.Functions.EditProxy

-- | Edits an existing proxy server for network requests. Can be called
--   before authorization
--   
--   <b>proxy_id</b> Proxy identifier
--   
--   <b>server</b> Proxy server IP address
--   
--   <b>port</b> Proxy server port
--   
--   <b>enable</b> True, if the proxy needs to be enabled
--   
--   <b>type</b> Proxy type
data EditProxy
EditProxy :: Maybe ProxyType -> Maybe Bool -> Maybe Int -> Maybe String -> Maybe Int -> EditProxy
[_type] :: EditProxy -> Maybe ProxyType
[enable] :: EditProxy -> Maybe Bool
[port] :: EditProxy -> Maybe Int
[server] :: EditProxy -> Maybe String
[proxy_id] :: EditProxy -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditProxy.EditProxy
instance GHC.Show.Show API.Functions.EditProxy.EditProxy
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditProxy.EditProxy
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditProxy.EditProxy

module API.Functions.AddProxy

-- | Adds a proxy server for network requests. Can be called before
--   authorization
--   
--   <b>server</b> Proxy server IP address
--   
--   <b>port</b> Proxy server port
--   
--   <b>enable</b> True, if the proxy needs to be enabled
--   
--   <b>type</b> Proxy type
data AddProxy
AddProxy :: Maybe ProxyType -> Maybe Bool -> Maybe Int -> Maybe String -> AddProxy
[_type] :: AddProxy -> Maybe ProxyType
[enable] :: AddProxy -> Maybe Bool
[port] :: AddProxy -> Maybe Int
[server] :: AddProxy -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AddProxy.AddProxy
instance GHC.Show.Show API.Functions.AddProxy.AddProxy
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AddProxy.AddProxy
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AddProxy.AddProxy

module API.ProxyType

-- | Describes the type of a proxy server
data ProxyType

-- | A SOCKS5 proxy server
--   
--   <b>username</b> Username for logging in; may be empty
--   
--   <b>password</b> Password for logging in; may be empty
ProxyTypeSocks5 :: Maybe String -> Maybe String -> ProxyType
[password] :: ProxyType -> Maybe String
[username] :: ProxyType -> Maybe String

-- | A HTTP transparent proxy server
--   
--   <b>username</b> Username for logging in; may be empty
--   
--   <b>password</b> Password for logging in; may be empty
--   
--   <b>http_only</b> Pass true if the proxy supports only HTTP requests
--   and doesn't support transparent TCP connections via HTTP CONNECT
--   method
ProxyTypeHttp :: Maybe Bool -> Maybe String -> Maybe String -> ProxyType
[http_only] :: ProxyType -> Maybe Bool
[password] :: ProxyType -> Maybe String
[username] :: ProxyType -> Maybe String

-- | An MTProto proxy server
--   
--   <b>secret</b> The proxy's secret in hexadecimal encoding
ProxyTypeMtproto :: Maybe String -> ProxyType
[secret] :: ProxyType -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ProxyType.ProxyType
instance GHC.Show.Show API.ProxyType.ProxyType
instance Data.Aeson.Types.ToJSON.ToJSON API.ProxyType.ProxyType
instance Data.Aeson.Types.FromJSON.FromJSON API.ProxyType.ProxyType

module API.Functions.GetCreatedPublicChats

-- | Returns a list of public chats of the specified type, owned by the
--   user
--   
--   <b>type</b> Type of the public chats to return
data GetCreatedPublicChats
GetCreatedPublicChats :: Maybe PublicChatType -> GetCreatedPublicChats
[_type] :: GetCreatedPublicChats -> Maybe PublicChatType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetCreatedPublicChats.GetCreatedPublicChats
instance GHC.Show.Show API.Functions.GetCreatedPublicChats.GetCreatedPublicChats
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetCreatedPublicChats.GetCreatedPublicChats
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetCreatedPublicChats.GetCreatedPublicChats

module API.Functions.CheckCreatedPublicChatsLimit

-- | Checks whether the maximum number of owned public chats has been
--   reached. Returns corresponding error if the limit was reached
--   
--   <b>type</b> Type of the public chats, for which to check the limit
data CheckCreatedPublicChatsLimit
CheckCreatedPublicChatsLimit :: Maybe PublicChatType -> CheckCreatedPublicChatsLimit
[_type] :: CheckCreatedPublicChatsLimit -> Maybe PublicChatType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.CheckCreatedPublicChatsLimit.CheckCreatedPublicChatsLimit
instance GHC.Show.Show API.Functions.CheckCreatedPublicChatsLimit.CheckCreatedPublicChatsLimit
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.CheckCreatedPublicChatsLimit.CheckCreatedPublicChatsLimit
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.CheckCreatedPublicChatsLimit.CheckCreatedPublicChatsLimit

module API.PublicChatType

-- | Describes a type of public chats
data PublicChatType

-- | The chat is public, because it has username
PublicChatTypeHasUsername :: PublicChatType

-- | The chat is public, because it is a location-based supergroup
PublicChatTypeIsLocationBased :: PublicChatType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PublicChatType.PublicChatType
instance GHC.Show.Show API.PublicChatType.PublicChatType
instance Data.Aeson.Types.ToJSON.ToJSON API.PublicChatType.PublicChatType
instance Data.Aeson.Types.FromJSON.FromJSON API.PublicChatType.PublicChatType

module API.NotificationType

-- | Contains detailed information about a notification
data NotificationType

-- | New message was received
--   
--   <b>message</b> The message
NotificationTypeNewMessage :: Maybe Message -> NotificationType
[message] :: NotificationType -> Maybe Message

-- | New secret chat was created
NotificationTypeNewSecretChat :: NotificationType

-- | New call was received
--   
--   <b>call_id</b> Call identifier
NotificationTypeNewCall :: Maybe Int -> NotificationType
[call_id] :: NotificationType -> Maybe Int

-- | New message was received through a push notification
--   
--   <b>message_id</b> The message identifier. The message will not be
--   available in the chat history, but the ID can be used in viewMessages,
--   or as reply_to_message_id
--   
--   <b>sender</b> The sender of the message. Corresponding user or chat
--   may be inaccessible
--   
--   <b>sender_name</b> Name of the sender
--   
--   <b>is_outgoing</b> True, if the message is outgoing
--   
--   <b>content</b> Push message content
NotificationTypeNewPushMessage :: Maybe PushMessageContent -> Maybe Bool -> Maybe String -> Maybe MessageSender -> Maybe Int -> NotificationType
[content] :: NotificationType -> Maybe PushMessageContent
[is_outgoing] :: NotificationType -> Maybe Bool
[sender_name] :: NotificationType -> Maybe String
[sender] :: NotificationType -> Maybe MessageSender
[message_id] :: NotificationType -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.NotificationType.NotificationType
instance GHC.Show.Show API.NotificationType.NotificationType
instance Data.Aeson.Types.ToJSON.ToJSON API.NotificationType.NotificationType
instance Data.Aeson.Types.FromJSON.FromJSON API.NotificationType.NotificationType

module API.PushReceiverId

-- | Contains a globally unique push receiver identifier, which can be used
--   to identify which account has received a push notification
--   
--   <b>id</b> The globally unique identifier of push notification
--   subscription
data PushReceiverId
PushReceiverId :: Maybe Int -> PushReceiverId
[_id] :: PushReceiverId -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PushReceiverId.PushReceiverId
instance GHC.Show.Show API.PushReceiverId.PushReceiverId
instance Data.Aeson.Types.ToJSON.ToJSON API.PushReceiverId.PushReceiverId
instance Data.Aeson.Types.FromJSON.FromJSON API.PushReceiverId.PushReceiverId

module API.RecommendedChatFilter

-- | Describes a recommended chat filter
--   
--   <b>filter</b> The chat filter
--   
--   <b>param_description</b> Chat filter description
data RecommendedChatFilter
RecommendedChatFilter :: Maybe String -> Maybe ChatFilter -> RecommendedChatFilter
[description] :: RecommendedChatFilter -> Maybe String
[_filter] :: RecommendedChatFilter -> Maybe ChatFilter
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.RecommendedChatFilter.RecommendedChatFilter
instance GHC.Show.Show API.RecommendedChatFilter.RecommendedChatFilter
instance Data.Aeson.Types.ToJSON.ToJSON API.RecommendedChatFilter.RecommendedChatFilter
instance Data.Aeson.Types.FromJSON.FromJSON API.RecommendedChatFilter.RecommendedChatFilter

module API.RecommendedChatFilters

-- | Contains a list of recommended chat filters
--   
--   <b>chat_filters</b> List of recommended chat filters
data RecommendedChatFilters
RecommendedChatFilters :: Maybe [RecommendedChatFilter] -> RecommendedChatFilters
[chat_filters] :: RecommendedChatFilters -> Maybe [RecommendedChatFilter]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.RecommendedChatFilters.RecommendedChatFilters
instance GHC.Show.Show API.RecommendedChatFilters.RecommendedChatFilters
instance Data.Aeson.Types.ToJSON.ToJSON API.RecommendedChatFilters.RecommendedChatFilters
instance Data.Aeson.Types.FromJSON.FromJSON API.RecommendedChatFilters.RecommendedChatFilters

module API.RecoveryEmailAddress

-- | Contains information about the current recovery email address
--   
--   <b>recovery_email_address</b> Recovery email address
data RecoveryEmailAddress
RecoveryEmailAddress :: Maybe String -> RecoveryEmailAddress
[recovery_email_address] :: RecoveryEmailAddress -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.RecoveryEmailAddress.RecoveryEmailAddress
instance GHC.Show.Show API.RecoveryEmailAddress.RecoveryEmailAddress
instance Data.Aeson.Types.ToJSON.ToJSON API.RecoveryEmailAddress.RecoveryEmailAddress
instance Data.Aeson.Types.FromJSON.FromJSON API.RecoveryEmailAddress.RecoveryEmailAddress

module API.File

-- | Represents a file
--   
--   <b>id</b> Unique file identifier
--   
--   <b>size</b> File size, in bytes; 0 if unknown
--   
--   <b>expected_size</b> Approximate file size in bytes in case the exact
--   file size is unknown. Can be used to show download/upload progress
--   
--   <b>local</b> Information about the local copy of the file
--   
--   <b>remote</b> Information about the remote copy of the file
data File
File :: Maybe RemoteFile -> Maybe LocalFile -> Maybe Int -> Maybe Int -> Maybe Int -> File
[remote] :: File -> Maybe RemoteFile
[local] :: File -> Maybe LocalFile
[expected_size] :: File -> Maybe Int
[size] :: File -> Maybe Int
[_id] :: File -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.File.File
instance GHC.Show.Show API.File.File
instance Data.Aeson.Types.ToJSON.ToJSON API.File.File
instance Data.Aeson.Types.FromJSON.FromJSON API.File.File

module API.RemoteFile

-- | Represents a remote file
--   
--   <b>id</b> Remote file identifier; may be empty. Can be used by the
--   current user across application restarts or even from other devices.
--   Uniquely identifies a file, but a file can have a lot of different
--   valid identifiers.
--   
--   <ul>
--   <li>If the ID starts with "<a>http://"</a> or "<a>https://"</a>, it
--   represents the HTTP URL of the file. TDLib is currently unable to
--   download files if only their URL is known.</li>
--   <li>If downloadFile is called on such a file or if it is sent to a
--   secret chat, TDLib starts a file generation process by sending
--   updateFileGenerationStart to the application with the HTTP URL in the
--   original_path and "" as the conversion string. Application must
--   generate the file by downloading it to the specified location</li>
--   </ul>
--   
--   <b>unique_id</b> Unique file identifier; may be empty if unknown. The
--   unique file identifier which is the same for the same file even for
--   different users and is persistent over time
--   
--   <b>is_uploading_active</b> True, if the file is currently being
--   uploaded (or a remote copy is being generated by some other means)
--   
--   <b>is_uploading_completed</b> True, if a remote copy is fully
--   available
--   
--   <b>uploaded_size</b> Size of the remote available part of the file, in
--   bytes; 0 if unknown
data RemoteFile
RemoteFile :: Maybe Int -> Maybe Bool -> Maybe Bool -> Maybe String -> Maybe String -> RemoteFile
[uploaded_size] :: RemoteFile -> Maybe Int
[is_uploading_completed] :: RemoteFile -> Maybe Bool
[is_uploading_active] :: RemoteFile -> Maybe Bool
[unique_id] :: RemoteFile -> Maybe String
[_id] :: RemoteFile -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.RemoteFile.RemoteFile
instance GHC.Show.Show API.RemoteFile.RemoteFile
instance Data.Aeson.Types.ToJSON.ToJSON API.RemoteFile.RemoteFile
instance Data.Aeson.Types.FromJSON.FromJSON API.RemoteFile.RemoteFile

module API.Message

-- | Describes a message
--   
--   <b>id</b> Message identifier; unique for the chat to which the message
--   belongs
--   
--   <b>sender</b> The sender of the message
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>sending_state</b> Information about the sending state of the
--   message; may be null
--   
--   <b>scheduling_state</b> Information about the scheduling state of the
--   message; may be null
--   
--   <b>is_outgoing</b> True, if the message is outgoing
--   
--   <b>is_pinned</b> True, if the message is pinned
--   
--   <b>can_be_edited</b> True, if the message can be edited. For live
--   location and poll messages this fields shows whether
--   editMessageLiveLocation or stopPoll can be used with this message by
--   the application
--   
--   <b>can_be_forwarded</b> True, if the message can be forwarded
--   
--   <b>can_be_deleted_only_for_self</b> True, if the message can be
--   deleted only for the current user while other users will continue to
--   see it
--   
--   <b>can_be_deleted_for_all_users</b> True, if the message can be
--   deleted for all users
--   
--   <b>can_get_statistics</b> True, if the message statistics are
--   available
--   
--   <b>can_get_message_thread</b> True, if the message thread info is
--   available
--   
--   <b>can_get_viewers</b> True, if chat members already viewed the
--   message can be received through getMessageViewers
--   
--   <b>can_get_media_timestamp_links</b> True, if media timestamp links
--   can be generated for media timestamp entities in the message text,
--   caption or web page description
--   
--   <b>has_timestamped_media</b> True, if media timestamp entities refers
--   to a media in this message as opposed to a media in the replied
--   message
--   
--   <b>is_channel_post</b> True, if the message is a channel post. All
--   messages to channels are channel posts, all other messages are not
--   channel posts
--   
--   <b>contains_unread_mention</b> True, if the message contains an unread
--   mention for the current user
--   
--   <b>date</b> Point in time (Unix timestamp) when the message was sent
--   
--   <b>edit_date</b> Point in time (Unix timestamp) when the message was
--   last edited
--   
--   <b>forward_info</b> Information about the initial message sender; may
--   be null
--   
--   <b>interaction_info</b> Information about interactions with the
--   message; may be null
--   
--   <b>reply_in_chat_id</b> If non-zero, the identifier of the chat to
--   which the replied message belongs; Currently, only messages in the
--   Replies chat can have different reply_in_chat_id and chat_id
--   
--   <b>reply_to_message_id</b> If non-zero, the identifier of the message
--   this message is replying to; can be the identifier of a deleted
--   message
--   
--   <b>message_thread_id</b> If non-zero, the identifier of the message
--   thread the message belongs to; unique within the chat to which the
--   message belongs
--   
--   <b>ttl</b> For self-destructing messages, the message's TTL (Time To
--   Live), in seconds; 0 if none. TDLib will send updateDeleteMessages or
--   updateMessageContent once the TTL expires
--   
--   <b>ttl_expires_in</b> Time left before the message expires, in
--   seconds. If the TTL timer isn't started yet, equals to the value of
--   the ttl field
--   
--   <b>via_bot_user_id</b> If non-zero, the user identifier of the bot
--   through which this message was sent
--   
--   <b>author_signature</b> For channel posts and anonymous group
--   messages, optional author signature
--   
--   <b>media_album_id</b> Unique identifier of an album this message
--   belongs to. Only audios, documents, photos and videos can be grouped
--   together in albums
--   
--   <b>restriction_reason</b> If non-empty, contains a human-readable
--   description of the reason why access to this message must be
--   restricted
--   
--   <b>content</b> Content of the message
--   
--   <b>reply_markup</b> Reply markup for the message; may be null
data Message
Message :: Maybe ReplyMarkup -> Maybe MessageContent -> Maybe String -> Maybe Int -> Maybe String -> Maybe Int -> Maybe Float -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe MessageInteractionInfo -> Maybe MessageForwardInfo -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe MessageSchedulingState -> Maybe MessageSendingState -> Maybe Int -> Maybe MessageSender -> Maybe Int -> Message
[reply_markup] :: Message -> Maybe ReplyMarkup
[content] :: Message -> Maybe MessageContent
[restriction_reason] :: Message -> Maybe String
[media_album_id] :: Message -> Maybe Int
[author_signature] :: Message -> Maybe String
[via_bot_user_id] :: Message -> Maybe Int
[ttl_expires_in] :: Message -> Maybe Float
[ttl] :: Message -> Maybe Int
[message_thread_id] :: Message -> Maybe Int
[reply_to_message_id] :: Message -> Maybe Int
[reply_in_chat_id] :: Message -> Maybe Int
[interaction_info] :: Message -> Maybe MessageInteractionInfo
[forward_info] :: Message -> Maybe MessageForwardInfo
[edit_date] :: Message -> Maybe Int
[date] :: Message -> Maybe Int
[contains_unread_mention] :: Message -> Maybe Bool
[is_channel_post] :: Message -> Maybe Bool
[has_timestamped_media] :: Message -> Maybe Bool
[can_get_media_timestamp_links] :: Message -> Maybe Bool
[can_get_viewers] :: Message -> Maybe Bool
[can_get_message_thread] :: Message -> Maybe Bool
[can_get_statistics] :: Message -> Maybe Bool
[can_be_deleted_for_all_users] :: Message -> Maybe Bool
[can_be_deleted_only_for_self] :: Message -> Maybe Bool
[can_be_forwarded] :: Message -> Maybe Bool
[can_be_edited] :: Message -> Maybe Bool
[is_pinned] :: Message -> Maybe Bool
[is_outgoing] :: Message -> Maybe Bool
[scheduling_state] :: Message -> Maybe MessageSchedulingState
[sending_state] :: Message -> Maybe MessageSendingState
[chat_id] :: Message -> Maybe Int
[sender] :: Message -> Maybe MessageSender
[_id] :: Message -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Message.Message
instance GHC.Show.Show API.Message.Message
instance Data.Aeson.Types.ToJSON.ToJSON API.Message.Message
instance Data.Aeson.Types.FromJSON.FromJSON API.Message.Message

module API.Functions.StopPoll

-- | Stops a poll. A poll in a message can be stopped when the message has
--   can_be_edited flag set
--   
--   <b>chat_id</b> Identifier of the chat to which the poll belongs
--   
--   <b>message_id</b> Identifier of the message containing the poll
--   
--   <b>reply_markup</b> The new message reply markup; pass null if none;
--   for bots only
data StopPoll
StopPoll :: Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> StopPoll
[reply_markup] :: StopPoll -> Maybe ReplyMarkup
[message_id] :: StopPoll -> Maybe Int
[chat_id] :: StopPoll -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.StopPoll.StopPoll
instance GHC.Show.Show API.Functions.StopPoll.StopPoll
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.StopPoll.StopPoll
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.StopPoll.StopPoll

module API.Functions.SendMessage

-- | Sends a message. Returns the sent message
--   
--   <b>chat_id</b> Target chat
--   
--   <b>message_thread_id</b> If not 0, a message thread identifier in
--   which the message will be sent
--   
--   <b>reply_to_message_id</b> Identifier of the message to reply to or 0
--   
--   <b>options</b> Options to be used to send the message; pass null to
--   use default options
--   
--   <b>reply_markup</b> Markup for replying to the message; pass null if
--   none; for bots only
--   
--   <b>input_message_content</b> The content of the message to be sent
data SendMessage
SendMessage :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe MessageSendOptions -> Maybe Int -> Maybe Int -> Maybe Int -> SendMessage
[input_message_content] :: SendMessage -> Maybe InputMessageContent
[reply_markup] :: SendMessage -> Maybe ReplyMarkup
[options] :: SendMessage -> Maybe MessageSendOptions
[reply_to_message_id] :: SendMessage -> Maybe Int
[message_thread_id] :: SendMessage -> Maybe Int
[chat_id] :: SendMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SendMessage.SendMessage
instance GHC.Show.Show API.Functions.SendMessage.SendMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SendMessage.SendMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SendMessage.SendMessage

module API.Functions.EditMessageText

-- | Edits the text of a message (or a text of a game message). Returns the
--   edited message after the edit is completed on the server side
--   
--   <b>chat_id</b> The chat the message belongs to
--   
--   <b>message_id</b> Identifier of the message
--   
--   <b>reply_markup</b> The new message reply markup; pass null if none;
--   for bots only
--   
--   <b>input_message_content</b> New text content of the message. Must be
--   of type inputMessageText
data EditMessageText
EditMessageText :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> EditMessageText
[input_message_content] :: EditMessageText -> Maybe InputMessageContent
[reply_markup] :: EditMessageText -> Maybe ReplyMarkup
[message_id] :: EditMessageText -> Maybe Int
[chat_id] :: EditMessageText -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditMessageText.EditMessageText
instance GHC.Show.Show API.Functions.EditMessageText.EditMessageText
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditMessageText.EditMessageText
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditMessageText.EditMessageText

module API.Functions.EditMessageReplyMarkup

-- | Edits the message reply markup; for bots only. Returns the edited
--   message after the edit is completed on the server side
--   
--   <b>chat_id</b> The chat the message belongs to
--   
--   <b>message_id</b> Identifier of the message
--   
--   <b>reply_markup</b> The new message reply markup; pass null if none
data EditMessageReplyMarkup
EditMessageReplyMarkup :: Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> EditMessageReplyMarkup
[reply_markup] :: EditMessageReplyMarkup -> Maybe ReplyMarkup
[message_id] :: EditMessageReplyMarkup -> Maybe Int
[chat_id] :: EditMessageReplyMarkup -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditMessageReplyMarkup.EditMessageReplyMarkup
instance GHC.Show.Show API.Functions.EditMessageReplyMarkup.EditMessageReplyMarkup
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditMessageReplyMarkup.EditMessageReplyMarkup
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditMessageReplyMarkup.EditMessageReplyMarkup

module API.Functions.EditMessageMedia

-- | Edits the content of a message with an animation, an audio, a
--   document, a photo or a video, including message caption. If only the
--   caption needs to be edited, use editMessageCaption instead.
--   
--   <ul>
--   <li>The media can't be edited if the message was set to self-destruct
--   or to a self-destructing media. The type of message content in an
--   album can't be changed with exception of replacing a photo with a
--   video or vice versa. Returns the edited message after the edit is
--   completed on the server side</li>
--   </ul>
--   
--   <b>chat_id</b> The chat the message belongs to
--   
--   <b>message_id</b> Identifier of the message
--   
--   <b>reply_markup</b> The new message reply markup; pass null if none;
--   for bots only
--   
--   <b>input_message_content</b> New content of the message. Must be one
--   of the following types: inputMessageAnimation, inputMessageAudio,
--   inputMessageDocument, inputMessagePhoto or inputMessageVideo
data EditMessageMedia
EditMessageMedia :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> EditMessageMedia
[input_message_content] :: EditMessageMedia -> Maybe InputMessageContent
[reply_markup] :: EditMessageMedia -> Maybe ReplyMarkup
[message_id] :: EditMessageMedia -> Maybe Int
[chat_id] :: EditMessageMedia -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditMessageMedia.EditMessageMedia
instance GHC.Show.Show API.Functions.EditMessageMedia.EditMessageMedia
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditMessageMedia.EditMessageMedia
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditMessageMedia.EditMessageMedia

module API.Functions.EditMessageLiveLocation

-- | Edits the message content of a live location. Messages can be edited
--   for a limited period of time specified in the live location. Returns
--   the edited message after the edit is completed on the server side
--   
--   <b>chat_id</b> The chat the message belongs to
--   
--   <b>message_id</b> Identifier of the message
--   
--   <b>reply_markup</b> The new message reply markup; pass null if none;
--   for bots only
--   
--   <b>location</b> New location content of the message; pass null to stop
--   sharing the live location
--   
--   <b>heading</b> The new direction in which the location moves, in
--   degrees; 1-360. Pass 0 if unknown
--   
--   <b>proximity_alert_radius</b> The new maximum distance for proximity
--   alerts, in meters (0-100000). Pass 0 if the notification is disabled
data EditMessageLiveLocation
EditMessageLiveLocation :: Maybe Int -> Maybe Int -> Maybe Location -> Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> EditMessageLiveLocation
[proximity_alert_radius] :: EditMessageLiveLocation -> Maybe Int
[heading] :: EditMessageLiveLocation -> Maybe Int
[location] :: EditMessageLiveLocation -> Maybe Location
[reply_markup] :: EditMessageLiveLocation -> Maybe ReplyMarkup
[message_id] :: EditMessageLiveLocation -> Maybe Int
[chat_id] :: EditMessageLiveLocation -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditMessageLiveLocation.EditMessageLiveLocation
instance GHC.Show.Show API.Functions.EditMessageLiveLocation.EditMessageLiveLocation
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditMessageLiveLocation.EditMessageLiveLocation
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditMessageLiveLocation.EditMessageLiveLocation

module API.Functions.EditMessageCaption

-- | Edits the message content caption. Returns the edited message after
--   the edit is completed on the server side
--   
--   <b>chat_id</b> The chat the message belongs to
--   
--   <b>message_id</b> Identifier of the message
--   
--   <b>reply_markup</b> The new message reply markup; pass null if none;
--   for bots only
--   
--   <b>caption</b> New message content caption;
--   0-GetOption("message_caption_length_max") characters; pass null to
--   remove caption
data EditMessageCaption
EditMessageCaption :: Maybe FormattedText -> Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> EditMessageCaption
[caption] :: EditMessageCaption -> Maybe FormattedText
[reply_markup] :: EditMessageCaption -> Maybe ReplyMarkup
[message_id] :: EditMessageCaption -> Maybe Int
[chat_id] :: EditMessageCaption -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditMessageCaption.EditMessageCaption
instance GHC.Show.Show API.Functions.EditMessageCaption.EditMessageCaption
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditMessageCaption.EditMessageCaption
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditMessageCaption.EditMessageCaption

module API.Functions.EditInlineMessageText

-- | Edits the text of an inline text or game message sent via a bot; for
--   bots only
--   
--   <b>inline_message_id</b> Inline message identifier
--   
--   <b>reply_markup</b> The new message reply markup; pass null if none
--   
--   <b>input_message_content</b> New text content of the message. Must be
--   of type inputMessageText
data EditInlineMessageText
EditInlineMessageText :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe String -> EditInlineMessageText
[input_message_content] :: EditInlineMessageText -> Maybe InputMessageContent
[reply_markup] :: EditInlineMessageText -> Maybe ReplyMarkup
[inline_message_id] :: EditInlineMessageText -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditInlineMessageText.EditInlineMessageText
instance GHC.Show.Show API.Functions.EditInlineMessageText.EditInlineMessageText
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditInlineMessageText.EditInlineMessageText
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditInlineMessageText.EditInlineMessageText

module API.Functions.EditInlineMessageReplyMarkup

-- | Edits the reply markup of an inline message sent via a bot; for bots
--   only
--   
--   <b>inline_message_id</b> Inline message identifier
--   
--   <b>reply_markup</b> The new message reply markup; pass null if none
data EditInlineMessageReplyMarkup
EditInlineMessageReplyMarkup :: Maybe ReplyMarkup -> Maybe String -> EditInlineMessageReplyMarkup
[reply_markup] :: EditInlineMessageReplyMarkup -> Maybe ReplyMarkup
[inline_message_id] :: EditInlineMessageReplyMarkup -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditInlineMessageReplyMarkup.EditInlineMessageReplyMarkup
instance GHC.Show.Show API.Functions.EditInlineMessageReplyMarkup.EditInlineMessageReplyMarkup
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditInlineMessageReplyMarkup.EditInlineMessageReplyMarkup
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditInlineMessageReplyMarkup.EditInlineMessageReplyMarkup

module API.Functions.EditInlineMessageMedia

-- | Edits the content of a message with an animation, an audio, a
--   document, a photo or a video in an inline message sent via a bot; for
--   bots only
--   
--   <b>inline_message_id</b> Inline message identifier
--   
--   <b>reply_markup</b> The new message reply markup; pass null if none;
--   for bots only
--   
--   <b>input_message_content</b> New content of the message. Must be one
--   of the following types: inputMessageAnimation, inputMessageAudio,
--   inputMessageDocument, inputMessagePhoto or inputMessageVideo
data EditInlineMessageMedia
EditInlineMessageMedia :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe String -> EditInlineMessageMedia
[input_message_content] :: EditInlineMessageMedia -> Maybe InputMessageContent
[reply_markup] :: EditInlineMessageMedia -> Maybe ReplyMarkup
[inline_message_id] :: EditInlineMessageMedia -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditInlineMessageMedia.EditInlineMessageMedia
instance GHC.Show.Show API.Functions.EditInlineMessageMedia.EditInlineMessageMedia
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditInlineMessageMedia.EditInlineMessageMedia
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditInlineMessageMedia.EditInlineMessageMedia

module API.Functions.EditInlineMessageLiveLocation

-- | Edits the content of a live location in an inline message sent via a
--   bot; for bots only
--   
--   <b>inline_message_id</b> Inline message identifier
--   
--   <b>reply_markup</b> The new message reply markup; pass null if none
--   
--   <b>location</b> New location content of the message; pass null to stop
--   sharing the live location
--   
--   <b>heading</b> The new direction in which the location moves, in
--   degrees; 1-360. Pass 0 if unknown
--   
--   <b>proximity_alert_radius</b> The new maximum distance for proximity
--   alerts, in meters (0-100000). Pass 0 if the notification is disabled
data EditInlineMessageLiveLocation
EditInlineMessageLiveLocation :: Maybe Int -> Maybe Int -> Maybe Location -> Maybe ReplyMarkup -> Maybe String -> EditInlineMessageLiveLocation
[proximity_alert_radius] :: EditInlineMessageLiveLocation -> Maybe Int
[heading] :: EditInlineMessageLiveLocation -> Maybe Int
[location] :: EditInlineMessageLiveLocation -> Maybe Location
[reply_markup] :: EditInlineMessageLiveLocation -> Maybe ReplyMarkup
[inline_message_id] :: EditInlineMessageLiveLocation -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditInlineMessageLiveLocation.EditInlineMessageLiveLocation
instance GHC.Show.Show API.Functions.EditInlineMessageLiveLocation.EditInlineMessageLiveLocation
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditInlineMessageLiveLocation.EditInlineMessageLiveLocation
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditInlineMessageLiveLocation.EditInlineMessageLiveLocation

module API.Functions.EditInlineMessageCaption

-- | Edits the caption of an inline message sent via a bot; for bots only
--   
--   <b>inline_message_id</b> Inline message identifier
--   
--   <b>reply_markup</b> The new message reply markup; pass null if none
--   
--   <b>caption</b> New message content caption; pass null to remove
--   caption; 0-GetOption("message_caption_length_max") characters
data EditInlineMessageCaption
EditInlineMessageCaption :: Maybe FormattedText -> Maybe ReplyMarkup -> Maybe String -> EditInlineMessageCaption
[caption] :: EditInlineMessageCaption -> Maybe FormattedText
[reply_markup] :: EditInlineMessageCaption -> Maybe ReplyMarkup
[inline_message_id] :: EditInlineMessageCaption -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.EditInlineMessageCaption.EditInlineMessageCaption
instance GHC.Show.Show API.Functions.EditInlineMessageCaption.EditInlineMessageCaption
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.EditInlineMessageCaption.EditInlineMessageCaption
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.EditInlineMessageCaption.EditInlineMessageCaption

module API.ReplyMarkup

-- | Contains a description of a custom keyboard and actions that can be
--   done with it to quickly reply to bots
data ReplyMarkup

-- | Instructs application to remove the keyboard once this message has
--   been received. This kind of keyboard can't be received in an incoming
--   message; instead, UpdateChatReplyMarkup with message_id == 0 will be
--   sent
--   
--   <b>is_personal</b> True, if the keyboard is removed only for the
--   mentioned users or the target user of a reply
ReplyMarkupRemoveKeyboard :: Maybe Bool -> ReplyMarkup
[is_personal] :: ReplyMarkup -> Maybe Bool

-- | Instructs application to force a reply to this message
--   
--   <b>is_personal</b> True, if a forced reply must automatically be shown
--   to the current user. For outgoing messages, specify true to show the
--   forced reply only for the mentioned users and for the target user of a
--   reply
--   
--   <b>input_field_placeholder</b> If non-empty, the placeholder to be
--   shown in the input field when the reply is active; 0-64 characters
ReplyMarkupForceReply :: Maybe String -> Maybe Bool -> ReplyMarkup
[input_field_placeholder] :: ReplyMarkup -> Maybe String
[is_personal] :: ReplyMarkup -> Maybe Bool

-- | Contains a custom keyboard layout to quickly reply to bots
--   
--   <b>rows</b> A list of rows of bot keyboard buttons
--   
--   <b>resize_keyboard</b> True, if the application needs to resize the
--   keyboard vertically
--   
--   <b>one_time</b> True, if the application needs to hide the keyboard
--   after use
--   
--   <b>is_personal</b> True, if the keyboard must automatically be shown
--   to the current user. For outgoing messages, specify true to show the
--   keyboard only for the mentioned users and for the target user of a
--   reply
--   
--   <b>input_field_placeholder</b> If non-empty, the placeholder to be
--   shown in the input field when the keyboard is active; 0-64 characters
ReplyMarkupShowKeyboard :: Maybe String -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe [KeyboardButton] -> ReplyMarkup
[input_field_placeholder] :: ReplyMarkup -> Maybe String
[is_personal] :: ReplyMarkup -> Maybe Bool
[one_time] :: ReplyMarkup -> Maybe Bool
[resize_keyboard] :: ReplyMarkup -> Maybe Bool
[_rows] :: ReplyMarkup -> Maybe [KeyboardButton]

-- | Contains an inline keyboard layout
--   
--   <b>rows</b> A list of rows of inline keyboard buttons
ReplyMarkupInlineKeyboard :: Maybe [InlineKeyboardButton] -> ReplyMarkup
[rows] :: ReplyMarkup -> Maybe [InlineKeyboardButton]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ReplyMarkup.ReplyMarkup
instance GHC.Show.Show API.ReplyMarkup.ReplyMarkup
instance Data.Aeson.Types.ToJSON.ToJSON API.ReplyMarkup.ReplyMarkup
instance Data.Aeson.Types.FromJSON.FromJSON API.ReplyMarkup.ReplyMarkup

module API.ResetPasswordResult

-- | Represents result of 2-step verification password reset
data ResetPasswordResult

-- | The password was reset
ResetPasswordResultOk :: ResetPasswordResult

-- | The password reset request is pending
--   
--   <b>pending_reset_date</b> Point in time (Unix timestamp) after which
--   the password can be reset immediately using resetPassword
ResetPasswordResultPending :: Maybe Int -> ResetPasswordResult
[pending_reset_date] :: ResetPasswordResult -> Maybe Int

-- | The password reset request was declined
--   
--   <b>retry_date</b> Point in time (Unix timestamp) when the password
--   reset can be retried
ResetPasswordResultDeclined :: Maybe Int -> ResetPasswordResult
[retry_date] :: ResetPasswordResult -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ResetPasswordResult.ResetPasswordResult
instance GHC.Show.Show API.ResetPasswordResult.ResetPasswordResult
instance Data.Aeson.Types.ToJSON.ToJSON API.ResetPasswordResult.ResetPasswordResult
instance Data.Aeson.Types.FromJSON.FromJSON API.ResetPasswordResult.ResetPasswordResult

module API.PageBlockTableCell

-- | Represents a cell of a table
--   
--   <b>text</b> Cell text; may be null. If the text is null, then the cell
--   must be invisible
--   
--   <b>is_header</b> True, if it is a header cell
--   
--   <b>colspan</b> The number of columns the cell spans
--   
--   <b>rowspan</b> The number of rows the cell spans
--   
--   <b>align</b> Horizontal cell content alignment
--   
--   <b>valign</b> Vertical cell content alignment
data PageBlockTableCell
PageBlockTableCell :: Maybe PageBlockVerticalAlignment -> Maybe PageBlockHorizontalAlignment -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe RichText -> PageBlockTableCell
[valign] :: PageBlockTableCell -> Maybe PageBlockVerticalAlignment
[align] :: PageBlockTableCell -> Maybe PageBlockHorizontalAlignment
[rowspan] :: PageBlockTableCell -> Maybe Int
[colspan] :: PageBlockTableCell -> Maybe Int
[is_header] :: PageBlockTableCell -> Maybe Bool
[text] :: PageBlockTableCell -> Maybe RichText
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PageBlockTableCell.PageBlockTableCell
instance GHC.Show.Show API.PageBlockTableCell.PageBlockTableCell
instance Data.Aeson.Types.ToJSON.ToJSON API.PageBlockTableCell.PageBlockTableCell
instance Data.Aeson.Types.FromJSON.FromJSON API.PageBlockTableCell.PageBlockTableCell

module API.PageBlockCaption

-- | Contains a caption of an instant view web page block, consisting of a
--   text and a trailing credit
--   
--   <b>text</b> Content of the caption
--   
--   <b>credit</b> Block credit (like HTML tag <a>cite</a>)
data PageBlockCaption
PageBlockCaption :: Maybe RichText -> Maybe RichText -> PageBlockCaption
[credit] :: PageBlockCaption -> Maybe RichText
[text] :: PageBlockCaption -> Maybe RichText
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PageBlockCaption.PageBlockCaption
instance GHC.Show.Show API.PageBlockCaption.PageBlockCaption
instance Data.Aeson.Types.ToJSON.ToJSON API.PageBlockCaption.PageBlockCaption
instance Data.Aeson.Types.FromJSON.FromJSON API.PageBlockCaption.PageBlockCaption

module API.RichText

-- | Describes a text object inside an instant-view web page
data RichText

-- | A plain text
--   
--   <b>text</b> Text
RichTextPlain :: Maybe String -> RichText
[_text] :: RichText -> Maybe String

-- | A bold rich text
--   
--   <b>text</b> Text
RichTextBold :: Maybe RichText -> RichText
[text] :: RichText -> Maybe RichText

-- | An italicized rich text
--   
--   <b>text</b> Text
RichTextItalic :: Maybe RichText -> RichText
[text] :: RichText -> Maybe RichText

-- | An underlined rich text
--   
--   <b>text</b> Text
RichTextUnderline :: Maybe RichText -> RichText
[text] :: RichText -> Maybe RichText

-- | A strikethrough rich text
--   
--   <b>text</b> Text
RichTextStrikethrough :: Maybe RichText -> RichText
[text] :: RichText -> Maybe RichText

-- | A fixed-width rich text
--   
--   <b>text</b> Text
RichTextFixed :: Maybe RichText -> RichText
[text] :: RichText -> Maybe RichText

-- | A rich text URL link
--   
--   <b>text</b> Text
--   
--   <b>url</b> URL
--   
--   <b>is_cached</b> True, if the URL has cached instant view server-side
RichTextUrl :: Maybe Bool -> Maybe String -> Maybe RichText -> RichText
[is_cached] :: RichText -> Maybe Bool
[url] :: RichText -> Maybe String
[text] :: RichText -> Maybe RichText

-- | A rich text email link
--   
--   <b>text</b> Text
--   
--   <b>email_address</b> Email address
RichTextEmailAddress :: Maybe String -> Maybe RichText -> RichText
[email_address] :: RichText -> Maybe String
[text] :: RichText -> Maybe RichText

-- | A subscript rich text
--   
--   <b>text</b> Text
RichTextSubscript :: Maybe RichText -> RichText
[text] :: RichText -> Maybe RichText

-- | A superscript rich text
--   
--   <b>text</b> Text
RichTextSuperscript :: Maybe RichText -> RichText
[text] :: RichText -> Maybe RichText

-- | A marked rich text
--   
--   <b>text</b> Text
RichTextMarked :: Maybe RichText -> RichText
[text] :: RichText -> Maybe RichText

-- | A rich text phone number
--   
--   <b>text</b> Text
--   
--   <b>phone_number</b> Phone number
RichTextPhoneNumber :: Maybe String -> Maybe RichText -> RichText
[phone_number] :: RichText -> Maybe String
[text] :: RichText -> Maybe RichText

-- | A small image inside the text
--   
--   <b>document</b> The image represented as a document. The image can be
--   in GIF, JPEG or PNG format
--   
--   <b>width</b> Width of a bounding box in which the image must be shown;
--   0 if unknown
--   
--   <b>height</b> Height of a bounding box in which the image must be
--   shown; 0 if unknown
RichTextIcon :: Maybe Int -> Maybe Int -> Maybe Document -> RichText
[height] :: RichText -> Maybe Int
[width] :: RichText -> Maybe Int
[document] :: RichText -> Maybe Document

-- | A reference to a richTexts object on the same web page
--   
--   <b>text</b> The text
--   
--   <b>anchor_name</b> The name of a richTextAnchor object, which is the
--   first element of the target richTexts object
--   
--   <b>url</b> An HTTP URL, opening the reference
RichTextReference :: Maybe String -> Maybe String -> Maybe RichText -> RichText
[url] :: RichText -> Maybe String
[anchor_name] :: RichText -> Maybe String
[text] :: RichText -> Maybe RichText

-- | An anchor
--   
--   <b>name</b> Anchor name
RichTextAnchor :: Maybe String -> RichText
[name] :: RichText -> Maybe String

-- | A link to an anchor on the same web page
--   
--   <b>text</b> The link text
--   
--   <b>anchor_name</b> The anchor name. If the name is empty, the link
--   must bring back to top
--   
--   <b>url</b> An HTTP URL, opening the anchor
RichTextAnchorLink :: Maybe String -> Maybe String -> Maybe RichText -> RichText
[url] :: RichText -> Maybe String
[anchor_name] :: RichText -> Maybe String
[text] :: RichText -> Maybe RichText

-- | A concatenation of rich texts
--   
--   <b>texts</b> Texts
RichTexts :: Maybe [RichText] -> RichText
[texts] :: RichText -> Maybe [RichText]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.RichText.RichText
instance GHC.Show.Show API.RichText.RichText
instance Data.Aeson.Types.ToJSON.ToJSON API.RichText.RichText
instance Data.Aeson.Types.FromJSON.FromJSON API.RichText.RichText

module API.PaymentForm

-- | Contains information about an invoice payment form
--   
--   <b>id</b> The payment form identifier
--   
--   <b>invoice</b> Full information of the invoice
--   
--   <b>url</b> Payment form URL
--   
--   <b>seller_bot_user_id</b> User identifier of the seller bot
--   
--   <b>payments_provider_user_id</b> User identifier of the payment
--   provider bot
--   
--   <b>payments_provider</b> Contains information about the payment
--   provider, if available, to support it natively without the need for
--   opening the URL; may be null
--   
--   <b>saved_order_info</b> Saved server-side order information; may be
--   null
--   
--   <b>saved_credentials</b> Contains information about saved card
--   credentials; may be null
--   
--   <b>can_save_credentials</b> True, if the user can choose to save
--   credentials
--   
--   <b>need_password</b> True, if the user will be able to save
--   credentials protected by a password they set up
data PaymentForm
PaymentForm :: Maybe Bool -> Maybe Bool -> Maybe SavedCredentials -> Maybe OrderInfo -> Maybe PaymentsProviderStripe -> Maybe Int -> Maybe Int -> Maybe String -> Maybe Invoice -> Maybe Int -> PaymentForm
[need_password] :: PaymentForm -> Maybe Bool
[can_save_credentials] :: PaymentForm -> Maybe Bool
[saved_credentials] :: PaymentForm -> Maybe SavedCredentials
[saved_order_info] :: PaymentForm -> Maybe OrderInfo
[payments_provider] :: PaymentForm -> Maybe PaymentsProviderStripe
[payments_provider_user_id] :: PaymentForm -> Maybe Int
[seller_bot_user_id] :: PaymentForm -> Maybe Int
[url] :: PaymentForm -> Maybe String
[invoice] :: PaymentForm -> Maybe Invoice
[_id] :: PaymentForm -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PaymentForm.PaymentForm
instance GHC.Show.Show API.PaymentForm.PaymentForm
instance Data.Aeson.Types.ToJSON.ToJSON API.PaymentForm.PaymentForm
instance Data.Aeson.Types.FromJSON.FromJSON API.PaymentForm.PaymentForm

module API.SavedCredentials

-- | Contains information about saved card credentials
--   
--   <b>id</b> Unique identifier of the saved credentials
--   
--   <b>title</b> Title of the saved credentials
data SavedCredentials
SavedCredentials :: Maybe String -> Maybe String -> SavedCredentials
[title] :: SavedCredentials -> Maybe String
[_id] :: SavedCredentials -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.SavedCredentials.SavedCredentials
instance GHC.Show.Show API.SavedCredentials.SavedCredentials
instance Data.Aeson.Types.ToJSON.ToJSON API.SavedCredentials.SavedCredentials
instance Data.Aeson.Types.FromJSON.FromJSON API.SavedCredentials.SavedCredentials

module API.Functions.SetScopeNotificationSettings

-- | Changes notification settings for chats of a given type
--   
--   <b>scope</b> Types of chats for which to change the notification
--   settings
--   
--   <b>notification_settings</b> The new notification settings for the
--   given scope
data SetScopeNotificationSettings
SetScopeNotificationSettings :: Maybe ScopeNotificationSettings -> Maybe NotificationSettingsScope -> SetScopeNotificationSettings
[notification_settings] :: SetScopeNotificationSettings -> Maybe ScopeNotificationSettings
[scope] :: SetScopeNotificationSettings -> Maybe NotificationSettingsScope
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetScopeNotificationSettings.SetScopeNotificationSettings
instance GHC.Show.Show API.Functions.SetScopeNotificationSettings.SetScopeNotificationSettings
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetScopeNotificationSettings.SetScopeNotificationSettings
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetScopeNotificationSettings.SetScopeNotificationSettings

module API.ScopeNotificationSettings

-- | Contains information about notification settings for several chats
--   
--   <b>mute_for</b> Time left before notifications will be unmuted, in
--   seconds
--   
--   <b>sound</b> The name of an audio file to be used for notification
--   sounds; only applies to iOS applications
--   
--   <b>show_preview</b> True, if message content must be displayed in
--   notifications
--   
--   <b>disable_pinned_message_notifications</b> True, if notifications for
--   incoming pinned messages will be created as for an ordinary unread
--   message
--   
--   <b>disable_mention_notifications</b> True, if notifications for
--   messages with mentions will be created as for an ordinary unread
--   message
data ScopeNotificationSettings
ScopeNotificationSettings :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe String -> Maybe Int -> ScopeNotificationSettings
[disable_mention_notifications] :: ScopeNotificationSettings -> Maybe Bool
[disable_pinned_message_notifications] :: ScopeNotificationSettings -> Maybe Bool
[show_preview] :: ScopeNotificationSettings -> Maybe Bool
[sound] :: ScopeNotificationSettings -> Maybe String
[mute_for] :: ScopeNotificationSettings -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ScopeNotificationSettings.ScopeNotificationSettings
instance GHC.Show.Show API.ScopeNotificationSettings.ScopeNotificationSettings
instance Data.Aeson.Types.ToJSON.ToJSON API.ScopeNotificationSettings.ScopeNotificationSettings
instance Data.Aeson.Types.FromJSON.FromJSON API.ScopeNotificationSettings.ScopeNotificationSettings

module API.Functions.SearchSecretMessages

-- | Searches for messages in secret chats. Returns the results in reverse
--   chronological order. For optimal performance, the number of returned
--   messages is chosen by TDLib
--   
--   <b>chat_id</b> Identifier of the chat in which to search. Specify 0 to
--   search in all secret chats
--   
--   <b>query</b> Query to search for. If empty, searchChatMessages must be
--   used instead
--   
--   <b>offset</b> Offset of the first entry to return as received from the
--   previous request; use empty string to get first chunk of results
--   
--   <b>limit</b> The maximum number of messages to be returned; up to 100.
--   For optimal performance, the number of returned messages is chosen by
--   TDLib and can be smaller than the specified limit
--   
--   <b>filter</b> Additional filter for messages to search; pass null to
--   search for all messages
data SearchSecretMessages
SearchSecretMessages :: Maybe SearchMessagesFilter -> Maybe Int -> Maybe String -> Maybe String -> Maybe Int -> SearchSecretMessages
[_filter] :: SearchSecretMessages -> Maybe SearchMessagesFilter
[limit] :: SearchSecretMessages -> Maybe Int
[offset] :: SearchSecretMessages -> Maybe String
[query] :: SearchSecretMessages -> Maybe String
[chat_id] :: SearchSecretMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchSecretMessages.SearchSecretMessages
instance GHC.Show.Show API.Functions.SearchSecretMessages.SearchSecretMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchSecretMessages.SearchSecretMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchSecretMessages.SearchSecretMessages

module API.Functions.SearchMessages

-- | Searches for messages in all chats except secret chats. Returns the
--   results in reverse chronological order (i.e., in order of decreasing
--   (date, chat_id, message_id)).
--   
--   <ul>
--   <li>For optimal performance, the number of returned messages is chosen
--   by TDLib and can be smaller than the specified limit</li>
--   </ul>
--   
--   <b>chat_list</b> Chat list in which to search messages; pass null to
--   search in all chats regardless of their chat list. Only Main and
--   Archive chat lists are supported
--   
--   <b>query</b> Query to search for
--   
--   <b>offset_date</b> The date of the message starting from which the
--   results need to be fetched. Use 0 or any date in the future to get
--   results from the last message
--   
--   <b>offset_chat_id</b> The chat identifier of the last found message,
--   or 0 for the first request
--   
--   <b>offset_message_id</b> The message identifier of the last found
--   message, or 0 for the first request
--   
--   <b>limit</b> The maximum number of messages to be returned; up to 100.
--   For optimal performance, the number of returned messages is chosen by
--   TDLib and can be smaller than the specified limit
--   
--   <b>filter</b> Additional filter for messages to search; pass null to
--   search for all messages. Filters searchMessagesFilterCall,
--   searchMessagesFilterMissedCall, searchMessagesFilterMention,
--   searchMessagesFilterUnreadMention, searchMessagesFilterFailedToSend
--   and searchMessagesFilterPinned are unsupported in this function
--   
--   <b>min_date</b> If not 0, the minimum date of the messages to return
--   
--   <b>max_date</b> If not 0, the maximum date of the messages to return
data SearchMessages
SearchMessages :: Maybe Int -> Maybe Int -> Maybe SearchMessagesFilter -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe String -> Maybe ChatList -> SearchMessages
[max_date] :: SearchMessages -> Maybe Int
[min_date] :: SearchMessages -> Maybe Int
[_filter] :: SearchMessages -> Maybe SearchMessagesFilter
[limit] :: SearchMessages -> Maybe Int
[offset_message_id] :: SearchMessages -> Maybe Int
[offset_chat_id] :: SearchMessages -> Maybe Int
[offset_date] :: SearchMessages -> Maybe Int
[query] :: SearchMessages -> Maybe String
[chat_list] :: SearchMessages -> Maybe ChatList
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchMessages.SearchMessages
instance GHC.Show.Show API.Functions.SearchMessages.SearchMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchMessages.SearchMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchMessages.SearchMessages

module API.Functions.SearchChatMessages

-- | Searches for messages with given words in the chat. Returns the
--   results in reverse chronological order, i.e. in order of decreasing
--   message_id. Cannot be used in secret chats with a non-empty query
--   
--   <ul>
--   <li>(searchSecretMessages mmust be used instead), or without an
--   enabled message database. For optimal performance, the number of
--   returned messages is chosen by TDLib and can be smaller than the
--   specified limit</li>
--   </ul>
--   
--   <b>chat_id</b> Identifier of the chat in which to search messages
--   
--   <b>query</b> Query to search for
--   
--   <b>sender</b> Sender of messages to search for; pass null to search
--   for messages from any sender. Not supported in secret chats
--   
--   <b>from_message_id</b> Identifier of the message starting from which
--   history must be fetched; use 0 to get results from the last message
--   
--   <b>offset</b> Specify 0 to get results from exactly the
--   from_message_id or a negative offset to get the specified message and
--   some newer messages
--   
--   <b>limit</b> The maximum number of messages to be returned; must be
--   positive and can't be greater than 100. If the offset is negative, the
--   limit must be greater than -offset. For optimal performance, the
--   number of returned messages is chosen by TDLib and can be smaller than
--   the specified limit
--   
--   <b>filter</b> Additional filter for messages to search; pass null to
--   search for all messages
--   
--   <b>message_thread_id</b> If not 0, only messages in the specified
--   thread will be returned; supergroups only
data SearchChatMessages
SearchChatMessages :: Maybe Int -> Maybe SearchMessagesFilter -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe MessageSender -> Maybe String -> Maybe Int -> SearchChatMessages
[message_thread_id] :: SearchChatMessages -> Maybe Int
[_filter] :: SearchChatMessages -> Maybe SearchMessagesFilter
[limit] :: SearchChatMessages -> Maybe Int
[offset] :: SearchChatMessages -> Maybe Int
[from_message_id] :: SearchChatMessages -> Maybe Int
[sender] :: SearchChatMessages -> Maybe MessageSender
[query] :: SearchChatMessages -> Maybe String
[chat_id] :: SearchChatMessages -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SearchChatMessages.SearchChatMessages
instance GHC.Show.Show API.Functions.SearchChatMessages.SearchChatMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SearchChatMessages.SearchChatMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SearchChatMessages.SearchChatMessages

module API.Functions.GetChatMessageCount

-- | Returns approximate number of messages of the specified type in the
--   chat
--   
--   <b>chat_id</b> Identifier of the chat in which to count messages
--   
--   <b>filter</b> Filter for message content; searchMessagesFilterEmpty is
--   unsupported in this function
--   
--   <b>return_local</b> If true, returns count that is available locally
--   without sending network requests, returning -1 if the number of
--   messages is unknown
data GetChatMessageCount
GetChatMessageCount :: Maybe Bool -> Maybe SearchMessagesFilter -> Maybe Int -> GetChatMessageCount
[return_local] :: GetChatMessageCount -> Maybe Bool
[_filter] :: GetChatMessageCount -> Maybe SearchMessagesFilter
[chat_id] :: GetChatMessageCount -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetChatMessageCount.GetChatMessageCount
instance GHC.Show.Show API.Functions.GetChatMessageCount.GetChatMessageCount
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetChatMessageCount.GetChatMessageCount
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetChatMessageCount.GetChatMessageCount

module API.SearchMessagesFilter

-- | Represents a filter for message search results
data SearchMessagesFilter

-- | Returns all found messages, no filter is applied
SearchMessagesFilterEmpty :: SearchMessagesFilter

-- | Returns only animation messages
SearchMessagesFilterAnimation :: SearchMessagesFilter

-- | Returns only audio messages
SearchMessagesFilterAudio :: SearchMessagesFilter

-- | Returns only document messages
SearchMessagesFilterDocument :: SearchMessagesFilter

-- | Returns only photo messages
SearchMessagesFilterPhoto :: SearchMessagesFilter

-- | Returns only video messages
SearchMessagesFilterVideo :: SearchMessagesFilter

-- | Returns only voice note messages
SearchMessagesFilterVoiceNote :: SearchMessagesFilter

-- | Returns only photo and video messages
SearchMessagesFilterPhotoAndVideo :: SearchMessagesFilter

-- | Returns only messages containing URLs
SearchMessagesFilterUrl :: SearchMessagesFilter

-- | Returns only messages containing chat photos
SearchMessagesFilterChatPhoto :: SearchMessagesFilter

-- | Returns only call messages
SearchMessagesFilterCall :: SearchMessagesFilter

-- | Returns only incoming call messages with missed/declined discard
--   reasons
SearchMessagesFilterMissedCall :: SearchMessagesFilter

-- | Returns only video note messages
SearchMessagesFilterVideoNote :: SearchMessagesFilter

-- | Returns only voice and video note messages
SearchMessagesFilterVoiceAndVideoNote :: SearchMessagesFilter

-- | Returns only messages with mentions of the current user, or messages
--   that are replies to their messages
SearchMessagesFilterMention :: SearchMessagesFilter

-- | Returns only messages with unread mentions of the current user, or
--   messages that are replies to their messages. When using this filter
--   the results can't be additionally filtered by a query, a message
--   thread or by the sending user
SearchMessagesFilterUnreadMention :: SearchMessagesFilter

-- | Returns only failed to send messages. This filter can be used only if
--   the message database is used
SearchMessagesFilterFailedToSend :: SearchMessagesFilter

-- | Returns only pinned messages
SearchMessagesFilterPinned :: SearchMessagesFilter
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.SearchMessagesFilter.SearchMessagesFilter
instance GHC.Show.Show API.SearchMessagesFilter.SearchMessagesFilter
instance Data.Aeson.Types.ToJSON.ToJSON API.SearchMessagesFilter.SearchMessagesFilter
instance Data.Aeson.Types.FromJSON.FromJSON API.SearchMessagesFilter.SearchMessagesFilter

module API.Seconds

-- | Contains a value representing a number of seconds
--   
--   <b>seconds</b> Number of seconds
data Seconds
Seconds :: Maybe Float -> Seconds
[seconds] :: Seconds -> Maybe Float
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Seconds.Seconds
instance GHC.Show.Show API.Seconds.Seconds
instance Data.Aeson.Types.ToJSON.ToJSON API.Seconds.Seconds
instance Data.Aeson.Types.FromJSON.FromJSON API.Seconds.Seconds

module API.SecretChat

-- | Represents a secret chat
--   
--   <b>id</b> Secret chat identifier
--   
--   <b>user_id</b> Identifier of the chat partner
--   
--   <b>state</b> State of the secret chat
--   
--   <b>is_outbound</b> True, if the chat was created by the current user;
--   otherwise false
--   
--   <b>key_hash</b> Hash of the currently used key for comparison with the
--   hash of the chat partner's key. This is a string of 36 little-endian
--   bytes, which must be split into groups of 2 bits, each denoting a
--   pixel of one of 4 colors FFFFFF, D5E6F3, 2D5775, and 2F99C9.
--   
--   <ul>
--   <li>The pixels must be used to make a 12x12 square image filled from
--   left to right, top to bottom. Alternatively, the first 32 bytes of the
--   hash can be converted to the hexadecimal format and printed as 32
--   2-digit hex numbers</li>
--   </ul>
--   
--   <b>layer</b> Secret chat layer; determines features supported by the
--   chat partner's application. Nested text entities and underline and
--   strikethrough entities are supported if the layer &gt;= 101
data SecretChat
SecretChat :: Maybe Int -> Maybe String -> Maybe Bool -> Maybe SecretChatState -> Maybe Int -> Maybe Int -> SecretChat
[layer] :: SecretChat -> Maybe Int
[key_hash] :: SecretChat -> Maybe String
[is_outbound] :: SecretChat -> Maybe Bool
[state] :: SecretChat -> Maybe SecretChatState
[user_id] :: SecretChat -> Maybe Int
[_id] :: SecretChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.SecretChat.SecretChat
instance GHC.Show.Show API.SecretChat.SecretChat
instance Data.Aeson.Types.ToJSON.ToJSON API.SecretChat.SecretChat
instance Data.Aeson.Types.FromJSON.FromJSON API.SecretChat.SecretChat

module API.SecretChatState

-- | Describes the current secret chat state
data SecretChatState

-- | The secret chat is not yet created; waiting for the other user to get
--   online
SecretChatStatePending :: SecretChatState

-- | The secret chat is ready to use
SecretChatStateReady :: SecretChatState

-- | The secret chat is closed
SecretChatStateClosed :: SecretChatState
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.SecretChatState.SecretChatState
instance GHC.Show.Show API.SecretChatState.SecretChatState
instance Data.Aeson.Types.ToJSON.ToJSON API.SecretChatState.SecretChatState
instance Data.Aeson.Types.FromJSON.FromJSON API.SecretChatState.SecretChatState

module API.Session

-- | Contains information about one session in a Telegram application used
--   by the current user. Sessions must be shown to the user in the
--   returned order
--   
--   <b>id</b> Session identifier
--   
--   <b>is_current</b> True, if this session is the current session
--   
--   <b>is_password_pending</b> True, if a password is needed to complete
--   authorization of the session
--   
--   <b>api_id</b> Telegram API identifier, as provided by the application
--   
--   <b>application_name</b> Name of the application, as provided by the
--   application
--   
--   <b>application_version</b> The version of the application, as provided
--   by the application
--   
--   <b>is_official_application</b> True, if the application is an official
--   application or uses the api_id of an official application
--   
--   <b>device_model</b> Model of the device the application has been run
--   or is running on, as provided by the application
--   
--   <b>platform</b> Operating system the application has been run or is
--   running on, as provided by the application
--   
--   <b>system_version</b> Version of the operating system the application
--   has been run or is running on, as provided by the application
--   
--   <b>log_in_date</b> Point in time (Unix timestamp) when the user has
--   logged in
--   
--   <b>last_active_date</b> Point in time (Unix timestamp) when the
--   session was last used
--   
--   <b>ip</b> IP address from which the session was created, in
--   human-readable format
--   
--   <b>country</b> A two-letter country code for the country from which
--   the session was created, based on the IP address
--   
--   <b>region</b> Region code from which the session was created, based on
--   the IP address
data Session
Session :: Maybe String -> Maybe String -> Maybe String -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> Maybe String -> Maybe Bool -> Maybe String -> Maybe String -> Maybe Int -> Maybe Bool -> Maybe Bool -> Maybe Int -> Session
[region] :: Session -> Maybe String
[country] :: Session -> Maybe String
[ip] :: Session -> Maybe String
[last_active_date] :: Session -> Maybe Int
[log_in_date] :: Session -> Maybe Int
[system_version] :: Session -> Maybe String
[platform] :: Session -> Maybe String
[device_model] :: Session -> Maybe String
[is_official_application] :: Session -> Maybe Bool
[application_version] :: Session -> Maybe String
[application_name] :: Session -> Maybe String
[api_id] :: Session -> Maybe Int
[is_password_pending] :: Session -> Maybe Bool
[is_current] :: Session -> Maybe Bool
[_id] :: Session -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Session.Session
instance GHC.Show.Show API.Session.Session
instance Data.Aeson.Types.ToJSON.ToJSON API.Session.Session
instance Data.Aeson.Types.FromJSON.FromJSON API.Session.Session

module API.Sessions

-- | Contains a list of sessions
--   
--   <b>sessions</b> List of sessions
data Sessions
Sessions :: Maybe [Session] -> Sessions
[sessions] :: Sessions -> Maybe [Session]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Sessions.Sessions
instance GHC.Show.Show API.Sessions.Sessions
instance Data.Aeson.Types.ToJSON.ToJSON API.Sessions.Sessions
instance Data.Aeson.Types.FromJSON.FromJSON API.Sessions.Sessions

module API.PaymentReceipt

-- | Contains information about a successful payment
--   
--   <b>title</b> Product title
--   
--   <b>param_description</b> Product description
--   
--   <b>photo</b> Product photo; may be null
--   
--   <b>date</b> Point in time (Unix timestamp) when the payment was made
--   
--   <b>seller_bot_user_id</b> User identifier of the seller bot
--   
--   <b>payments_provider_user_id</b> User identifier of the payment
--   provider bot
--   
--   <b>invoice</b> Contains information about the invoice
--   
--   <b>order_info</b> Order information; may be null
--   
--   <b>shipping_option</b> Chosen shipping option; may be null
--   
--   <b>credentials_title</b> Title of the saved credentials chosen by the
--   buyer
--   
--   <b>tip_amount</b> The amount of tip chosen by the buyer in the
--   smallest units of the currency
data PaymentReceipt
PaymentReceipt :: Maybe Int -> Maybe String -> Maybe ShippingOption -> Maybe OrderInfo -> Maybe Invoice -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Photo -> Maybe String -> Maybe String -> PaymentReceipt
[tip_amount] :: PaymentReceipt -> Maybe Int
[credentials_title] :: PaymentReceipt -> Maybe String
[shipping_option] :: PaymentReceipt -> Maybe ShippingOption
[order_info] :: PaymentReceipt -> Maybe OrderInfo
[invoice] :: PaymentReceipt -> Maybe Invoice
[payments_provider_user_id] :: PaymentReceipt -> Maybe Int
[seller_bot_user_id] :: PaymentReceipt -> Maybe Int
[date] :: PaymentReceipt -> Maybe Int
[photo] :: PaymentReceipt -> Maybe Photo
[description] :: PaymentReceipt -> Maybe String
[title] :: PaymentReceipt -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PaymentReceipt.PaymentReceipt
instance GHC.Show.Show API.PaymentReceipt.PaymentReceipt
instance Data.Aeson.Types.ToJSON.ToJSON API.PaymentReceipt.PaymentReceipt
instance Data.Aeson.Types.FromJSON.FromJSON API.PaymentReceipt.PaymentReceipt

module API.Functions.AnswerShippingQuery

-- | Sets the result of a shipping query; for bots only
--   
--   <b>shipping_query_id</b> Identifier of the shipping query
--   
--   <b>shipping_options</b> Available shipping options
--   
--   <b>error_message</b> An error message, empty on success
data AnswerShippingQuery
AnswerShippingQuery :: Maybe String -> Maybe [ShippingOption] -> Maybe Int -> AnswerShippingQuery
[error_message] :: AnswerShippingQuery -> Maybe String
[shipping_options] :: AnswerShippingQuery -> Maybe [ShippingOption]
[shipping_query_id] :: AnswerShippingQuery -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.AnswerShippingQuery.AnswerShippingQuery
instance GHC.Show.Show API.Functions.AnswerShippingQuery.AnswerShippingQuery
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.AnswerShippingQuery.AnswerShippingQuery
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.AnswerShippingQuery.AnswerShippingQuery

module API.ShippingOption

-- | One shipping option
--   
--   <b>id</b> Shipping option identifier
--   
--   <b>title</b> Option title
--   
--   <b>price_parts</b> A list of objects used to calculate the total
--   shipping costs
data ShippingOption
ShippingOption :: Maybe [LabeledPricePart] -> Maybe String -> Maybe String -> ShippingOption
[price_parts] :: ShippingOption -> Maybe [LabeledPricePart]
[title] :: ShippingOption -> Maybe String
[_id] :: ShippingOption -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ShippingOption.ShippingOption
instance GHC.Show.Show API.ShippingOption.ShippingOption
instance Data.Aeson.Types.ToJSON.ToJSON API.ShippingOption.ShippingOption
instance Data.Aeson.Types.FromJSON.FromJSON API.ShippingOption.ShippingOption

module API.SponsoredMessage

-- | Describes a sponsored message
--   
--   <b>id</b> Unique sponsored message identifier
--   
--   <b>sponsor_chat_id</b> Chat identifier
--   
--   <b>start_parameter</b> Parameter for the bot start message if the
--   sponsored chat is a chat with a bot
--   
--   <b>content</b> Content of the message
data SponsoredMessage
SponsoredMessage :: Maybe MessageContent -> Maybe String -> Maybe Int -> Maybe Int -> SponsoredMessage
[content] :: SponsoredMessage -> Maybe MessageContent
[start_parameter] :: SponsoredMessage -> Maybe String
[sponsor_chat_id] :: SponsoredMessage -> Maybe Int
[_id] :: SponsoredMessage -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.SponsoredMessage.SponsoredMessage
instance GHC.Show.Show API.SponsoredMessage.SponsoredMessage
instance Data.Aeson.Types.ToJSON.ToJSON API.SponsoredMessage.SponsoredMessage
instance Data.Aeson.Types.FromJSON.FromJSON API.SponsoredMessage.SponsoredMessage

module API.SponsoredMessages

-- | Contains a list of sponsored messages
--   
--   <b>messages</b> List of sponsored messages
data SponsoredMessages
SponsoredMessages :: Maybe [SponsoredMessage] -> SponsoredMessages
[messages] :: SponsoredMessages -> Maybe [SponsoredMessage]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.SponsoredMessages.SponsoredMessages
instance GHC.Show.Show API.SponsoredMessages.SponsoredMessages
instance Data.Aeson.Types.ToJSON.ToJSON API.SponsoredMessages.SponsoredMessages
instance Data.Aeson.Types.FromJSON.FromJSON API.SponsoredMessages.SponsoredMessages

module API.MessageStatistics

-- | A detailed statistics about a message
--   
--   <b>message_interaction_graph</b> A graph containing number of message
--   views and shares
data MessageStatistics
MessageStatistics :: Maybe StatisticalGraph -> MessageStatistics
[message_interaction_graph] :: MessageStatistics -> Maybe StatisticalGraph
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageStatistics.MessageStatistics
instance GHC.Show.Show API.MessageStatistics.MessageStatistics
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageStatistics.MessageStatistics
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageStatistics.MessageStatistics

module API.StatisticalGraph

-- | Describes a statistical graph
data StatisticalGraph

-- | A graph data
--   
--   <b>json_data</b> Graph data in JSON format
--   
--   <b>zoom_token</b> If non-empty, a token which can be used to receive a
--   zoomed in graph
StatisticalGraphData :: Maybe String -> Maybe String -> StatisticalGraph
[zoom_token] :: StatisticalGraph -> Maybe String
[json_data] :: StatisticalGraph -> Maybe String

-- | The graph data to be asynchronously loaded through getStatisticalGraph
--   
--   <b>token</b> The token to use for data loading
StatisticalGraphAsync :: Maybe String -> StatisticalGraph
[token] :: StatisticalGraph -> Maybe String

-- | An error message to be shown to the user instead of the graph
--   
--   <b>error_message</b> The error message
StatisticalGraphError :: Maybe String -> StatisticalGraph
[error_message] :: StatisticalGraph -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.StatisticalGraph.StatisticalGraph
instance GHC.Show.Show API.StatisticalGraph.StatisticalGraph
instance Data.Aeson.Types.ToJSON.ToJSON API.StatisticalGraph.StatisticalGraph
instance Data.Aeson.Types.FromJSON.FromJSON API.StatisticalGraph.StatisticalGraph

module API.ChatStatistics

-- | Contains a detailed statistics about a chat
data ChatStatistics

-- | A detailed statistics about a supergroup chat
--   
--   <b>period</b> A period to which the statistics applies
--   
--   <b>member_count</b> Number of members in the chat
--   
--   <b>message_count</b> Number of messages sent to the chat
--   
--   <b>viewer_count</b> Number of users who viewed messages in the chat
--   
--   <b>sender_count</b> Number of users who sent messages to the chat
--   
--   <b>member_count_graph</b> A graph containing number of members in the
--   chat
--   
--   <b>join_graph</b> A graph containing number of members joined and left
--   the chat
--   
--   <b>join_by_source_graph</b> A graph containing number of new member
--   joins per source
--   
--   <b>language_graph</b> A graph containing distribution of active users
--   per language
--   
--   <b>message_content_graph</b> A graph containing distribution of sent
--   messages by content type
--   
--   <b>action_graph</b> A graph containing number of different actions in
--   the chat
--   
--   <b>day_graph</b> A graph containing distribution of message views per
--   hour
--   
--   <b>week_graph</b> A graph containing distribution of message views per
--   day of week
--   
--   <b>top_senders</b> List of users sent most messages in the last week
--   
--   <b>top_administrators</b> List of most active administrators in the
--   last week
--   
--   <b>top_inviters</b> List of most active inviters of new members in the
--   last week
ChatStatisticsSupergroup :: Maybe [ChatStatisticsInviterInfo] -> Maybe [ChatStatisticsAdministratorActionsInfo] -> Maybe [ChatStatisticsMessageSenderInfo] -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalValue -> Maybe StatisticalValue -> Maybe StatisticalValue -> Maybe StatisticalValue -> Maybe DateRange -> ChatStatistics
[top_inviters] :: ChatStatistics -> Maybe [ChatStatisticsInviterInfo]
[top_administrators] :: ChatStatistics -> Maybe [ChatStatisticsAdministratorActionsInfo]
[top_senders] :: ChatStatistics -> Maybe [ChatStatisticsMessageSenderInfo]
[week_graph] :: ChatStatistics -> Maybe StatisticalGraph
[day_graph] :: ChatStatistics -> Maybe StatisticalGraph
[action_graph] :: ChatStatistics -> Maybe StatisticalGraph
[message_content_graph] :: ChatStatistics -> Maybe StatisticalGraph
[language_graph] :: ChatStatistics -> Maybe StatisticalGraph
[join_by_source_graph] :: ChatStatistics -> Maybe StatisticalGraph
[join_graph] :: ChatStatistics -> Maybe StatisticalGraph
[member_count_graph] :: ChatStatistics -> Maybe StatisticalGraph
[sender_count] :: ChatStatistics -> Maybe StatisticalValue
[viewer_count] :: ChatStatistics -> Maybe StatisticalValue
[message_count] :: ChatStatistics -> Maybe StatisticalValue
[member_count] :: ChatStatistics -> Maybe StatisticalValue
[period] :: ChatStatistics -> Maybe DateRange

-- | A detailed statistics about a channel chat
--   
--   <b>period</b> A period to which the statistics applies
--   
--   <b>member_count</b> Number of members in the chat
--   
--   <b>mean_view_count</b> Mean number of times the recently sent messages
--   was viewed
--   
--   <b>mean_share_count</b> Mean number of times the recently sent
--   messages was shared
--   
--   <b>enabled_notifications_percentage</b> A percentage of users with
--   enabled notifications for the chat
--   
--   <b>member_count_graph</b> A graph containing number of members in the
--   chat
--   
--   <b>join_graph</b> A graph containing number of members joined and left
--   the chat
--   
--   <b>mute_graph</b> A graph containing number of members muted and
--   unmuted the chat
--   
--   <b>view_count_by_hour_graph</b> A graph containing number of message
--   views in a given hour in the last two weeks
--   
--   <b>view_count_by_source_graph</b> A graph containing number of message
--   views per source
--   
--   <b>join_by_source_graph</b> A graph containing number of new member
--   joins per source
--   
--   <b>language_graph</b> A graph containing number of users viewed chat
--   messages per language
--   
--   <b>message_interaction_graph</b> A graph containing number of chat
--   message views and shares
--   
--   <b>instant_view_interaction_graph</b> A graph containing number of
--   views of associated with the chat instant views
--   
--   <b>recent_message_interactions</b> Detailed statistics about number of
--   views and shares of recently sent messages
ChatStatisticsChannel :: Maybe [ChatStatisticsMessageInteractionInfo] -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe StatisticalGraph -> Maybe Float -> Maybe StatisticalValue -> Maybe StatisticalValue -> Maybe StatisticalValue -> Maybe DateRange -> ChatStatistics
[recent_message_interactions] :: ChatStatistics -> Maybe [ChatStatisticsMessageInteractionInfo]
[instant_view_interaction_graph] :: ChatStatistics -> Maybe StatisticalGraph
[message_interaction_graph] :: ChatStatistics -> Maybe StatisticalGraph
[language_graph] :: ChatStatistics -> Maybe StatisticalGraph
[join_by_source_graph] :: ChatStatistics -> Maybe StatisticalGraph
[view_count_by_source_graph] :: ChatStatistics -> Maybe StatisticalGraph
[view_count_by_hour_graph] :: ChatStatistics -> Maybe StatisticalGraph
[mute_graph] :: ChatStatistics -> Maybe StatisticalGraph
[join_graph] :: ChatStatistics -> Maybe StatisticalGraph
[member_count_graph] :: ChatStatistics -> Maybe StatisticalGraph
[enabled_notifications_percentage] :: ChatStatistics -> Maybe Float
[mean_share_count] :: ChatStatistics -> Maybe StatisticalValue
[mean_view_count] :: ChatStatistics -> Maybe StatisticalValue
[member_count] :: ChatStatistics -> Maybe StatisticalValue
[period] :: ChatStatistics -> Maybe DateRange
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatStatistics.ChatStatistics
instance GHC.Show.Show API.ChatStatistics.ChatStatistics
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatStatistics.ChatStatistics
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatStatistics.ChatStatistics

module API.StatisticalValue

-- | A value with information about its recent changes
--   
--   <b>value</b> The current value
--   
--   <b>previous_value</b> The value for the previous day
--   
--   <b>growth_rate_percentage</b> The growth rate of the value, as a
--   percentage
data StatisticalValue
StatisticalValue :: Maybe Float -> Maybe Float -> Maybe Float -> StatisticalValue
[growth_rate_percentage] :: StatisticalValue -> Maybe Float
[previous_value] :: StatisticalValue -> Maybe Float
[value] :: StatisticalValue -> Maybe Float
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.StatisticalValue.StatisticalValue
instance GHC.Show.Show API.StatisticalValue.StatisticalValue
instance Data.Aeson.Types.ToJSON.ToJSON API.StatisticalValue.StatisticalValue
instance Data.Aeson.Types.FromJSON.FromJSON API.StatisticalValue.StatisticalValue

module API.DiceStickers

-- | Contains animated stickers which must be used for dice animation
--   rendering
data DiceStickers

-- | A regular animated sticker
--   
--   <b>sticker</b> The animated sticker with the dice animation
DiceStickersRegular :: Maybe Sticker -> DiceStickers
[sticker] :: DiceStickers -> Maybe Sticker

-- | Animated stickers to be combined into a slot machine
--   
--   <b>background</b> The animated sticker with the slot machine
--   background. The background animation must start playing after all reel
--   animations finish
--   
--   <b>lever</b> The animated sticker with the lever animation. The lever
--   animation must play once in the initial dice state
--   
--   <b>left_reel</b> The animated sticker with the left reel
--   
--   <b>center_reel</b> The animated sticker with the center reel
--   
--   <b>right_reel</b> The animated sticker with the right reel
DiceStickersSlotMachine :: Maybe Sticker -> Maybe Sticker -> Maybe Sticker -> Maybe Sticker -> Maybe Sticker -> DiceStickers
[right_reel] :: DiceStickers -> Maybe Sticker
[center_reel] :: DiceStickers -> Maybe Sticker
[left_reel] :: DiceStickers -> Maybe Sticker
[lever] :: DiceStickers -> Maybe Sticker
[background] :: DiceStickers -> Maybe Sticker
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.DiceStickers.DiceStickers
instance GHC.Show.Show API.DiceStickers.DiceStickers
instance Data.Aeson.Types.ToJSON.ToJSON API.DiceStickers.DiceStickers
instance Data.Aeson.Types.FromJSON.FromJSON API.DiceStickers.DiceStickers

module API.StickerSets

-- | Represents a list of sticker sets
--   
--   <b>total_count</b> Approximate total number of sticker sets found
--   
--   <b>sets</b> List of sticker sets
data StickerSets
StickerSets :: Maybe [StickerSetInfo] -> Maybe Int -> StickerSets
[sets] :: StickerSets -> Maybe [StickerSetInfo]
[total_count] :: StickerSets -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.StickerSets.StickerSets
instance GHC.Show.Show API.StickerSets.StickerSets
instance Data.Aeson.Types.ToJSON.ToJSON API.StickerSets.StickerSets
instance Data.Aeson.Types.FromJSON.FromJSON API.StickerSets.StickerSets

module API.Stickers

-- | Represents a list of stickers
--   
--   <b>stickers</b> List of stickers
data Stickers
Stickers :: Maybe [Sticker] -> Stickers
[stickers] :: Stickers -> Maybe [Sticker]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Stickers.Stickers
instance GHC.Show.Show API.Stickers.Stickers
instance Data.Aeson.Types.ToJSON.ToJSON API.Stickers.Stickers
instance Data.Aeson.Types.FromJSON.FromJSON API.Stickers.Stickers

module API.StorageStatistics

-- | Contains the exact storage usage statistics split by chats and file
--   type
--   
--   <b>size</b> Total size of files, in bytes
--   
--   <b>count</b> Total number of files
--   
--   <b>by_chat</b> Statistics split by chats
data StorageStatistics
StorageStatistics :: Maybe [StorageStatisticsByChat] -> Maybe Int -> Maybe Int -> StorageStatistics
[by_chat] :: StorageStatistics -> Maybe [StorageStatisticsByChat]
[count] :: StorageStatistics -> Maybe Int
[size] :: StorageStatistics -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.StorageStatistics.StorageStatistics
instance GHC.Show.Show API.StorageStatistics.StorageStatistics
instance Data.Aeson.Types.ToJSON.ToJSON API.StorageStatistics.StorageStatistics
instance Data.Aeson.Types.FromJSON.FromJSON API.StorageStatistics.StorageStatistics

module API.StorageStatisticsByChat

-- | Contains the storage usage statistics for a specific chat
--   
--   <b>chat_id</b> Chat identifier; 0 if none
--   
--   <b>size</b> Total size of the files in the chat, in bytes
--   
--   <b>count</b> Total number of files in the chat
--   
--   <b>by_file_type</b> Statistics split by file types
data StorageStatisticsByChat
StorageStatisticsByChat :: Maybe [StorageStatisticsByFileType] -> Maybe Int -> Maybe Int -> Maybe Int -> StorageStatisticsByChat
[by_file_type] :: StorageStatisticsByChat -> Maybe [StorageStatisticsByFileType]
[count] :: StorageStatisticsByChat -> Maybe Int
[size] :: StorageStatisticsByChat -> Maybe Int
[chat_id] :: StorageStatisticsByChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.StorageStatisticsByChat.StorageStatisticsByChat
instance GHC.Show.Show API.StorageStatisticsByChat.StorageStatisticsByChat
instance Data.Aeson.Types.ToJSON.ToJSON API.StorageStatisticsByChat.StorageStatisticsByChat
instance Data.Aeson.Types.FromJSON.FromJSON API.StorageStatisticsByChat.StorageStatisticsByChat

module API.StorageStatisticsByFileType

-- | Contains the storage usage statistics for a specific file type
--   
--   <b>file_type</b> File type
--   
--   <b>size</b> Total size of the files, in bytes
--   
--   <b>count</b> Total number of files
data StorageStatisticsByFileType
StorageStatisticsByFileType :: Maybe Int -> Maybe Int -> Maybe FileType -> StorageStatisticsByFileType
[count] :: StorageStatisticsByFileType -> Maybe Int
[size] :: StorageStatisticsByFileType -> Maybe Int
[file_type] :: StorageStatisticsByFileType -> Maybe FileType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.StorageStatisticsByFileType.StorageStatisticsByFileType
instance GHC.Show.Show API.StorageStatisticsByFileType.StorageStatisticsByFileType
instance Data.Aeson.Types.ToJSON.ToJSON API.StorageStatisticsByFileType.StorageStatisticsByFileType
instance Data.Aeson.Types.FromJSON.FromJSON API.StorageStatisticsByFileType.StorageStatisticsByFileType

module API.StorageStatisticsFast

-- | Contains approximate storage usage statistics, excluding files of
--   unknown file type
--   
--   <b>files_size</b> Approximate total size of files, in bytes
--   
--   <b>file_count</b> Approximate number of files
--   
--   <b>database_size</b> Size of the database
--   
--   <b>language_pack_database_size</b> Size of the language pack database
--   
--   <b>log_size</b> Size of the TDLib internal log
data StorageStatisticsFast
StorageStatisticsFast :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> StorageStatisticsFast
[log_size] :: StorageStatisticsFast -> Maybe Int
[language_pack_database_size] :: StorageStatisticsFast -> Maybe Int
[database_size] :: StorageStatisticsFast -> Maybe Int
[file_count] :: StorageStatisticsFast -> Maybe Int
[files_size] :: StorageStatisticsFast -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.StorageStatisticsFast.StorageStatisticsFast
instance GHC.Show.Show API.StorageStatisticsFast.StorageStatisticsFast
instance Data.Aeson.Types.ToJSON.ToJSON API.StorageStatisticsFast.StorageStatisticsFast
instance Data.Aeson.Types.FromJSON.FromJSON API.StorageStatisticsFast.StorageStatisticsFast

module API.Functions.HideSuggestedAction

-- | Hides a suggested action
--   
--   <b>action</b> Suggested action to hide
data HideSuggestedAction
HideSuggestedAction :: Maybe SuggestedAction -> HideSuggestedAction
[action] :: HideSuggestedAction -> Maybe SuggestedAction
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.HideSuggestedAction.HideSuggestedAction
instance GHC.Show.Show API.Functions.HideSuggestedAction.HideSuggestedAction
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.HideSuggestedAction.HideSuggestedAction
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.HideSuggestedAction.HideSuggestedAction

module API.SuggestedAction

-- | Describes an action suggested to the current user
data SuggestedAction

-- | Suggests the user to enable
--   "archive_and_mute_new_chats_from_unknown_users" option
SuggestedActionEnableArchiveAndMuteNewChats :: SuggestedAction

-- | Suggests the user to check whether 2-step verification password is
--   still remembered
SuggestedActionCheckPassword :: SuggestedAction

-- | Suggests the user to check whether authorization phone number is
--   correct and change the phone number if it is inaccessible
SuggestedActionCheckPhoneNumber :: SuggestedAction

-- | Suggests the user to see a hint about meaning of one and two ticks on
--   sent message
SuggestedActionSeeTicksHint :: SuggestedAction

-- | Suggests the user to convert specified supergroup to a broadcast group
--   
--   <b>supergroup_id</b> Supergroup identifier
SuggestedActionConvertToBroadcastGroup :: Maybe Int -> SuggestedAction
[supergroup_id] :: SuggestedAction -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.SuggestedAction.SuggestedAction
instance GHC.Show.Show API.SuggestedAction.SuggestedAction
instance Data.Aeson.Types.ToJSON.ToJSON API.SuggestedAction.SuggestedAction
instance Data.Aeson.Types.FromJSON.FromJSON API.SuggestedAction.SuggestedAction

module API.Supergroup

-- | Represents a supergroup or channel with zero or more members
--   (subscribers in the case of channels). From the point of view of the
--   system, a channel is a special kind of a supergroup: only
--   administrators can post and see the list of members, and posts from
--   all administrators use the name and photo of the channel instead of
--   individual names and profile photos. Unlike supergroups, channels can
--   have an unlimited number of subscribers
--   
--   <b>id</b> Supergroup or channel identifier
--   
--   <b>username</b> Username of the supergroup or channel; empty for
--   private supergroups or channels
--   
--   <b>date</b> Point in time (Unix timestamp) when the current user
--   joined, or the point in time when the supergroup or channel was
--   created, in case the user is not a member
--   
--   <b>status</b> Status of the current user in the supergroup or channel;
--   custom title will be always empty
--   
--   <b>member_count</b> Number of members in the supergroup or channel; 0
--   if unknown. Currently it is guaranteed to be known only if the
--   supergroup or channel was received through searchPublicChats,
--   searchChatsNearby, getInactiveSupergroupChats,
--   getSuitableDiscussionChats, getGroupsInCommon, or
--   getUserPrivacySettingRules
--   
--   <b>has_linked_chat</b> True, if the channel has a discussion group, or
--   the supergroup is the designated discussion group for a channel
--   
--   <b>has_location</b> True, if the supergroup is connected to a
--   location, i.e. the supergroup is a location-based supergroup
--   
--   <b>sign_messages</b> True, if messages sent to the channel need to
--   contain information about the sender. This field is only applicable to
--   channels
--   
--   <b>is_slow_mode_enabled</b> True, if the slow mode is enabled in the
--   supergroup
--   
--   <b>is_channel</b> True, if the supergroup is a channel
--   
--   <b>is_broadcast_group</b> True, if the supergroup is a broadcast
--   group, i.e. only administrators can send messages and there is no
--   limit on number of members
--   
--   <b>is_verified</b> True, if the supergroup or channel is verified
--   
--   <b>restriction_reason</b> If non-empty, contains a human-readable
--   description of the reason why access to this supergroup or channel
--   must be restricted
--   
--   <b>is_scam</b> True, if many users reported this supergroup or channel
--   as a scam
--   
--   <b>is_fake</b> True, if many users reported this supergroup or channel
--   as a fake account
data Supergroup
Supergroup :: Maybe Bool -> Maybe Bool -> Maybe String -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe ChatMemberStatus -> Maybe Int -> Maybe String -> Maybe Int -> Supergroup
[is_fake] :: Supergroup -> Maybe Bool
[is_scam] :: Supergroup -> Maybe Bool
[restriction_reason] :: Supergroup -> Maybe String
[is_verified] :: Supergroup -> Maybe Bool
[is_broadcast_group] :: Supergroup -> Maybe Bool
[is_channel] :: Supergroup -> Maybe Bool
[is_slow_mode_enabled] :: Supergroup -> Maybe Bool
[sign_messages] :: Supergroup -> Maybe Bool
[has_location] :: Supergroup -> Maybe Bool
[has_linked_chat] :: Supergroup -> Maybe Bool
[member_count] :: Supergroup -> Maybe Int
[status] :: Supergroup -> Maybe ChatMemberStatus
[date] :: Supergroup -> Maybe Int
[username] :: Supergroup -> Maybe String
[_id] :: Supergroup -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Supergroup.Supergroup
instance GHC.Show.Show API.Supergroup.Supergroup
instance Data.Aeson.Types.ToJSON.ToJSON API.Supergroup.Supergroup
instance Data.Aeson.Types.FromJSON.FromJSON API.Supergroup.Supergroup

module API.SupergroupFullInfo

-- | Contains full information about a supergroup or channel
--   
--   <b>photo</b> Chat photo; may be null
--   
--   <b>param_description</b> Supergroup or channel description
--   
--   <b>member_count</b> Number of members in the supergroup or channel; 0
--   if unknown
--   
--   <b>administrator_count</b> Number of privileged users in the
--   supergroup or channel; 0 if unknown
--   
--   <b>restricted_count</b> Number of restricted users in the supergroup;
--   0 if unknown
--   
--   <b>banned_count</b> Number of users banned from chat; 0 if unknown
--   
--   <b>linked_chat_id</b> Chat identifier of a discussion group for the
--   channel, or a channel, for which the supergroup is the designated
--   discussion group; 0 if none or unknown
--   
--   <b>slow_mode_delay</b> Delay between consecutive sent messages for
--   non-administrator supergroup members, in seconds
--   
--   <b>slow_mode_delay_expires_in</b> Time left before next message can be
--   sent in the supergroup, in seconds. An updateSupergroupFullInfo update
--   is not triggered when value of this field changes, but both new and
--   old values are non-zero
--   
--   <b>can_get_members</b> True, if members of the chat can be retrieved
--   
--   <b>can_set_username</b> True, if the chat username can be changed
--   
--   <b>can_set_sticker_set</b> True, if the supergroup sticker set can be
--   changed
--   
--   <b>can_set_location</b> True, if the supergroup location can be
--   changed
--   
--   <b>can_get_statistics</b> True, if the supergroup or channel
--   statistics are available
--   
--   <b>is_all_history_available</b> True, if new chat members will have
--   access to old messages. In public or discussion groups and both public
--   and private channels, old messages are always available, so this
--   option affects only private supergroups without a linked chat. The
--   value of this field is only available for chat administrators
--   
--   <b>sticker_set_id</b> Identifier of the supergroup sticker set; 0 if
--   none
--   
--   <b>location</b> Location to which the supergroup is connected; may be
--   null
--   
--   <b>invite_link</b> Primary invite link for this chat; may be null. For
--   chat administrators with can_invite_users right only
--   
--   <b>bot_commands</b> List of commands of bots in the group
--   
--   <b>upgraded_from_basic_group_id</b> Identifier of the basic group from
--   which supergroup was upgraded; 0 if none
--   
--   <b>upgraded_from_max_message_id</b> Identifier of the last message in
--   the basic group from which supergroup was upgraded; 0 if none
data SupergroupFullInfo
SupergroupFullInfo :: Maybe Int -> Maybe Int -> Maybe [BotCommands] -> Maybe ChatInviteLink -> Maybe ChatLocation -> Maybe Int -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Float -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe String -> Maybe ChatPhoto -> SupergroupFullInfo
[upgraded_from_max_message_id] :: SupergroupFullInfo -> Maybe Int
[upgraded_from_basic_group_id] :: SupergroupFullInfo -> Maybe Int
[bot_commands] :: SupergroupFullInfo -> Maybe [BotCommands]
[invite_link] :: SupergroupFullInfo -> Maybe ChatInviteLink
[location] :: SupergroupFullInfo -> Maybe ChatLocation
[sticker_set_id] :: SupergroupFullInfo -> Maybe Int
[is_all_history_available] :: SupergroupFullInfo -> Maybe Bool
[can_get_statistics] :: SupergroupFullInfo -> Maybe Bool
[can_set_location] :: SupergroupFullInfo -> Maybe Bool
[can_set_sticker_set] :: SupergroupFullInfo -> Maybe Bool
[can_set_username] :: SupergroupFullInfo -> Maybe Bool
[can_get_members] :: SupergroupFullInfo -> Maybe Bool
[slow_mode_delay_expires_in] :: SupergroupFullInfo -> Maybe Float
[slow_mode_delay] :: SupergroupFullInfo -> Maybe Int
[linked_chat_id] :: SupergroupFullInfo -> Maybe Int
[banned_count] :: SupergroupFullInfo -> Maybe Int
[restricted_count] :: SupergroupFullInfo -> Maybe Int
[administrator_count] :: SupergroupFullInfo -> Maybe Int
[member_count] :: SupergroupFullInfo -> Maybe Int
[description] :: SupergroupFullInfo -> Maybe String
[photo] :: SupergroupFullInfo -> Maybe ChatPhoto
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.SupergroupFullInfo.SupergroupFullInfo
instance GHC.Show.Show API.SupergroupFullInfo.SupergroupFullInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.SupergroupFullInfo.SupergroupFullInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.SupergroupFullInfo.SupergroupFullInfo

module API.Functions.GetSupergroupMembers

-- | Returns information about members or banned users in a supergroup or
--   channel. Can be used only if supergroupFullInfo.can_get_members ==
--   true; additionally, administrator privileges may be required for some
--   filters
--   
--   <b>supergroup_id</b> Identifier of the supergroup or channel
--   
--   <b>filter</b> The type of users to return; pass null to use
--   supergroupMembersFilterRecent
--   
--   <b>offset</b> Number of users to skip
--   
--   <b>limit</b> The maximum number of users be returned; up to 200
data GetSupergroupMembers
GetSupergroupMembers :: Maybe Int -> Maybe Int -> Maybe SupergroupMembersFilter -> Maybe Int -> GetSupergroupMembers
[limit] :: GetSupergroupMembers -> Maybe Int
[offset] :: GetSupergroupMembers -> Maybe Int
[_filter] :: GetSupergroupMembers -> Maybe SupergroupMembersFilter
[supergroup_id] :: GetSupergroupMembers -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetSupergroupMembers.GetSupergroupMembers
instance GHC.Show.Show API.Functions.GetSupergroupMembers.GetSupergroupMembers
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetSupergroupMembers.GetSupergroupMembers
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetSupergroupMembers.GetSupergroupMembers

module API.SupergroupMembersFilter

-- | Specifies the kind of chat members to return in getSupergroupMembers
data SupergroupMembersFilter

-- | Returns recently active users in reverse chronological order
SupergroupMembersFilterRecent :: SupergroupMembersFilter

-- | Returns contacts of the user, which are members of the supergroup or
--   channel
--   
--   <b>query</b> Query to search for
SupergroupMembersFilterContacts :: Maybe String -> SupergroupMembersFilter
[query] :: SupergroupMembersFilter -> Maybe String

-- | Returns the owner and administrators
SupergroupMembersFilterAdministrators :: SupergroupMembersFilter

-- | Used to search for supergroup or channel members via a (string) query
--   
--   <b>query</b> Query to search for
SupergroupMembersFilterSearch :: Maybe String -> SupergroupMembersFilter
[query] :: SupergroupMembersFilter -> Maybe String

-- | Returns restricted supergroup members; can be used only by
--   administrators
--   
--   <b>query</b> Query to search for
SupergroupMembersFilterRestricted :: Maybe String -> SupergroupMembersFilter
[query] :: SupergroupMembersFilter -> Maybe String

-- | Returns users banned from the supergroup or channel; can be used only
--   by administrators
--   
--   <b>query</b> Query to search for
SupergroupMembersFilterBanned :: Maybe String -> SupergroupMembersFilter
[query] :: SupergroupMembersFilter -> Maybe String

-- | Returns users which can be mentioned in the supergroup
--   
--   <b>query</b> Query to search for
--   
--   <b>message_thread_id</b> If non-zero, the identifier of the current
--   message thread
SupergroupMembersFilterMention :: Maybe Int -> Maybe String -> SupergroupMembersFilter
[message_thread_id] :: SupergroupMembersFilter -> Maybe Int
[query] :: SupergroupMembersFilter -> Maybe String

-- | Returns bot members of the supergroup or channel
SupergroupMembersFilterBots :: SupergroupMembersFilter
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.SupergroupMembersFilter.SupergroupMembersFilter
instance GHC.Show.Show API.SupergroupMembersFilter.SupergroupMembersFilter
instance Data.Aeson.Types.ToJSON.ToJSON API.SupergroupMembersFilter.SupergroupMembersFilter
instance Data.Aeson.Types.FromJSON.FromJSON API.SupergroupMembersFilter.SupergroupMembersFilter

module API.TMeUrl

-- | Represents a URL linking to an internal Telegram entity
--   
--   <b>url</b> URL
--   
--   <b>type</b> Type of the URL
data TMeUrl
TMeUrl :: Maybe TMeUrlType -> Maybe String -> TMeUrl
[_type] :: TMeUrl -> Maybe TMeUrlType
[url] :: TMeUrl -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TMeUrl.TMeUrl
instance GHC.Show.Show API.TMeUrl.TMeUrl
instance Data.Aeson.Types.ToJSON.ToJSON API.TMeUrl.TMeUrl
instance Data.Aeson.Types.FromJSON.FromJSON API.TMeUrl.TMeUrl

module API.TMeUrlType

-- | Describes the type of a URL linking to an internal Telegram entity
data TMeUrlType

-- | A URL linking to a user
--   
--   <b>user_id</b> Identifier of the user
TMeUrlTypeUser :: Maybe Int -> TMeUrlType
[user_id] :: TMeUrlType -> Maybe Int

-- | A URL linking to a public supergroup or channel
--   
--   <b>supergroup_id</b> Identifier of the supergroup or channel
TMeUrlTypeSupergroup :: Maybe Int -> TMeUrlType
[supergroup_id] :: TMeUrlType -> Maybe Int

-- | A chat invite link
--   
--   <b>info</b> Chat invite link info
TMeUrlTypeChatInvite :: Maybe ChatInviteLinkInfo -> TMeUrlType
[info] :: TMeUrlType -> Maybe ChatInviteLinkInfo

-- | A URL linking to a sticker set
--   
--   <b>sticker_set_id</b> Identifier of the sticker set
TMeUrlTypeStickerSet :: Maybe Int -> TMeUrlType
[sticker_set_id] :: TMeUrlType -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TMeUrlType.TMeUrlType
instance GHC.Show.Show API.TMeUrlType.TMeUrlType
instance Data.Aeson.Types.ToJSON.ToJSON API.TMeUrlType.TMeUrlType
instance Data.Aeson.Types.FromJSON.FromJSON API.TMeUrlType.TMeUrlType

module API.TMeUrls

-- | Contains a list of t.me URLs
--   
--   <b>urls</b> List of URLs
data TMeUrls
TMeUrls :: Maybe [TMeUrl] -> TMeUrls
[urls] :: TMeUrls -> Maybe [TMeUrl]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TMeUrls.TMeUrls
instance GHC.Show.Show API.TMeUrls.TMeUrls
instance Data.Aeson.Types.ToJSON.ToJSON API.TMeUrls.TMeUrls
instance Data.Aeson.Types.FromJSON.FromJSON API.TMeUrls.TMeUrls

module API.Functions.SetTdlibParameters

-- | Sets the parameters for TDLib initialization. Works only when the
--   current authorization state is authorizationStateWaitTdlibParameters
--   
--   <b>parameters</b> Parameters for TDLib initialization
data SetTdlibParameters
SetTdlibParameters :: Maybe TdlibParameters -> SetTdlibParameters
[parameters] :: SetTdlibParameters -> Maybe TdlibParameters
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetTdlibParameters.SetTdlibParameters
instance GHC.Show.Show API.Functions.SetTdlibParameters.SetTdlibParameters
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetTdlibParameters.SetTdlibParameters
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetTdlibParameters.SetTdlibParameters

module API.TdlibParameters

-- | Contains parameters for TDLib initialization
--   
--   <b>use_test_dc</b> If set to true, the Telegram test environment will
--   be used instead of the production environment
--   
--   <b>database_directory</b> The path to the directory for the persistent
--   database; if empty, the current working directory will be used
--   
--   <b>files_directory</b> The path to the directory for storing files; if
--   empty, database_directory will be used
--   
--   <b>use_file_database</b> If set to true, information about downloaded
--   and uploaded files will be saved between application restarts
--   
--   <b>use_chat_info_database</b> If set to true, the library will
--   maintain a cache of users, basic groups, supergroups, channels and
--   secret chats. Implies use_file_database
--   
--   <b>use_message_database</b> If set to true, the library will maintain
--   a cache of chats and messages. Implies use_chat_info_database
--   
--   <b>use_secret_chats</b> If set to true, support for secret chats will
--   be enabled
--   
--   <b>api_id</b> Application identifier for Telegram API access, which
--   can be obtained at <a>https://my.telegram.org</a>
--   
--   <b>api_hash</b> Application identifier hash for Telegram API access,
--   which can be obtained at <a>https://my.telegram.org</a>
--   
--   <b>system_language_code</b> IETF language tag of the user's operating
--   system language; must be non-empty
--   
--   <b>device_model</b> Model of the device the application is being run
--   on; must be non-empty
--   
--   <b>system_version</b> Version of the operating system the application
--   is being run on. If empty, the version is automatically detected by
--   TDLib
--   
--   <b>application_version</b> Application version; must be non-empty
--   
--   <b>enable_storage_optimizer</b> If set to true, old files will
--   automatically be deleted
--   
--   <b>ignore_file_names</b> If set to true, original file names will be
--   ignored. Otherwise, downloaded files will be saved under names as
--   close as possible to the original name
data TdlibParameters
TdlibParameters :: Maybe Bool -> Maybe Bool -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe Int -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe String -> Maybe String -> Maybe Bool -> TdlibParameters
[ignore_file_names] :: TdlibParameters -> Maybe Bool
[enable_storage_optimizer] :: TdlibParameters -> Maybe Bool
[application_version] :: TdlibParameters -> Maybe String
[system_version] :: TdlibParameters -> Maybe String
[device_model] :: TdlibParameters -> Maybe String
[system_language_code] :: TdlibParameters -> Maybe String
[api_hash] :: TdlibParameters -> Maybe String
[api_id] :: TdlibParameters -> Maybe Int
[use_secret_chats] :: TdlibParameters -> Maybe Bool
[use_message_database] :: TdlibParameters -> Maybe Bool
[use_chat_info_database] :: TdlibParameters -> Maybe Bool
[use_file_database] :: TdlibParameters -> Maybe Bool
[files_directory] :: TdlibParameters -> Maybe String
[database_directory] :: TdlibParameters -> Maybe String
[use_test_dc] :: TdlibParameters -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TdlibParameters.TdlibParameters
instance GHC.Show.Show API.TdlibParameters.TdlibParameters
instance Data.Aeson.Types.ToJSON.ToJSON API.TdlibParameters.TdlibParameters
instance Data.Aeson.Types.FromJSON.FromJSON API.TdlibParameters.TdlibParameters

module API.TemporaryPasswordState

-- | Returns information about the availability of a temporary password,
--   which can be used for payments
--   
--   <b>has_password</b> True, if a temporary password is available
--   
--   <b>valid_for</b> Time left before the temporary password expires, in
--   seconds
data TemporaryPasswordState
TemporaryPasswordState :: Maybe Int -> Maybe Bool -> TemporaryPasswordState
[valid_for] :: TemporaryPasswordState -> Maybe Int
[has_password] :: TemporaryPasswordState -> Maybe Bool
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TemporaryPasswordState.TemporaryPasswordState
instance GHC.Show.Show API.TemporaryPasswordState.TemporaryPasswordState
instance Data.Aeson.Types.ToJSON.ToJSON API.TemporaryPasswordState.TemporaryPasswordState
instance Data.Aeson.Types.FromJSON.FromJSON API.TemporaryPasswordState.TemporaryPasswordState

module API.AuthorizationState

-- | Represents the current authorization state of the TDLib client
data AuthorizationState

-- | TDLib needs TdlibParameters for initialization
AuthorizationStateWaitTdlibParameters :: AuthorizationState

-- | TDLib needs an encryption key to decrypt the local database
--   
--   <b>is_encrypted</b> True, if the database is currently encrypted
AuthorizationStateWaitEncryptionKey :: Maybe Bool -> AuthorizationState
[is_encrypted] :: AuthorizationState -> Maybe Bool

-- | TDLib needs the user's phone number to authorize. Call
--   <tt>setAuthenticationPhoneNumber</tt> to provide the phone number, or
--   use <tt>requestQrCodeAuthentication</tt>, or
--   <tt>checkAuthenticationBotToken</tt> for other authentication options
AuthorizationStateWaitPhoneNumber :: AuthorizationState

-- | TDLib needs the user's authentication code to authorize
--   
--   <b>code_info</b> Information about the authorization code that was
--   sent
AuthorizationStateWaitCode :: Maybe AuthenticationCodeInfo -> AuthorizationState
[code_info] :: AuthorizationState -> Maybe AuthenticationCodeInfo

-- | The user needs to confirm authorization on another logged in device by
--   scanning a QR code with the provided link
--   
--   <b>link</b> A tg:// URL for the QR code. The link will be updated
--   frequently
AuthorizationStateWaitOtherDeviceConfirmation :: Maybe String -> AuthorizationState
[link] :: AuthorizationState -> Maybe String

-- | The user is unregistered and need to accept terms of service and enter
--   their first name and last name to finish registration
--   
--   <b>terms_of_service</b> Telegram terms of service
AuthorizationStateWaitRegistration :: Maybe TermsOfService -> AuthorizationState
[terms_of_service] :: AuthorizationState -> Maybe TermsOfService

-- | The user has been authorized, but needs to enter a password to start
--   using the application
--   
--   <b>password_hint</b> Hint for the password; may be empty
--   
--   <b>has_recovery_email_address</b> True, if a recovery email address
--   has been set up
--   
--   <b>recovery_email_address_pattern</b> Pattern of the email address to
--   which the recovery email was sent; empty until a recovery email has
--   been sent
AuthorizationStateWaitPassword :: Maybe String -> Maybe Bool -> Maybe String -> AuthorizationState
[recovery_email_address_pattern] :: AuthorizationState -> Maybe String
[has_recovery_email_address] :: AuthorizationState -> Maybe Bool
[password_hint] :: AuthorizationState -> Maybe String

-- | The user has been successfully authorized. TDLib is now ready to
--   answer queries
AuthorizationStateReady :: AuthorizationState

-- | The user is currently logging out
AuthorizationStateLoggingOut :: AuthorizationState

-- | TDLib is closing, all subsequent queries will be answered with the
--   error 500. Note that closing TDLib can take a while. All resources
--   will be freed only after authorizationStateClosed has been received
AuthorizationStateClosing :: AuthorizationState

-- | TDLib client is in its final state. All databases are closed and all
--   resources are released. No other updates will be received after this.
--   All queries will be responded to
--   
--   <ul>
--   <li>with error code 500. To continue working, one must create a new
--   instance of the TDLib client</li>
--   </ul>
AuthorizationStateClosed :: AuthorizationState
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.AuthorizationState.AuthorizationState
instance GHC.Show.Show API.AuthorizationState.AuthorizationState
instance Data.Aeson.Types.ToJSON.ToJSON API.AuthorizationState.AuthorizationState
instance Data.Aeson.Types.FromJSON.FromJSON API.AuthorizationState.AuthorizationState

module API.TermsOfService

-- | Contains Telegram terms of service
--   
--   <b>text</b> Text of the terms of service
--   
--   <b>min_user_age</b> The minimum age of a user to be able to accept the
--   terms; 0 if any
--   
--   <b>show_popup</b> True, if a blocking popup with terms of service must
--   be shown to the user
data TermsOfService
TermsOfService :: Maybe Bool -> Maybe Int -> Maybe FormattedText -> TermsOfService
[show_popup] :: TermsOfService -> Maybe Bool
[min_user_age] :: TermsOfService -> Maybe Int
[text] :: TermsOfService -> Maybe FormattedText
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TermsOfService.TermsOfService
instance GHC.Show.Show API.TermsOfService.TermsOfService
instance Data.Aeson.Types.ToJSON.ToJSON API.TermsOfService.TermsOfService
instance Data.Aeson.Types.FromJSON.FromJSON API.TermsOfService.TermsOfService

module API.TestBytes

-- | A simple object containing a sequence of bytes; for testing only
--   
--   <b>value</b> Bytes
data TestBytes
TestBytes :: Maybe String -> TestBytes
[value] :: TestBytes -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TestBytes.TestBytes
instance GHC.Show.Show API.TestBytes.TestBytes
instance Data.Aeson.Types.ToJSON.ToJSON API.TestBytes.TestBytes
instance Data.Aeson.Types.FromJSON.FromJSON API.TestBytes.TestBytes

module API.Functions.TestCallVectorIntObject

-- | Returns the received vector of objects containing a number; for
--   testing only. This is an offline method. Can be called before
--   authorization
--   
--   <b>x</b> Vector of objects to return
data TestCallVectorIntObject
TestCallVectorIntObject :: Maybe [TestInt] -> TestCallVectorIntObject
[x] :: TestCallVectorIntObject -> Maybe [TestInt]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TestCallVectorIntObject.TestCallVectorIntObject
instance GHC.Show.Show API.Functions.TestCallVectorIntObject.TestCallVectorIntObject
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TestCallVectorIntObject.TestCallVectorIntObject
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TestCallVectorIntObject.TestCallVectorIntObject

module API.TestInt

-- | A simple object containing a number; for testing only
--   
--   <b>value</b> Number
data TestInt
TestInt :: Maybe Int -> TestInt
[value] :: TestInt -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TestInt.TestInt
instance GHC.Show.Show API.TestInt.TestInt
instance Data.Aeson.Types.ToJSON.ToJSON API.TestInt.TestInt
instance Data.Aeson.Types.FromJSON.FromJSON API.TestInt.TestInt

module API.Functions.TestCallVectorStringObject

-- | Returns the received vector of objects containing a string; for
--   testing only. This is an offline method. Can be called before
--   authorization
--   
--   <b>x</b> Vector of objects to return
data TestCallVectorStringObject
TestCallVectorStringObject :: Maybe [TestString] -> TestCallVectorStringObject
[x] :: TestCallVectorStringObject -> Maybe [TestString]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.TestCallVectorStringObject.TestCallVectorStringObject
instance GHC.Show.Show API.Functions.TestCallVectorStringObject.TestCallVectorStringObject
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.TestCallVectorStringObject.TestCallVectorStringObject
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.TestCallVectorStringObject.TestCallVectorStringObject

module API.TestString

-- | A simple object containing a string; for testing only
--   
--   <b>value</b> String
data TestString
TestString :: Maybe String -> TestString
[value] :: TestString -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TestString.TestString
instance GHC.Show.Show API.TestString.TestString
instance Data.Aeson.Types.ToJSON.ToJSON API.TestString.TestString
instance Data.Aeson.Types.FromJSON.FromJSON API.TestString.TestString

module API.TestVectorInt

-- | A simple object containing a vector of numbers; for testing only
--   
--   <b>value</b> Vector of numbers
data TestVectorInt
TestVectorInt :: Maybe [Int] -> TestVectorInt
[value] :: TestVectorInt -> Maybe [Int]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TestVectorInt.TestVectorInt
instance GHC.Show.Show API.TestVectorInt.TestVectorInt
instance Data.Aeson.Types.ToJSON.ToJSON API.TestVectorInt.TestVectorInt
instance Data.Aeson.Types.FromJSON.FromJSON API.TestVectorInt.TestVectorInt

module API.TestVectorIntObject

-- | A simple object containing a vector of objects that hold a number; for
--   testing only
--   
--   <b>value</b> Vector of objects
data TestVectorIntObject
TestVectorIntObject :: Maybe [TestInt] -> TestVectorIntObject
[value] :: TestVectorIntObject -> Maybe [TestInt]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TestVectorIntObject.TestVectorIntObject
instance GHC.Show.Show API.TestVectorIntObject.TestVectorIntObject
instance Data.Aeson.Types.ToJSON.ToJSON API.TestVectorIntObject.TestVectorIntObject
instance Data.Aeson.Types.FromJSON.FromJSON API.TestVectorIntObject.TestVectorIntObject

module API.TestVectorString

-- | A simple object containing a vector of strings; for testing only
--   
--   <b>value</b> Vector of strings
data TestVectorString
TestVectorString :: Maybe [String] -> TestVectorString
[value] :: TestVectorString -> Maybe [String]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TestVectorString.TestVectorString
instance GHC.Show.Show API.TestVectorString.TestVectorString
instance Data.Aeson.Types.ToJSON.ToJSON API.TestVectorString.TestVectorString
instance Data.Aeson.Types.FromJSON.FromJSON API.TestVectorString.TestVectorString

module API.TestVectorStringObject

-- | A simple object containing a vector of objects that hold a string; for
--   testing only
--   
--   <b>value</b> Vector of objects
data TestVectorStringObject
TestVectorStringObject :: Maybe [TestString] -> TestVectorStringObject
[value] :: TestVectorStringObject -> Maybe [TestString]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TestVectorStringObject.TestVectorStringObject
instance GHC.Show.Show API.TestVectorStringObject.TestVectorStringObject
instance Data.Aeson.Types.ToJSON.ToJSON API.TestVectorStringObject.TestVectorStringObject
instance Data.Aeson.Types.FromJSON.FromJSON API.TestVectorStringObject.TestVectorStringObject

module API.Text

-- | Contains some text
--   
--   <b>text</b> Text
data Text
Text :: Maybe String -> Text
[text] :: Text -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Text.Text
instance GHC.Show.Show API.Text.Text
instance Data.Aeson.Types.ToJSON.ToJSON API.Text.Text
instance Data.Aeson.Types.FromJSON.FromJSON API.Text.Text

module API.TextEntities

-- | Contains a list of text entities
--   
--   <b>entities</b> List of text entities
data TextEntities
TextEntities :: Maybe [TextEntity] -> TextEntities
[entities] :: TextEntities -> Maybe [TextEntity]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TextEntities.TextEntities
instance GHC.Show.Show API.TextEntities.TextEntities
instance Data.Aeson.Types.ToJSON.ToJSON API.TextEntities.TextEntities
instance Data.Aeson.Types.FromJSON.FromJSON API.TextEntities.TextEntities

module API.FormattedText

-- | A text with some entities
--   
--   <b>text</b> The text
--   
--   <b>entities</b> Entities contained in the text. Entities can be
--   nested, but must not mutually intersect with each other.
--   
--   <ul>
--   <li>Pre, Code and PreCode entities can't contain other entities. Bold,
--   Italic, Underline and Strikethrough entities can contain and to be
--   contained in all other entities. All other entities can't contain each
--   other</li>
--   </ul>
data FormattedText
FormattedText :: Maybe [TextEntity] -> Maybe String -> FormattedText
[entities] :: FormattedText -> Maybe [TextEntity]
[text] :: FormattedText -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.FormattedText.FormattedText
instance GHC.Show.Show API.FormattedText.FormattedText
instance Data.Aeson.Types.ToJSON.ToJSON API.FormattedText.FormattedText
instance Data.Aeson.Types.FromJSON.FromJSON API.FormattedText.FormattedText

module API.TextEntity

-- | Represents a part of the text that needs to be formatted in some
--   unusual way
--   
--   <b>offset</b> Offset of the entity, in UTF-16 code units
--   
--   <b>length</b> Length of the entity, in UTF-16 code units
--   
--   <b>type</b> Type of the entity
data TextEntity
TextEntity :: Maybe TextEntityType -> Maybe Int -> Maybe Int -> TextEntity
[_type] :: TextEntity -> Maybe TextEntityType
[_length] :: TextEntity -> Maybe Int
[offset] :: TextEntity -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TextEntity.TextEntity
instance GHC.Show.Show API.TextEntity.TextEntity
instance Data.Aeson.Types.ToJSON.ToJSON API.TextEntity.TextEntity
instance Data.Aeson.Types.FromJSON.FromJSON API.TextEntity.TextEntity

module API.TextEntityType

-- | Represents a part of the text which must be formatted differently
data TextEntityType

-- | A mention of a user by their username
TextEntityTypeMention :: TextEntityType

-- | A hashtag text, beginning with "#"
TextEntityTypeHashtag :: TextEntityType

-- | A cashtag text, beginning with "$" and consisting of capital English
--   letters (e.g., "$USD")
TextEntityTypeCashtag :: TextEntityType

-- | A bot command, beginning with "/"
TextEntityTypeBotCommand :: TextEntityType

-- | An HTTP URL
TextEntityTypeUrl :: TextEntityType

-- | An email address
TextEntityTypeEmailAddress :: TextEntityType

-- | A phone number
TextEntityTypePhoneNumber :: TextEntityType

-- | A bank card number. The getBankCardInfo method can be used to get
--   information about the bank card
TextEntityTypeBankCardNumber :: TextEntityType

-- | A bold text
TextEntityTypeBold :: TextEntityType

-- | An italic text
TextEntityTypeItalic :: TextEntityType

-- | An underlined text
TextEntityTypeUnderline :: TextEntityType

-- | A strikethrough text
TextEntityTypeStrikethrough :: TextEntityType

-- | Text that must be formatted as if inside a code HTML tag
TextEntityTypeCode :: TextEntityType

-- | Text that must be formatted as if inside a pre HTML tag
TextEntityTypePre :: TextEntityType

-- | Text that must be formatted as if inside pre, and code HTML tags
--   
--   <b>language</b> Programming language of the code; as defined by the
--   sender
TextEntityTypePreCode :: Maybe String -> TextEntityType
[language] :: TextEntityType -> Maybe String

-- | A text description shown instead of a raw URL
--   
--   <b>url</b> HTTP or tg:// URL to be opened when the link is clicked
TextEntityTypeTextUrl :: Maybe String -> TextEntityType
[url] :: TextEntityType -> Maybe String

-- | A text shows instead of a raw mention of the user (e.g., when the user
--   has no username)
--   
--   <b>user_id</b> Identifier of the mentioned user
TextEntityTypeMentionName :: Maybe Int -> TextEntityType
[user_id] :: TextEntityType -> Maybe Int

-- | A media timestamp
--   
--   <b>media_timestamp</b> Timestamp from which a video<i>audio</i>video
--   note/voice note playing must start, in seconds. The media can be in
--   the content or the web page preview of the current message, or in the
--   same places in the replied message
TextEntityTypeMediaTimestamp :: Maybe Int -> TextEntityType
[media_timestamp] :: TextEntityType -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TextEntityType.TextEntityType
instance GHC.Show.Show API.TextEntityType.TextEntityType
instance Data.Aeson.Types.ToJSON.ToJSON API.TextEntityType.TextEntityType
instance Data.Aeson.Types.FromJSON.FromJSON API.TextEntityType.TextEntityType

module API.Functions.ParseTextEntities

-- | Parses Bold, Italic, Underline, Strikethrough, Code, Pre, PreCode,
--   TextUrl and MentionName entities contained in the text. Can be called
--   synchronously
--   
--   <b>text</b> The text to parse
--   
--   <b>parse_mode</b> Text parse mode
data ParseTextEntities
ParseTextEntities :: Maybe TextParseMode -> Maybe String -> ParseTextEntities
[parse_mode] :: ParseTextEntities -> Maybe TextParseMode
[text] :: ParseTextEntities -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.ParseTextEntities.ParseTextEntities
instance GHC.Show.Show API.Functions.ParseTextEntities.ParseTextEntities
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.ParseTextEntities.ParseTextEntities
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.ParseTextEntities.ParseTextEntities

module API.TextParseMode

-- | Describes the way the text needs to be parsed for TextEntities
data TextParseMode

-- | The text uses Markdown-style formatting
--   
--   <b>version</b> Version of the parser: 0 or 1 - Telegram Bot API
--   <a>Markdown</a> parse mode, 2 - Telegram Bot API <a>MarkdownV2</a>
--   parse mode
TextParseModeMarkdown :: Maybe Int -> TextParseMode
[version] :: TextParseMode -> Maybe Int

-- | The text uses HTML-style formatting. The same as Telegram Bot API
--   <a>HTML</a> parse mode
TextParseModeHTML :: TextParseMode
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TextParseMode.TextParseMode
instance GHC.Show.Show API.TextParseMode.TextParseMode
instance Data.Aeson.Types.ToJSON.ToJSON API.TextParseMode.TextParseMode
instance Data.Aeson.Types.FromJSON.FromJSON API.TextParseMode.TextParseMode

module API.ChatTheme

-- | Describes a chat theme
--   
--   <b>name</b> Theme name
--   
--   <b>light_settings</b> Theme settings for a light chat theme
--   
--   <b>dark_settings</b> Theme settings for a dark chat theme
data ChatTheme
ChatTheme :: Maybe ThemeSettings -> Maybe ThemeSettings -> Maybe String -> ChatTheme
[dark_settings] :: ChatTheme -> Maybe ThemeSettings
[light_settings] :: ChatTheme -> Maybe ThemeSettings
[name] :: ChatTheme -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ChatTheme.ChatTheme
instance GHC.Show.Show API.ChatTheme.ChatTheme
instance Data.Aeson.Types.ToJSON.ToJSON API.ChatTheme.ChatTheme
instance Data.Aeson.Types.FromJSON.FromJSON API.ChatTheme.ChatTheme

module API.ThemeSettings

-- | Describes theme settings
--   
--   <b>accent_color</b> Theme accent color in ARGB format
--   
--   <b>background</b> The background to be used in chats; may be null
--   
--   <b>outgoing_message_fill</b> The fill to be used as a background for
--   outgoing messages
--   
--   <b>animate_outgoing_message_fill</b> If true, the freeform gradient
--   fill needs to be animated on every sent message
--   
--   <b>outgoing_message_accent_color</b> Accent color of outgoing messages
--   in ARGB format
data ThemeSettings
ThemeSettings :: Maybe Int -> Maybe Bool -> Maybe BackgroundFill -> Maybe Background -> Maybe Int -> ThemeSettings
[outgoing_message_accent_color] :: ThemeSettings -> Maybe Int
[animate_outgoing_message_fill] :: ThemeSettings -> Maybe Bool
[outgoing_message_fill] :: ThemeSettings -> Maybe BackgroundFill
[background] :: ThemeSettings -> Maybe Background
[accent_color] :: ThemeSettings -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ThemeSettings.ThemeSettings
instance GHC.Show.Show API.ThemeSettings.ThemeSettings
instance Data.Aeson.Types.ToJSON.ToJSON API.ThemeSettings.ThemeSettings
instance Data.Aeson.Types.FromJSON.FromJSON API.ThemeSettings.ThemeSettings

module API.StickerSetInfo

-- | Represents short information about a sticker set
--   
--   <b>id</b> Identifier of the sticker set
--   
--   <b>title</b> Title of the sticker set
--   
--   <b>name</b> Name of the sticker set
--   
--   <b>thumbnail</b> Sticker set thumbnail in WEBP or TGS format with
--   width and height 100; may be null
--   
--   <b>thumbnail_outline</b> Sticker set thumbnail's outline represented
--   as a list of closed vector paths; may be empty. The coordinate system
--   origin is in the upper-left corner
--   
--   <b>is_installed</b> True, if the sticker set has been installed by the
--   current user
--   
--   <b>is_archived</b> True, if the sticker set has been archived. A
--   sticker set can't be installed and archived simultaneously
--   
--   <b>is_official</b> True, if the sticker set is official
--   
--   <b>is_animated</b> True, is the stickers in the set are animated
--   
--   <b>is_masks</b> True, if the stickers in the set are masks
--   
--   <b>is_viewed</b> True for already viewed trending sticker sets
--   
--   <b>size</b> Total number of stickers in the set
--   
--   <b>covers</b> Contains up to the first 5 stickers from the set,
--   depending on the context. If the application needs more stickers the
--   full sticker set needs to be requested
data StickerSetInfo
StickerSetInfo :: Maybe [Sticker] -> Maybe Int -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe [ClosedVectorPath] -> Maybe Thumbnail -> Maybe String -> Maybe String -> Maybe Int -> StickerSetInfo
[covers] :: StickerSetInfo -> Maybe [Sticker]
[size] :: StickerSetInfo -> Maybe Int
[is_viewed] :: StickerSetInfo -> Maybe Bool
[is_masks] :: StickerSetInfo -> Maybe Bool
[is_animated] :: StickerSetInfo -> Maybe Bool
[is_official] :: StickerSetInfo -> Maybe Bool
[is_archived] :: StickerSetInfo -> Maybe Bool
[is_installed] :: StickerSetInfo -> Maybe Bool
[thumbnail_outline] :: StickerSetInfo -> Maybe [ClosedVectorPath]
[thumbnail] :: StickerSetInfo -> Maybe Thumbnail
[name] :: StickerSetInfo -> Maybe String
[title] :: StickerSetInfo -> Maybe String
[_id] :: StickerSetInfo -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.StickerSetInfo.StickerSetInfo
instance GHC.Show.Show API.StickerSetInfo.StickerSetInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.StickerSetInfo.StickerSetInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.StickerSetInfo.StickerSetInfo

module API.StickerSet

-- | Represents a sticker set
--   
--   <b>id</b> Identifier of the sticker set
--   
--   <b>title</b> Title of the sticker set
--   
--   <b>name</b> Name of the sticker set
--   
--   <b>thumbnail</b> Sticker set thumbnail in WEBP or TGS format with
--   width and height 100; may be null. The file can be downloaded only
--   before the thumbnail is changed
--   
--   <b>thumbnail_outline</b> Sticker set thumbnail's outline represented
--   as a list of closed vector paths; may be empty. The coordinate system
--   origin is in the upper-left corner
--   
--   <b>is_installed</b> True, if the sticker set has been installed by the
--   current user
--   
--   <b>is_archived</b> True, if the sticker set has been archived. A
--   sticker set can't be installed and archived simultaneously
--   
--   <b>is_official</b> True, if the sticker set is official
--   
--   <b>is_animated</b> True, is the stickers in the set are animated
--   
--   <b>is_masks</b> True, if the stickers in the set are masks
--   
--   <b>is_viewed</b> True for already viewed trending sticker sets
--   
--   <b>stickers</b> List of stickers in this set
--   
--   <b>emojis</b> A list of emoji corresponding to the stickers in the
--   same order. The list is only for informational purposes, because a
--   sticker is always sent with a fixed emoji from the corresponding
--   Sticker object
data StickerSet
StickerSet :: Maybe [Emojis] -> Maybe [Sticker] -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe [ClosedVectorPath] -> Maybe Thumbnail -> Maybe String -> Maybe String -> Maybe Int -> StickerSet
[emojis] :: StickerSet -> Maybe [Emojis]
[stickers] :: StickerSet -> Maybe [Sticker]
[is_viewed] :: StickerSet -> Maybe Bool
[is_masks] :: StickerSet -> Maybe Bool
[is_animated] :: StickerSet -> Maybe Bool
[is_official] :: StickerSet -> Maybe Bool
[is_archived] :: StickerSet -> Maybe Bool
[is_installed] :: StickerSet -> Maybe Bool
[thumbnail_outline] :: StickerSet -> Maybe [ClosedVectorPath]
[thumbnail] :: StickerSet -> Maybe Thumbnail
[name] :: StickerSet -> Maybe String
[title] :: StickerSet -> Maybe String
[_id] :: StickerSet -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.StickerSet.StickerSet
instance GHC.Show.Show API.StickerSet.StickerSet
instance Data.Aeson.Types.ToJSON.ToJSON API.StickerSet.StickerSet
instance Data.Aeson.Types.FromJSON.FromJSON API.StickerSet.StickerSet

module API.Sticker

-- | Describes a sticker
--   
--   <b>set_id</b> The identifier of the sticker set to which the sticker
--   belongs; 0 if none
--   
--   <b>width</b> Sticker width; as defined by the sender
--   
--   <b>height</b> Sticker height; as defined by the sender
--   
--   <b>emoji</b> Emoji corresponding to the sticker
--   
--   <b>is_animated</b> True, if the sticker is an animated sticker in TGS
--   format
--   
--   <b>is_mask</b> True, if the sticker is a mask
--   
--   <b>mask_position</b> Position where the mask is placed; may be null
--   
--   <b>outline</b> Sticker's outline represented as a list of closed
--   vector paths; may be empty. The coordinate system origin is in the
--   upper-left corner
--   
--   <b>thumbnail</b> Sticker thumbnail in WEBP or JPEG format; may be null
--   
--   <b>sticker</b> File containing the sticker
data Sticker
Sticker :: Maybe File -> Maybe Thumbnail -> Maybe [ClosedVectorPath] -> Maybe MaskPosition -> Maybe Bool -> Maybe Bool -> Maybe String -> Maybe Int -> Maybe Int -> Maybe Int -> Sticker
[sticker] :: Sticker -> Maybe File
[thumbnail] :: Sticker -> Maybe Thumbnail
[outline] :: Sticker -> Maybe [ClosedVectorPath]
[mask_position] :: Sticker -> Maybe MaskPosition
[is_mask] :: Sticker -> Maybe Bool
[is_animated] :: Sticker -> Maybe Bool
[emoji] :: Sticker -> Maybe String
[height] :: Sticker -> Maybe Int
[width] :: Sticker -> Maybe Int
[set_id] :: Sticker -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Sticker.Sticker
instance GHC.Show.Show API.Sticker.Sticker
instance Data.Aeson.Types.ToJSON.ToJSON API.Sticker.Sticker
instance Data.Aeson.Types.FromJSON.FromJSON API.Sticker.Sticker

module API.Document

-- | Describes a document of any type
--   
--   <b>file_name</b> Original name of the file; as defined by the sender
--   
--   <b>mime_type</b> MIME type of the file; as defined by the sender
--   
--   <b>minithumbnail</b> Document minithumbnail; may be null
--   
--   <b>thumbnail</b> Document thumbnail in JPEG or PNG format (PNG will be
--   used only for background patterns); as defined by the sender; may be
--   null
--   
--   <b>document</b> File containing the document
data Document
Document :: Maybe File -> Maybe Thumbnail -> Maybe Minithumbnail -> Maybe String -> Maybe String -> Document
[document] :: Document -> Maybe File
[thumbnail] :: Document -> Maybe Thumbnail
[minithumbnail] :: Document -> Maybe Minithumbnail
[mime_type] :: Document -> Maybe String
[file_name] :: Document -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Document.Document
instance GHC.Show.Show API.Document.Document
instance Data.Aeson.Types.ToJSON.ToJSON API.Document.Document
instance Data.Aeson.Types.FromJSON.FromJSON API.Document.Document

module API.Audio

-- | Describes an audio file. Audio is usually in MP3 or M4A format
--   
--   <b>duration</b> Duration of the audio, in seconds; as defined by the
--   sender
--   
--   <b>title</b> Title of the audio; as defined by the sender
--   
--   <b>performer</b> Performer of the audio; as defined by the sender
--   
--   <b>file_name</b> Original name of the file; as defined by the sender
--   
--   <b>mime_type</b> The MIME type of the file; as defined by the sender
--   
--   <b>album_cover_minithumbnail</b> The minithumbnail of the album cover;
--   may be null
--   
--   <b>album_cover_thumbnail</b> The thumbnail of the album cover in JPEG
--   format; as defined by the sender. The full size thumbnail is supposed
--   to be extracted from the downloaded file; may be null
--   
--   <b>audio</b> File containing the audio
data Audio
Audio :: Maybe File -> Maybe Thumbnail -> Maybe Minithumbnail -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe Int -> Audio
[audio] :: Audio -> Maybe File
[album_cover_thumbnail] :: Audio -> Maybe Thumbnail
[album_cover_minithumbnail] :: Audio -> Maybe Minithumbnail
[mime_type] :: Audio -> Maybe String
[file_name] :: Audio -> Maybe String
[performer] :: Audio -> Maybe String
[title] :: Audio -> Maybe String
[duration] :: Audio -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Audio.Audio
instance GHC.Show.Show API.Audio.Audio
instance Data.Aeson.Types.ToJSON.ToJSON API.Audio.Audio
instance Data.Aeson.Types.FromJSON.FromJSON API.Audio.Audio

module API.Animation

-- | Describes an animation file. The animation must be encoded in GIF or
--   MPEG4 format
--   
--   <b>duration</b> Duration of the animation, in seconds; as defined by
--   the sender
--   
--   <b>width</b> Width of the animation
--   
--   <b>height</b> Height of the animation
--   
--   <b>file_name</b> Original name of the file; as defined by the sender
--   
--   <b>mime_type</b> MIME type of the file, usually "image<i>gif" or
--   "video</i>mp4"
--   
--   <b>has_stickers</b> True, if stickers were added to the animation. The
--   list of corresponding sticker set can be received using
--   getAttachedStickerSets
--   
--   <b>minithumbnail</b> Animation minithumbnail; may be null
--   
--   <b>thumbnail</b> Animation thumbnail in JPEG or MPEG4 format; may be
--   null
--   
--   <b>animation</b> File containing the animation
data Animation
Animation :: Maybe File -> Maybe Thumbnail -> Maybe Minithumbnail -> Maybe Bool -> Maybe String -> Maybe String -> Maybe Int -> Maybe Int -> Maybe Int -> Animation
[animation] :: Animation -> Maybe File
[thumbnail] :: Animation -> Maybe Thumbnail
[minithumbnail] :: Animation -> Maybe Minithumbnail
[has_stickers] :: Animation -> Maybe Bool
[mime_type] :: Animation -> Maybe String
[file_name] :: Animation -> Maybe String
[height] :: Animation -> Maybe Int
[width] :: Animation -> Maybe Int
[duration] :: Animation -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Animation.Animation
instance GHC.Show.Show API.Animation.Animation
instance Data.Aeson.Types.ToJSON.ToJSON API.Animation.Animation
instance Data.Aeson.Types.FromJSON.FromJSON API.Animation.Animation

module API.Thumbnail

-- | Represents a thumbnail
--   
--   <b>format</b> Thumbnail format
--   
--   <b>width</b> Thumbnail width
--   
--   <b>height</b> Thumbnail height
--   
--   <b>file</b> The thumbnail
data Thumbnail
Thumbnail :: Maybe File -> Maybe Int -> Maybe Int -> Maybe ThumbnailFormat -> Thumbnail
[file] :: Thumbnail -> Maybe File
[height] :: Thumbnail -> Maybe Int
[width] :: Thumbnail -> Maybe Int
[format] :: Thumbnail -> Maybe ThumbnailFormat
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Thumbnail.Thumbnail
instance GHC.Show.Show API.Thumbnail.Thumbnail
instance Data.Aeson.Types.ToJSON.ToJSON API.Thumbnail.Thumbnail
instance Data.Aeson.Types.FromJSON.FromJSON API.Thumbnail.Thumbnail

module API.ThumbnailFormat

-- | Describes format of the thumbnail
data ThumbnailFormat

-- | The thumbnail is in JPEG format
ThumbnailFormatJpeg :: ThumbnailFormat

-- | The thumbnail is in PNG format. It will be used only for background
--   patterns
ThumbnailFormatPng :: ThumbnailFormat

-- | The thumbnail is in WEBP format. It will be used only for some
--   stickers
ThumbnailFormatWebp :: ThumbnailFormat

-- | The thumbnail is in static GIF format. It will be used only for some
--   bot inline results
ThumbnailFormatGif :: ThumbnailFormat

-- | The thumbnail is in TGS format. It will be used only for animated
--   sticker sets
ThumbnailFormatTgs :: ThumbnailFormat

-- | The thumbnail is in MPEG4 format. It will be used only for some
--   animations and videos
ThumbnailFormatMpeg4 :: ThumbnailFormat
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ThumbnailFormat.ThumbnailFormat
instance GHC.Show.Show API.ThumbnailFormat.ThumbnailFormat
instance Data.Aeson.Types.ToJSON.ToJSON API.ThumbnailFormat.ThumbnailFormat
instance Data.Aeson.Types.FromJSON.FromJSON API.ThumbnailFormat.ThumbnailFormat

module API.Functions.RemoveTopChat

-- | Removes a chat from the list of frequently used chats. Supported only
--   if the chat info database is enabled
--   
--   <b>category</b> Category of frequently used chats
--   
--   <b>chat_id</b> Chat identifier
data RemoveTopChat
RemoveTopChat :: Maybe Int -> Maybe TopChatCategory -> RemoveTopChat
[chat_id] :: RemoveTopChat -> Maybe Int
[category] :: RemoveTopChat -> Maybe TopChatCategory
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.RemoveTopChat.RemoveTopChat
instance GHC.Show.Show API.Functions.RemoveTopChat.RemoveTopChat
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.RemoveTopChat.RemoveTopChat
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.RemoveTopChat.RemoveTopChat

module API.Functions.GetTopChats

-- | Returns a list of frequently used chats. Supported only if the chat
--   info database is enabled
--   
--   <b>category</b> Category of chats to be returned
--   
--   <b>limit</b> The maximum number of chats to be returned; up to 30
data GetTopChats
GetTopChats :: Maybe Int -> Maybe TopChatCategory -> GetTopChats
[limit] :: GetTopChats -> Maybe Int
[category] :: GetTopChats -> Maybe TopChatCategory
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetTopChats.GetTopChats
instance GHC.Show.Show API.Functions.GetTopChats.GetTopChats
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetTopChats.GetTopChats
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetTopChats.GetTopChats

module API.TopChatCategory

-- | Represents the categories of chats for which a list of frequently used
--   chats can be retrieved
data TopChatCategory

-- | A category containing frequently used private chats with non-bot users
TopChatCategoryUsers :: TopChatCategory

-- | A category containing frequently used private chats with bot users
TopChatCategoryBots :: TopChatCategory

-- | A category containing frequently used basic groups and supergroups
TopChatCategoryGroups :: TopChatCategory

-- | A category containing frequently used channels
TopChatCategoryChannels :: TopChatCategory

-- | A category containing frequently used chats with inline bots sorted by
--   their usage in inline mode
TopChatCategoryInlineBots :: TopChatCategory

-- | A category containing frequently used chats used for calls
TopChatCategoryCalls :: TopChatCategory

-- | A category containing frequently used chats used to forward messages
TopChatCategoryForwardChats :: TopChatCategory
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.TopChatCategory.TopChatCategory
instance GHC.Show.Show API.TopChatCategory.TopChatCategory
instance Data.Aeson.Types.ToJSON.ToJSON API.TopChatCategory.TopChatCategory
instance Data.Aeson.Types.FromJSON.FromJSON API.TopChatCategory.TopChatCategory

module API.Updates

-- | Contains a list of updates
--   
--   <b>updates</b> List of updates
data Updates
Updates :: Maybe [Update] -> Updates
[updates] :: Updates -> Maybe [Update]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Updates.Updates
instance GHC.Show.Show API.Updates.Updates
instance Data.Aeson.Types.ToJSON.ToJSON API.Updates.Updates
instance Data.Aeson.Types.FromJSON.FromJSON API.Updates.Updates

module API.UserFullInfo

-- | Contains full information about a user
--   
--   <b>photo</b> User profile photo; may be null
--   
--   <b>is_blocked</b> True, if the user is blocked by the current user
--   
--   <b>can_be_called</b> True, if the user can be called
--   
--   <b>supports_video_calls</b> True, if a video call can be created with
--   the user
--   
--   <b>has_private_calls</b> True, if the user can't be called due to
--   their privacy settings
--   
--   <b>need_phone_number_privacy_exception</b> True, if the current user
--   needs to explicitly allow to share their phone number with the user
--   when the method addContact is used
--   
--   <b>bio</b> A short user bio
--   
--   <b>share_text</b> For bots, the text that is shown on the bot's
--   profile page and is sent together with the link when users share the
--   bot
--   
--   <b>param_description</b> For bots, the text shown in the chat with the
--   bot if the chat is empty
--   
--   <b>group_in_common_count</b> Number of group chats where both the
--   other user and the current user are a member; 0 for the current user
--   
--   <b>commands</b> For bots, list of the bot commands
data UserFullInfo
UserFullInfo :: Maybe [BotCommand] -> Maybe Int -> Maybe String -> Maybe String -> Maybe String -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe ChatPhoto -> UserFullInfo
[commands] :: UserFullInfo -> Maybe [BotCommand]
[group_in_common_count] :: UserFullInfo -> Maybe Int
[description] :: UserFullInfo -> Maybe String
[share_text] :: UserFullInfo -> Maybe String
[bio] :: UserFullInfo -> Maybe String
[need_phone_number_privacy_exception] :: UserFullInfo -> Maybe Bool
[has_private_calls] :: UserFullInfo -> Maybe Bool
[supports_video_calls] :: UserFullInfo -> Maybe Bool
[can_be_called] :: UserFullInfo -> Maybe Bool
[is_blocked] :: UserFullInfo -> Maybe Bool
[photo] :: UserFullInfo -> Maybe ChatPhoto
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.UserFullInfo.UserFullInfo
instance GHC.Show.Show API.UserFullInfo.UserFullInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.UserFullInfo.UserFullInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.UserFullInfo.UserFullInfo

module API.Functions.GetUserPrivacySettingRules

-- | Returns the current privacy settings
--   
--   <b>setting</b> The privacy setting
data GetUserPrivacySettingRules
GetUserPrivacySettingRules :: Maybe UserPrivacySetting -> GetUserPrivacySettingRules
[setting] :: GetUserPrivacySettingRules -> Maybe UserPrivacySetting
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.GetUserPrivacySettingRules.GetUserPrivacySettingRules
instance GHC.Show.Show API.Functions.GetUserPrivacySettingRules.GetUserPrivacySettingRules
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.GetUserPrivacySettingRules.GetUserPrivacySettingRules
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.GetUserPrivacySettingRules.GetUserPrivacySettingRules

module API.UserPrivacySetting

-- | Describes available user privacy settings
data UserPrivacySetting

-- | A privacy setting for managing whether the user's online status is
--   visible
UserPrivacySettingShowStatus :: UserPrivacySetting

-- | A privacy setting for managing whether the user's profile photo is
--   visible
UserPrivacySettingShowProfilePhoto :: UserPrivacySetting

-- | A privacy setting for managing whether a link to the user's account is
--   included in forwarded messages
UserPrivacySettingShowLinkInForwardedMessages :: UserPrivacySetting

-- | A privacy setting for managing whether the user's phone number is
--   visible
UserPrivacySettingShowPhoneNumber :: UserPrivacySetting

-- | A privacy setting for managing whether the user can be invited to
--   chats
UserPrivacySettingAllowChatInvites :: UserPrivacySetting

-- | A privacy setting for managing whether the user can be called
UserPrivacySettingAllowCalls :: UserPrivacySetting

-- | A privacy setting for managing whether peer-to-peer connections can be
--   used for calls
UserPrivacySettingAllowPeerToPeerCalls :: UserPrivacySetting

-- | A privacy setting for managing whether the user can be found by their
--   phone number. Checked only if the phone number is not known to the
--   other user. Can be set only to "Allow contacts" or "Allow all"
UserPrivacySettingAllowFindingByPhoneNumber :: UserPrivacySetting
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.UserPrivacySetting.UserPrivacySetting
instance GHC.Show.Show API.UserPrivacySetting.UserPrivacySetting
instance Data.Aeson.Types.ToJSON.ToJSON API.UserPrivacySetting.UserPrivacySetting
instance Data.Aeson.Types.FromJSON.FromJSON API.UserPrivacySetting.UserPrivacySetting

module API.UserPrivacySettingRule

-- | Represents a single rule for managing privacy settings
data UserPrivacySettingRule

-- | A rule to allow all users to do something
UserPrivacySettingRuleAllowAll :: UserPrivacySettingRule

-- | A rule to allow all of a user's contacts to do something
UserPrivacySettingRuleAllowContacts :: UserPrivacySettingRule

-- | A rule to allow certain specified users to do something
--   
--   <b>user_ids</b> The user identifiers, total number of users in all
--   rules must not exceed 1000
UserPrivacySettingRuleAllowUsers :: Maybe [Int] -> UserPrivacySettingRule
[user_ids] :: UserPrivacySettingRule -> Maybe [Int]

-- | A rule to allow all members of certain specified basic groups and
--   supergroups to doing something
--   
--   <b>chat_ids</b> The chat identifiers, total number of chats in all
--   rules must not exceed 20
UserPrivacySettingRuleAllowChatMembers :: Maybe [Int] -> UserPrivacySettingRule
[chat_ids] :: UserPrivacySettingRule -> Maybe [Int]

-- | A rule to restrict all users from doing something
UserPrivacySettingRuleRestrictAll :: UserPrivacySettingRule

-- | A rule to restrict all contacts of a user from doing something
UserPrivacySettingRuleRestrictContacts :: UserPrivacySettingRule

-- | A rule to restrict all specified users from doing something
--   
--   <b>user_ids</b> The user identifiers, total number of users in all
--   rules must not exceed 1000
UserPrivacySettingRuleRestrictUsers :: Maybe [Int] -> UserPrivacySettingRule
[user_ids] :: UserPrivacySettingRule -> Maybe [Int]

-- | A rule to restrict all members of specified basic groups and
--   supergroups from doing something
--   
--   <b>chat_ids</b> The chat identifiers, total number of chats in all
--   rules must not exceed 20
UserPrivacySettingRuleRestrictChatMembers :: Maybe [Int] -> UserPrivacySettingRule
[chat_ids] :: UserPrivacySettingRule -> Maybe [Int]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.UserPrivacySettingRule.UserPrivacySettingRule
instance GHC.Show.Show API.UserPrivacySettingRule.UserPrivacySettingRule
instance Data.Aeson.Types.ToJSON.ToJSON API.UserPrivacySettingRule.UserPrivacySettingRule
instance Data.Aeson.Types.FromJSON.FromJSON API.UserPrivacySettingRule.UserPrivacySettingRule

module API.Functions.SetUserPrivacySettingRules

-- | Changes user privacy settings
--   
--   <b>setting</b> The privacy setting
--   
--   <b>rules</b> The new privacy rules
data SetUserPrivacySettingRules
SetUserPrivacySettingRules :: Maybe UserPrivacySettingRules -> Maybe UserPrivacySetting -> SetUserPrivacySettingRules
[rules] :: SetUserPrivacySettingRules -> Maybe UserPrivacySettingRules
[setting] :: SetUserPrivacySettingRules -> Maybe UserPrivacySetting
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Functions.SetUserPrivacySettingRules.SetUserPrivacySettingRules
instance GHC.Show.Show API.Functions.SetUserPrivacySettingRules.SetUserPrivacySettingRules
instance Data.Aeson.Types.ToJSON.ToJSON API.Functions.SetUserPrivacySettingRules.SetUserPrivacySettingRules
instance Data.Aeson.Types.FromJSON.FromJSON API.Functions.SetUserPrivacySettingRules.SetUserPrivacySettingRules

module API.UserPrivacySettingRules

-- | A list of privacy rules. Rules are matched in the specified order. The
--   first matched rule defines the privacy setting for a given user. If no
--   rule matches, the action is not allowed
--   
--   <b>rules</b> A list of rules
data UserPrivacySettingRules
UserPrivacySettingRules :: Maybe [UserPrivacySettingRule] -> UserPrivacySettingRules
[rules] :: UserPrivacySettingRules -> Maybe [UserPrivacySettingRule]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.UserPrivacySettingRules.UserPrivacySettingRules
instance GHC.Show.Show API.UserPrivacySettingRules.UserPrivacySettingRules
instance Data.Aeson.Types.ToJSON.ToJSON API.UserPrivacySettingRules.UserPrivacySettingRules
instance Data.Aeson.Types.FromJSON.FromJSON API.UserPrivacySettingRules.UserPrivacySettingRules

module API.UserStatus

-- | Describes the last time the user was online
data UserStatus

-- | The user status was never changed
UserStatusEmpty :: UserStatus

-- | The user is online
--   
--   <b>expires</b> Point in time (Unix timestamp) when the user's online
--   status will expire
UserStatusOnline :: Maybe Int -> UserStatus
[expires] :: UserStatus -> Maybe Int

-- | The user is offline
--   
--   <b>was_online</b> Point in time (Unix timestamp) when the user was
--   last online
UserStatusOffline :: Maybe Int -> UserStatus
[was_online] :: UserStatus -> Maybe Int

-- | The user was online recently
UserStatusRecently :: UserStatus

-- | The user is offline, but was online last week
UserStatusLastWeek :: UserStatus

-- | The user is offline, but was online last month
UserStatusLastMonth :: UserStatus
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.UserStatus.UserStatus
instance GHC.Show.Show API.UserStatus.UserStatus
instance Data.Aeson.Types.ToJSON.ToJSON API.UserStatus.UserStatus
instance Data.Aeson.Types.FromJSON.FromJSON API.UserStatus.UserStatus

module API.User

-- | Represents a user
--   
--   <b>id</b> User identifier
--   
--   <b>first_name</b> First name of the user
--   
--   <b>last_name</b> Last name of the user
--   
--   <b>username</b> Username of the user
--   
--   <b>phone_number</b> Phone number of the user
--   
--   <b>status</b> Current online status of the user
--   
--   <b>profile_photo</b> Profile photo of the user; may be null
--   
--   <b>is_contact</b> The user is a contact of the current user
--   
--   <b>is_mutual_contact</b> The user is a contact of the current user and
--   the current user is a contact of the user
--   
--   <b>is_verified</b> True, if the user is verified
--   
--   <b>is_support</b> True, if the user is Telegram support account
--   
--   <b>restriction_reason</b> If non-empty, it contains a human-readable
--   description of the reason why access to this user must be restricted
--   
--   <b>is_scam</b> True, if many users reported this user as a scam
--   
--   <b>is_fake</b> True, if many users reported this user as a fake
--   account
--   
--   <b>have_access</b> If false, the user is inaccessible, and the only
--   information known about the user is inside this class. It can't be
--   passed to any method except GetUser
--   
--   <b>type</b> Type of the user
--   
--   <b>language_code</b> IETF language tag of the user's language; only
--   available to bots
data User
User :: Maybe String -> Maybe UserType -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe String -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe ProfilePhoto -> Maybe UserStatus -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe Int -> User
[language_code] :: User -> Maybe String
[_type] :: User -> Maybe UserType
[have_access] :: User -> Maybe Bool
[is_fake] :: User -> Maybe Bool
[is_scam] :: User -> Maybe Bool
[restriction_reason] :: User -> Maybe String
[is_support] :: User -> Maybe Bool
[is_verified] :: User -> Maybe Bool
[is_mutual_contact] :: User -> Maybe Bool
[is_contact] :: User -> Maybe Bool
[profile_photo] :: User -> Maybe ProfilePhoto
[status] :: User -> Maybe UserStatus
[phone_number] :: User -> Maybe String
[username] :: User -> Maybe String
[last_name] :: User -> Maybe String
[first_name] :: User -> Maybe String
[_id] :: User -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.User.User
instance GHC.Show.Show API.User.User
instance Data.Aeson.Types.ToJSON.ToJSON API.User.User
instance Data.Aeson.Types.FromJSON.FromJSON API.User.User

module API.UserType

-- | Represents the type of a user. The following types are possible:
--   regular users, deleted users and bots
data UserType

-- | A regular user
UserTypeRegular :: UserType

-- | A deleted user or deleted bot. No information on the user besides the
--   user identifier is available. It is not possible to perform any active
--   actions on this type of user
UserTypeDeleted :: UserType

-- | A bot (see <a>https://core.telegram.org/bots)</a>
--   
--   <b>can_join_groups</b> True, if the bot can be invited to basic group
--   and supergroup chats
--   
--   <b>can_read_all_group_messages</b> True, if the bot can read all
--   messages in basic group or supergroup chats and not just those
--   addressed to the bot. In private and channel chats a bot can always
--   read all messages
--   
--   <b>is_inline</b> True, if the bot supports inline queries
--   
--   <b>inline_query_placeholder</b> Placeholder for inline queries
--   (displayed on the application input field)
--   
--   <b>need_location</b> True, if the location of the user is expected to
--   be sent with every inline query to this bot
UserTypeBot :: Maybe Bool -> Maybe String -> Maybe Bool -> Maybe Bool -> Maybe Bool -> UserType
[need_location] :: UserType -> Maybe Bool
[inline_query_placeholder] :: UserType -> Maybe String
[is_inline] :: UserType -> Maybe Bool
[can_read_all_group_messages] :: UserType -> Maybe Bool
[can_join_groups] :: UserType -> Maybe Bool

-- | No information on the user besides the user identifier is available,
--   yet this user has not been deleted. This object is extremely rare and
--   must be handled like a deleted user. It is not possible to perform any
--   actions on users of this type
UserTypeUnknown :: UserType
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.UserType.UserType
instance GHC.Show.Show API.UserType.UserType
instance Data.Aeson.Types.ToJSON.ToJSON API.UserType.UserType
instance Data.Aeson.Types.FromJSON.FromJSON API.UserType.UserType

module API.Users

-- | Represents a list of users
--   
--   <b>total_count</b> Approximate total count of users found
--   
--   <b>user_ids</b> A list of user identifiers
data Users
Users :: Maybe [Int] -> Maybe Int -> Users
[user_ids] :: Users -> Maybe [Int]
[total_count] :: Users -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Users.Users
instance GHC.Show.Show API.Users.Users
instance Data.Aeson.Types.ToJSON.ToJSON API.Users.Users
instance Data.Aeson.Types.FromJSON.FromJSON API.Users.Users

module API.ValidatedOrderInfo

-- | Contains a temporary identifier of validated order information, which
--   is stored for one hour. Also contains the available shipping options
--   
--   <b>order_info_id</b> Temporary identifier of the order information
--   
--   <b>shipping_options</b> Available shipping options
data ValidatedOrderInfo
ValidatedOrderInfo :: Maybe [ShippingOption] -> Maybe String -> ValidatedOrderInfo
[shipping_options] :: ValidatedOrderInfo -> Maybe [ShippingOption]
[order_info_id] :: ValidatedOrderInfo -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ValidatedOrderInfo.ValidatedOrderInfo
instance GHC.Show.Show API.ValidatedOrderInfo.ValidatedOrderInfo
instance Data.Aeson.Types.ToJSON.ToJSON API.ValidatedOrderInfo.ValidatedOrderInfo
instance Data.Aeson.Types.FromJSON.FromJSON API.ValidatedOrderInfo.ValidatedOrderInfo

module API.ClosedVectorPath

-- | Represents a closed vector path. The path begins at the end point of
--   the last command
--   
--   <b>commands</b> List of vector path commands
data ClosedVectorPath
ClosedVectorPath :: Maybe [VectorPathCommand] -> ClosedVectorPath
[commands] :: ClosedVectorPath -> Maybe [VectorPathCommand]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.ClosedVectorPath.ClosedVectorPath
instance GHC.Show.Show API.ClosedVectorPath.ClosedVectorPath
instance Data.Aeson.Types.ToJSON.ToJSON API.ClosedVectorPath.ClosedVectorPath
instance Data.Aeson.Types.FromJSON.FromJSON API.ClosedVectorPath.ClosedVectorPath

module API.VectorPathCommand

-- | Represents a vector path command
data VectorPathCommand

-- | A straight line to a given point
--   
--   <b>end_point</b> The end point of the straight line
VectorPathCommandLine :: Maybe Point -> VectorPathCommand
[end_point] :: VectorPathCommand -> Maybe Point

-- | A cubic Bézier curve to a given point
--   
--   <b>start_control_point</b> The start control point of the curve
--   
--   <b>end_control_point</b> The end control point of the curve
--   
--   <b>end_point</b> The end point of the curve
VectorPathCommandCubicBezierCurve :: Maybe Point -> Maybe Point -> Maybe Point -> VectorPathCommand
[end_point] :: VectorPathCommand -> Maybe Point
[end_control_point] :: VectorPathCommand -> Maybe Point
[start_control_point] :: VectorPathCommand -> Maybe Point
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.VectorPathCommand.VectorPathCommand
instance GHC.Show.Show API.VectorPathCommand.VectorPathCommand
instance Data.Aeson.Types.ToJSON.ToJSON API.VectorPathCommand.VectorPathCommand
instance Data.Aeson.Types.FromJSON.FromJSON API.VectorPathCommand.VectorPathCommand

module API.InputMessageContent

-- | The content of a message to send
data InputMessageContent

-- | A text message
--   
--   <b>text</b> Formatted text to be sent;
--   1-GetOption("message_text_length_max") characters. Only Bold, Italic,
--   Underline, Strikethrough, Code, Pre, PreCode, TextUrl and MentionName
--   entities are allowed to be specified manually
--   
--   <b>disable_web_page_preview</b> True, if rich web page previews for
--   URLs in the message text must be disabled
--   
--   <b>clear_draft</b> True, if a chat message draft must be deleted
InputMessageText :: Maybe Bool -> Maybe Bool -> Maybe FormattedText -> InputMessageContent
[clear_draft] :: InputMessageContent -> Maybe Bool
[disable_web_page_preview] :: InputMessageContent -> Maybe Bool
[text] :: InputMessageContent -> Maybe FormattedText

-- | An animation message (GIF-style).
--   
--   <b>animation</b> Animation file to be sent
--   
--   <b>thumbnail</b> Animation thumbnail; pass null to skip thumbnail
--   uploading
--   
--   <b>added_sticker_file_ids</b> File identifiers of the stickers added
--   to the animation, if applicable
--   
--   <b>duration</b> Duration of the animation, in seconds
--   
--   <b>width</b> Width of the animation; may be replaced by the server
--   
--   <b>height</b> Height of the animation; may be replaced by the server
--   
--   <b>caption</b> Animation caption; pass null to use an empty caption;
--   0-GetOption("message_caption_length_max") characters
InputMessageAnimation :: Maybe FormattedText -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe [Int] -> Maybe InputThumbnail -> Maybe InputFile -> InputMessageContent
[caption] :: InputMessageContent -> Maybe FormattedText
[height] :: InputMessageContent -> Maybe Int
[width] :: InputMessageContent -> Maybe Int
[duration] :: InputMessageContent -> Maybe Int
[added_sticker_file_ids] :: InputMessageContent -> Maybe [Int]
[thumbnail] :: InputMessageContent -> Maybe InputThumbnail
[animation] :: InputMessageContent -> Maybe InputFile

-- | An audio message
--   
--   <b>audio</b> Audio file to be sent
--   
--   <b>album_cover_thumbnail</b> Thumbnail of the cover for the album;
--   pass null to skip thumbnail uploading
--   
--   <b>duration</b> Duration of the audio, in seconds; may be replaced by
--   the server
--   
--   <b>title</b> Title of the audio; 0-64 characters; may be replaced by
--   the server
--   
--   <b>performer</b> Performer of the audio; 0-64 characters, may be
--   replaced by the server
--   
--   <b>caption</b> Audio caption; pass null to use an empty caption;
--   0-GetOption("message_caption_length_max") characters
InputMessageAudio :: Maybe FormattedText -> Maybe String -> Maybe String -> Maybe Int -> Maybe InputThumbnail -> Maybe InputFile -> InputMessageContent
[caption] :: InputMessageContent -> Maybe FormattedText
[performer] :: InputMessageContent -> Maybe String
[title] :: InputMessageContent -> Maybe String
[duration] :: InputMessageContent -> Maybe Int
[album_cover_thumbnail] :: InputMessageContent -> Maybe InputThumbnail
[audio] :: InputMessageContent -> Maybe InputFile

-- | A document message (general file)
--   
--   <b>document</b> Document to be sent
--   
--   <b>thumbnail</b> Document thumbnail; pass null to skip thumbnail
--   uploading
--   
--   <b>disable_content_type_detection</b> If true, automatic file type
--   detection will be disabled and the document will be always sent as
--   file. Always true for files sent to secret chats
--   
--   <b>caption</b> Document caption; pass null to use an empty caption;
--   0-GetOption("message_caption_length_max") characters
InputMessageDocument :: Maybe FormattedText -> Maybe Bool -> Maybe InputThumbnail -> Maybe InputFile -> InputMessageContent
[caption] :: InputMessageContent -> Maybe FormattedText
[disable_content_type_detection] :: InputMessageContent -> Maybe Bool
[thumbnail] :: InputMessageContent -> Maybe InputThumbnail
[document] :: InputMessageContent -> Maybe InputFile

-- | A photo message
--   
--   <b>photo</b> Photo to send
--   
--   <b>thumbnail</b> Photo thumbnail to be sent; pass null to skip
--   thumbnail uploading. The thumbnail is sent to the other party only in
--   secret chats
--   
--   <b>added_sticker_file_ids</b> File identifiers of the stickers added
--   to the photo, if applicable
--   
--   <b>width</b> Photo width
--   
--   <b>height</b> Photo height
--   
--   <b>caption</b> Photo caption; pass null to use an empty caption;
--   0-GetOption("message_caption_length_max") characters
--   
--   <b>ttl</b> Photo TTL (Time To Live), in seconds (0-60). A non-zero TTL
--   can be specified only in private chats
InputMessagePhoto :: Maybe Int -> Maybe FormattedText -> Maybe Int -> Maybe Int -> Maybe [Int] -> Maybe InputThumbnail -> Maybe InputFile -> InputMessageContent
[ttl] :: InputMessageContent -> Maybe Int
[caption] :: InputMessageContent -> Maybe FormattedText
[height] :: InputMessageContent -> Maybe Int
[width] :: InputMessageContent -> Maybe Int
[added_sticker_file_ids] :: InputMessageContent -> Maybe [Int]
[thumbnail] :: InputMessageContent -> Maybe InputThumbnail
[photo] :: InputMessageContent -> Maybe InputFile

-- | A sticker message
--   
--   <b>sticker</b> Sticker to be sent
--   
--   <b>thumbnail</b> Sticker thumbnail; pass null to skip thumbnail
--   uploading
--   
--   <b>width</b> Sticker width
--   
--   <b>height</b> Sticker height
--   
--   <b>emoji</b> Emoji used to choose the sticker
InputMessageSticker :: Maybe String -> Maybe Int -> Maybe Int -> Maybe InputThumbnail -> Maybe InputFile -> InputMessageContent
[emoji] :: InputMessageContent -> Maybe String
[height] :: InputMessageContent -> Maybe Int
[width] :: InputMessageContent -> Maybe Int
[thumbnail] :: InputMessageContent -> Maybe InputThumbnail
[sticker] :: InputMessageContent -> Maybe InputFile

-- | A video message
--   
--   <b>video</b> Video to be sent
--   
--   <b>thumbnail</b> Video thumbnail; pass null to skip thumbnail
--   uploading
--   
--   <b>added_sticker_file_ids</b> File identifiers of the stickers added
--   to the video, if applicable
--   
--   <b>duration</b> Duration of the video, in seconds
--   
--   <b>width</b> Video width
--   
--   <b>height</b> Video height
--   
--   <b>supports_streaming</b> True, if the video is supposed to be
--   streamed
--   
--   <b>caption</b> Video caption; pass null to use an empty caption;
--   0-GetOption("message_caption_length_max") characters
--   
--   <b>ttl</b> Video TTL (Time To Live), in seconds (0-60). A non-zero TTL
--   can be specified only in private chats
InputMessageVideo :: Maybe Int -> Maybe FormattedText -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe [Int] -> Maybe InputThumbnail -> Maybe InputFile -> InputMessageContent
[ttl] :: InputMessageContent -> Maybe Int
[caption] :: InputMessageContent -> Maybe FormattedText
[supports_streaming] :: InputMessageContent -> Maybe Bool
[height] :: InputMessageContent -> Maybe Int
[width] :: InputMessageContent -> Maybe Int
[duration] :: InputMessageContent -> Maybe Int
[added_sticker_file_ids] :: InputMessageContent -> Maybe [Int]
[thumbnail] :: InputMessageContent -> Maybe InputThumbnail
[video] :: InputMessageContent -> Maybe InputFile

-- | A video note message
--   
--   <b>video_note</b> Video note to be sent
--   
--   <b>thumbnail</b> Video thumbnail; pass null to skip thumbnail
--   uploading
--   
--   <b>duration</b> Duration of the video, in seconds
--   
--   <b>length</b> Video width and height; must be positive and not greater
--   than 640
InputMessageVideoNote :: Maybe Int -> Maybe Int -> Maybe InputThumbnail -> Maybe InputFile -> InputMessageContent
[_length] :: InputMessageContent -> Maybe Int
[duration] :: InputMessageContent -> Maybe Int
[thumbnail] :: InputMessageContent -> Maybe InputThumbnail
[video_note] :: InputMessageContent -> Maybe InputFile

-- | A voice note message
--   
--   <b>voice_note</b> Voice note to be sent
--   
--   <b>duration</b> Duration of the voice note, in seconds
--   
--   <b>waveform</b> Waveform representation of the voice note, in 5-bit
--   format
--   
--   <b>caption</b> Voice note caption; pass null to use an empty caption;
--   0-GetOption("message_caption_length_max") characters
InputMessageVoiceNote :: Maybe FormattedText -> Maybe String -> Maybe Int -> Maybe InputFile -> InputMessageContent
[caption] :: InputMessageContent -> Maybe FormattedText
[waveform] :: InputMessageContent -> Maybe String
[duration] :: InputMessageContent -> Maybe Int
[voice_note] :: InputMessageContent -> Maybe InputFile

-- | A message with a location
--   
--   <b>location</b> Location to be sent
--   
--   <b>live_period</b> Period for which the location can be updated, in
--   seconds; must be between 60 and 86400 for a live location and 0
--   otherwise
--   
--   <b>heading</b> For live locations, a direction in which the location
--   moves, in degrees; 1-360. Pass 0 if unknown
--   
--   <b>proximity_alert_radius</b> For live locations, a maximum distance
--   to another chat member for proximity alerts, in meters (0-100000).
--   Pass 0 if the notification is disabled. Can't be enabled in channels
--   and Saved Messages
InputMessageLocation :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Location -> InputMessageContent
[proximity_alert_radius] :: InputMessageContent -> Maybe Int
[heading] :: InputMessageContent -> Maybe Int
[live_period] :: InputMessageContent -> Maybe Int
[location] :: InputMessageContent -> Maybe Location

-- | A message with information about a venue
--   
--   <b>venue</b> Venue to send
InputMessageVenue :: Maybe Venue -> InputMessageContent
[venue] :: InputMessageContent -> Maybe Venue

-- | A message containing a user contact
--   
--   <b>contact</b> Contact to send
InputMessageContact :: Maybe Contact -> InputMessageContent
[contact] :: InputMessageContent -> Maybe Contact

-- | A dice message
--   
--   <b>emoji</b> Emoji on which the dice throw animation is based
--   
--   <b>clear_draft</b> True, if the chat message draft must be deleted
InputMessageDice :: Maybe Bool -> Maybe String -> InputMessageContent
[clear_draft] :: InputMessageContent -> Maybe Bool
[emoji] :: InputMessageContent -> Maybe String

-- | A message with a game; not supported for channels or secret chats
--   
--   <b>bot_user_id</b> User identifier of the bot that owns the game
--   
--   <b>game_short_name</b> Short name of the game
InputMessageGame :: Maybe String -> Maybe Int -> InputMessageContent
[game_short_name] :: InputMessageContent -> Maybe String
[bot_user_id] :: InputMessageContent -> Maybe Int

-- | A message with an invoice; can be used only by bots
--   
--   <b>invoice</b> Invoice
--   
--   <b>title</b> Product title; 1-32 characters
--   
--   <b>param_description</b> Product description; 0-255 characters
--   
--   <b>photo_url</b> Product photo URL; optional
--   
--   <b>photo_size</b> Product photo size
--   
--   <b>photo_width</b> Product photo width
--   
--   <b>photo_height</b> Product photo height
--   
--   <b>payload</b> The invoice payload
--   
--   <b>provider_token</b> Payment provider token
--   
--   <b>provider_data</b> JSON-encoded data about the invoice, which will
--   be shared with the payment provider
--   
--   <b>start_parameter</b> Unique invoice bot deep link parameter for the
--   generation of this invoice. If empty, it would be possible to pay
--   directly from forwards of the invoice message
InputMessageInvoice :: Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> Maybe String -> Maybe Invoice -> InputMessageContent
[start_parameter] :: InputMessageContent -> Maybe String
[provider_data] :: InputMessageContent -> Maybe String
[provider_token] :: InputMessageContent -> Maybe String
[payload] :: InputMessageContent -> Maybe String
[photo_height] :: InputMessageContent -> Maybe Int
[photo_width] :: InputMessageContent -> Maybe Int
[photo_size] :: InputMessageContent -> Maybe Int
[photo_url] :: InputMessageContent -> Maybe String
[description] :: InputMessageContent -> Maybe String
[title] :: InputMessageContent -> Maybe String
[invoice] :: InputMessageContent -> Maybe Invoice

-- | A message with a poll. Polls can't be sent to secret chats. Polls can
--   be sent only to a private chat with a bot
--   
--   <b>question</b> Poll question; 1-255 characters (up to 300 characters
--   for bots)
--   
--   <b>options</b> List of poll answer options, 2-10 strings 1-100
--   characters each
--   
--   <b>is_anonymous</b> True, if the poll voters are anonymous.
--   Non-anonymous polls can't be sent or forwarded to channels
--   
--   <b>type</b> Type of the poll
--   
--   <b>open_period</b> Amount of time the poll will be active after
--   creation, in seconds; for bots only
--   
--   <b>close_date</b> Point in time (Unix timestamp) when the poll will be
--   automatically closed; for bots only
--   
--   <b>is_closed</b> True, if the poll needs to be sent already closed;
--   for bots only
InputMessagePoll :: Maybe Bool -> Maybe Int -> Maybe Int -> Maybe PollType -> Maybe Bool -> Maybe [String] -> Maybe String -> InputMessageContent
[is_closed] :: InputMessageContent -> Maybe Bool
[close_date] :: InputMessageContent -> Maybe Int
[open_period] :: InputMessageContent -> Maybe Int
[_type] :: InputMessageContent -> Maybe PollType
[is_anonymous] :: InputMessageContent -> Maybe Bool
[options] :: InputMessageContent -> Maybe [String]
[question] :: InputMessageContent -> Maybe String

-- | A forwarded message
--   
--   <b>from_chat_id</b> Identifier for the chat this forwarded message
--   came from
--   
--   <b>message_id</b> Identifier of the message to forward
--   
--   <b>in_game_share</b> True, if a game message is being shared from a
--   launched game; applies only to game messages
--   
--   <b>copy_options</b> Options to be used to copy content of the message
--   without reference to the original sender; pass null to try to forward
--   the message as usual
InputMessageForwarded :: Maybe MessageCopyOptions -> Maybe Bool -> Maybe Int -> Maybe Int -> InputMessageContent
[copy_options] :: InputMessageContent -> Maybe MessageCopyOptions
[in_game_share] :: InputMessageContent -> Maybe Bool
[message_id] :: InputMessageContent -> Maybe Int
[from_chat_id] :: InputMessageContent -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InputMessageContent.InputMessageContent
instance GHC.Show.Show API.InputMessageContent.InputMessageContent
instance Data.Aeson.Types.ToJSON.ToJSON API.InputMessageContent.InputMessageContent
instance Data.Aeson.Types.FromJSON.FromJSON API.InputMessageContent.InputMessageContent

module API.InputInlineQueryResult

-- | Represents a single result of an inline query; for bots only
data InputInlineQueryResult

-- | Represents a link to an animated GIF or an animated (i.e., without
--   sound) H.264/MPEG-4 AVC video
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>title</b> Title of the query result
--   
--   <b>thumbnail_url</b> URL of the result thumbnail (JPEG, GIF, or
--   MPEG4), if it exists
--   
--   <b>thumbnail_mime_type</b> MIME type of the video thumbnail. If
--   non-empty, must be one of "image<i>jpeg", "image</i>gif" and
--   "video/mp4"
--   
--   <b>video_url</b> The URL of the video file (file size must not exceed
--   1MB)
--   
--   <b>video_mime_type</b> MIME type of the video file. Must be one of
--   "image<i>gif" and "video</i>mp4"
--   
--   <b>video_duration</b> Duration of the video, in seconds
--   
--   <b>video_width</b> Width of the video
--   
--   <b>video_height</b> Height of the video
--   
--   <b>reply_markup</b> The message reply markup; pass null if none. Must
--   be of type replyMarkupInlineKeyboard or null
--   
--   <b>input_message_content</b> The content of the message to be sent.
--   Must be one of the following types: inputMessageText,
--   inputMessageAnimation, inputMessageInvoice, inputMessageLocation,
--   inputMessageVenue or inputMessageContact
InputInlineQueryResultAnimation :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> InputInlineQueryResult
[input_message_content] :: InputInlineQueryResult -> Maybe InputMessageContent
[reply_markup] :: InputInlineQueryResult -> Maybe ReplyMarkup
[video_height] :: InputInlineQueryResult -> Maybe Int
[video_width] :: InputInlineQueryResult -> Maybe Int
[video_duration] :: InputInlineQueryResult -> Maybe Int
[video_mime_type] :: InputInlineQueryResult -> Maybe String
[video_url] :: InputInlineQueryResult -> Maybe String
[thumbnail_mime_type] :: InputInlineQueryResult -> Maybe String
[thumbnail_url] :: InputInlineQueryResult -> Maybe String
[title] :: InputInlineQueryResult -> Maybe String
[_id] :: InputInlineQueryResult -> Maybe String

-- | Represents a link to an article or web page
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>url</b> URL of the result, if it exists
--   
--   <b>hide_url</b> True, if the URL must be not shown
--   
--   <b>title</b> Title of the result
--   
--   <b>param_description</b> A short description of the result
--   
--   <b>thumbnail_url</b> URL of the result thumbnail, if it exists
--   
--   <b>thumbnail_width</b> Thumbnail width, if known
--   
--   <b>thumbnail_height</b> Thumbnail height, if known
--   
--   <b>reply_markup</b> The message reply markup; pass null if none. Must
--   be of type replyMarkupInlineKeyboard or null
--   
--   <b>input_message_content</b> The content of the message to be sent.
--   Must be one of the following types: inputMessageText,
--   inputMessageInvoice, inputMessageLocation, inputMessageVenue or
--   inputMessageContact
InputInlineQueryResultArticle :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> Maybe String -> Maybe Bool -> Maybe String -> Maybe String -> InputInlineQueryResult
[input_message_content] :: InputInlineQueryResult -> Maybe InputMessageContent
[reply_markup] :: InputInlineQueryResult -> Maybe ReplyMarkup
[thumbnail_height] :: InputInlineQueryResult -> Maybe Int
[thumbnail_width] :: InputInlineQueryResult -> Maybe Int
[thumbnail_url] :: InputInlineQueryResult -> Maybe String
[description] :: InputInlineQueryResult -> Maybe String
[title] :: InputInlineQueryResult -> Maybe String
[hide_url] :: InputInlineQueryResult -> Maybe Bool
[url] :: InputInlineQueryResult -> Maybe String
[_id] :: InputInlineQueryResult -> Maybe String

-- | Represents a link to an MP3 audio file
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>title</b> Title of the audio file
--   
--   <b>performer</b> Performer of the audio file
--   
--   <b>audio_url</b> The URL of the audio file
--   
--   <b>audio_duration</b> Audio file duration, in seconds
--   
--   <b>reply_markup</b> The message reply markup; pass null if none. Must
--   be of type replyMarkupInlineKeyboard or null
--   
--   <b>input_message_content</b> The content of the message to be sent.
--   Must be one of the following types: inputMessageText,
--   inputMessageAudio, inputMessageInvoice, inputMessageLocation,
--   inputMessageVenue or inputMessageContact
InputInlineQueryResultAudio :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe Int -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> InputInlineQueryResult
[input_message_content] :: InputInlineQueryResult -> Maybe InputMessageContent
[reply_markup] :: InputInlineQueryResult -> Maybe ReplyMarkup
[audio_duration] :: InputInlineQueryResult -> Maybe Int
[audio_url] :: InputInlineQueryResult -> Maybe String
[performer] :: InputInlineQueryResult -> Maybe String
[title] :: InputInlineQueryResult -> Maybe String
[_id] :: InputInlineQueryResult -> Maybe String

-- | Represents a user contact
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>contact</b> User contact
--   
--   <b>thumbnail_url</b> URL of the result thumbnail, if it exists
--   
--   <b>thumbnail_width</b> Thumbnail width, if known
--   
--   <b>thumbnail_height</b> Thumbnail height, if known
--   
--   <b>reply_markup</b> The message reply markup; pass null if none. Must
--   be of type replyMarkupInlineKeyboard or null
--   
--   <b>input_message_content</b> The content of the message to be sent.
--   Must be one of the following types: inputMessageText,
--   inputMessageInvoice, inputMessageLocation, inputMessageVenue or
--   inputMessageContact
InputInlineQueryResultContact :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> Maybe String -> Maybe Contact -> Maybe String -> InputInlineQueryResult
[input_message_content] :: InputInlineQueryResult -> Maybe InputMessageContent
[reply_markup] :: InputInlineQueryResult -> Maybe ReplyMarkup
[thumbnail_height] :: InputInlineQueryResult -> Maybe Int
[thumbnail_width] :: InputInlineQueryResult -> Maybe Int
[thumbnail_url] :: InputInlineQueryResult -> Maybe String
[contact] :: InputInlineQueryResult -> Maybe Contact
[_id] :: InputInlineQueryResult -> Maybe String

-- | Represents a link to a file
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>title</b> Title of the resulting file
--   
--   <b>param_description</b> Short description of the result, if known
--   
--   <b>document_url</b> URL of the file
--   
--   <b>mime_type</b> MIME type of the file content; only
--   "application<i>pdf" and "application</i>zip" are currently allowed
--   
--   <b>thumbnail_url</b> The URL of the file thumbnail, if it exists
--   
--   <b>thumbnail_width</b> Width of the thumbnail
--   
--   <b>thumbnail_height</b> Height of the thumbnail
--   
--   <b>reply_markup</b> The message reply markup; pass null if none. Must
--   be of type replyMarkupInlineKeyboard or null
--   
--   <b>input_message_content</b> The content of the message to be sent.
--   Must be one of the following types: inputMessageText,
--   inputMessageDocument, inputMessageInvoice, inputMessageLocation,
--   inputMessageVenue or inputMessageContact
InputInlineQueryResultDocument :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> InputInlineQueryResult
[input_message_content] :: InputInlineQueryResult -> Maybe InputMessageContent
[reply_markup] :: InputInlineQueryResult -> Maybe ReplyMarkup
[thumbnail_height] :: InputInlineQueryResult -> Maybe Int
[thumbnail_width] :: InputInlineQueryResult -> Maybe Int
[thumbnail_url] :: InputInlineQueryResult -> Maybe String
[mime_type] :: InputInlineQueryResult -> Maybe String
[document_url] :: InputInlineQueryResult -> Maybe String
[description] :: InputInlineQueryResult -> Maybe String
[title] :: InputInlineQueryResult -> Maybe String
[_id] :: InputInlineQueryResult -> Maybe String

-- | Represents a game
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>game_short_name</b> Short name of the game
--   
--   <b>reply_markup</b> The message reply markup; pass null if none. Must
--   be of type replyMarkupInlineKeyboard or null
InputInlineQueryResultGame :: Maybe ReplyMarkup -> Maybe String -> Maybe String -> InputInlineQueryResult
[reply_markup] :: InputInlineQueryResult -> Maybe ReplyMarkup
[game_short_name] :: InputInlineQueryResult -> Maybe String
[_id] :: InputInlineQueryResult -> Maybe String

-- | Represents a point on the map
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>location</b> Location result
--   
--   <b>live_period</b> Amount of time relative to the message sent time
--   until the location can be updated, in seconds
--   
--   <b>title</b> Title of the result
--   
--   <b>thumbnail_url</b> URL of the result thumbnail, if it exists
--   
--   <b>thumbnail_width</b> Thumbnail width, if known
--   
--   <b>thumbnail_height</b> Thumbnail height, if known
--   
--   <b>reply_markup</b> The message reply markup; pass null if none. Must
--   be of type replyMarkupInlineKeyboard or null
--   
--   <b>input_message_content</b> The content of the message to be sent.
--   Must be one of the following types: inputMessageText,
--   inputMessageInvoice, inputMessageLocation, inputMessageVenue or
--   inputMessageContact
InputInlineQueryResultLocation :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> Maybe Int -> Maybe Location -> Maybe String -> InputInlineQueryResult
[input_message_content] :: InputInlineQueryResult -> Maybe InputMessageContent
[reply_markup] :: InputInlineQueryResult -> Maybe ReplyMarkup
[thumbnail_height] :: InputInlineQueryResult -> Maybe Int
[thumbnail_width] :: InputInlineQueryResult -> Maybe Int
[thumbnail_url] :: InputInlineQueryResult -> Maybe String
[title] :: InputInlineQueryResult -> Maybe String
[live_period] :: InputInlineQueryResult -> Maybe Int
[location] :: InputInlineQueryResult -> Maybe Location
[_id] :: InputInlineQueryResult -> Maybe String

-- | Represents link to a JPEG image
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>title</b> Title of the result, if known
--   
--   <b>param_description</b> A short description of the result, if known
--   
--   <b>thumbnail_url</b> URL of the photo thumbnail, if it exists
--   
--   <b>photo_url</b> The URL of the JPEG photo (photo size must not exceed
--   5MB)
--   
--   <b>photo_width</b> Width of the photo
--   
--   <b>photo_height</b> Height of the photo
--   
--   <b>reply_markup</b> The message reply markup; pass null if none. Must
--   be of type replyMarkupInlineKeyboard or null
--   
--   <b>input_message_content</b> The content of the message to be sent.
--   Must be one of the following types: inputMessageText,
--   inputMessagePhoto, inputMessageInvoice, inputMessageLocation,
--   inputMessageVenue or inputMessageContact
InputInlineQueryResultPhoto :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> InputInlineQueryResult
[input_message_content] :: InputInlineQueryResult -> Maybe InputMessageContent
[reply_markup] :: InputInlineQueryResult -> Maybe ReplyMarkup
[photo_height] :: InputInlineQueryResult -> Maybe Int
[photo_width] :: InputInlineQueryResult -> Maybe Int
[photo_url] :: InputInlineQueryResult -> Maybe String
[thumbnail_url] :: InputInlineQueryResult -> Maybe String
[description] :: InputInlineQueryResult -> Maybe String
[title] :: InputInlineQueryResult -> Maybe String
[_id] :: InputInlineQueryResult -> Maybe String

-- | Represents a link to a WEBP or TGS sticker
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>thumbnail_url</b> URL of the sticker thumbnail, if it exists
--   
--   <b>sticker_url</b> The URL of the WEBP or TGS sticker (sticker file
--   size must not exceed 5MB)
--   
--   <b>sticker_width</b> Width of the sticker
--   
--   <b>sticker_height</b> Height of the sticker
--   
--   <b>reply_markup</b> The message reply markup; pass null if none. Must
--   be of type replyMarkupInlineKeyboard or null
--   
--   <b>input_message_content</b> The content of the message to be sent.
--   Must be one of the following types: inputMessageText,
--   inputMessageSticker, inputMessageInvoice, inputMessageLocation,
--   inputMessageVenue or inputMessageContact
InputInlineQueryResultSticker :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> Maybe String -> InputInlineQueryResult
[input_message_content] :: InputInlineQueryResult -> Maybe InputMessageContent
[reply_markup] :: InputInlineQueryResult -> Maybe ReplyMarkup
[sticker_height] :: InputInlineQueryResult -> Maybe Int
[sticker_width] :: InputInlineQueryResult -> Maybe Int
[sticker_url] :: InputInlineQueryResult -> Maybe String
[thumbnail_url] :: InputInlineQueryResult -> Maybe String
[_id] :: InputInlineQueryResult -> Maybe String

-- | Represents information about a venue
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>venue</b> Venue result
--   
--   <b>thumbnail_url</b> URL of the result thumbnail, if it exists
--   
--   <b>thumbnail_width</b> Thumbnail width, if known
--   
--   <b>thumbnail_height</b> Thumbnail height, if known
--   
--   <b>reply_markup</b> The message reply markup; pass null if none. Must
--   be of type replyMarkupInlineKeyboard or null
--   
--   <b>input_message_content</b> The content of the message to be sent.
--   Must be one of the following types: inputMessageText,
--   inputMessageInvoice, inputMessageLocation, inputMessageVenue or
--   inputMessageContact
InputInlineQueryResultVenue :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> Maybe String -> Maybe Venue -> Maybe String -> InputInlineQueryResult
[input_message_content] :: InputInlineQueryResult -> Maybe InputMessageContent
[reply_markup] :: InputInlineQueryResult -> Maybe ReplyMarkup
[thumbnail_height] :: InputInlineQueryResult -> Maybe Int
[thumbnail_width] :: InputInlineQueryResult -> Maybe Int
[thumbnail_url] :: InputInlineQueryResult -> Maybe String
[venue] :: InputInlineQueryResult -> Maybe Venue
[_id] :: InputInlineQueryResult -> Maybe String

-- | Represents a link to a page containing an embedded video player or a
--   video file
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>title</b> Title of the result
--   
--   <b>param_description</b> A short description of the result, if known
--   
--   <b>thumbnail_url</b> The URL of the video thumbnail (JPEG), if it
--   exists
--   
--   <b>video_url</b> URL of the embedded video player or video file
--   
--   <b>mime_type</b> MIME type of the content of the video URL, only
--   "text<i>html" or "video</i>mp4" are currently supported
--   
--   <b>video_width</b> Width of the video
--   
--   <b>video_height</b> Height of the video
--   
--   <b>video_duration</b> Video duration, in seconds
--   
--   <b>reply_markup</b> The message reply markup; pass null if none. Must
--   be of type replyMarkupInlineKeyboard or null
--   
--   <b>input_message_content</b> The content of the message to be sent.
--   Must be one of the following types: inputMessageText,
--   inputMessageVideo, inputMessageInvoice, inputMessageLocation,
--   inputMessageVenue or inputMessageContact
InputInlineQueryResultVideo :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> InputInlineQueryResult
[input_message_content] :: InputInlineQueryResult -> Maybe InputMessageContent
[reply_markup] :: InputInlineQueryResult -> Maybe ReplyMarkup
[video_duration] :: InputInlineQueryResult -> Maybe Int
[video_height] :: InputInlineQueryResult -> Maybe Int
[video_width] :: InputInlineQueryResult -> Maybe Int
[mime_type] :: InputInlineQueryResult -> Maybe String
[video_url] :: InputInlineQueryResult -> Maybe String
[thumbnail_url] :: InputInlineQueryResult -> Maybe String
[description] :: InputInlineQueryResult -> Maybe String
[title] :: InputInlineQueryResult -> Maybe String
[_id] :: InputInlineQueryResult -> Maybe String

-- | Represents a link to an opus-encoded audio file within an OGG
--   container, single channel audio
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>title</b> Title of the voice note
--   
--   <b>voice_note_url</b> The URL of the voice note file
--   
--   <b>voice_note_duration</b> Duration of the voice note, in seconds
--   
--   <b>reply_markup</b> The message reply markup; pass null if none. Must
--   be of type replyMarkupInlineKeyboard or null
--   
--   <b>input_message_content</b> The content of the message to be sent.
--   Must be one of the following types: inputMessageText,
--   inputMessageVoiceNote, inputMessageInvoice, inputMessageLocation,
--   inputMessageVenue or inputMessageContact
InputInlineQueryResultVoiceNote :: Maybe InputMessageContent -> Maybe ReplyMarkup -> Maybe Int -> Maybe String -> Maybe String -> Maybe String -> InputInlineQueryResult
[input_message_content] :: InputInlineQueryResult -> Maybe InputMessageContent
[reply_markup] :: InputInlineQueryResult -> Maybe ReplyMarkup
[voice_note_duration] :: InputInlineQueryResult -> Maybe Int
[voice_note_url] :: InputInlineQueryResult -> Maybe String
[title] :: InputInlineQueryResult -> Maybe String
[_id] :: InputInlineQueryResult -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InputInlineQueryResult.InputInlineQueryResult
instance GHC.Show.Show API.InputInlineQueryResult.InputInlineQueryResult
instance Data.Aeson.Types.ToJSON.ToJSON API.InputInlineQueryResult.InputInlineQueryResult
instance Data.Aeson.Types.FromJSON.FromJSON API.InputInlineQueryResult.InputInlineQueryResult

module API.Venue

-- | Describes a venue
--   
--   <b>location</b> Venue location; as defined by the sender
--   
--   <b>title</b> Venue name; as defined by the sender
--   
--   <b>address</b> Venue address; as defined by the sender
--   
--   <b>provider</b> Provider of the venue database; as defined by the
--   sender. Currently only "foursquare" and "gplaces" (Google Places) need
--   to be supported
--   
--   <b>id</b> Identifier of the venue in the provider database; as defined
--   by the sender
--   
--   <b>type</b> Type of the venue in the provider database; as defined by
--   the sender
data Venue
Venue :: Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe Location -> Venue
[_type] :: Venue -> Maybe String
[_id] :: Venue -> Maybe String
[provider] :: Venue -> Maybe String
[address] :: Venue -> Maybe String
[title] :: Venue -> Maybe String
[location] :: Venue -> Maybe Location
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Venue.Venue
instance GHC.Show.Show API.Venue.Venue
instance Data.Aeson.Types.ToJSON.ToJSON API.Venue.Venue
instance Data.Aeson.Types.FromJSON.FromJSON API.Venue.Venue

module API.Video

-- | Describes a video file
--   
--   <b>duration</b> Duration of the video, in seconds; as defined by the
--   sender
--   
--   <b>width</b> Video width; as defined by the sender
--   
--   <b>height</b> Video height; as defined by the sender
--   
--   <b>file_name</b> Original name of the file; as defined by the sender
--   
--   <b>mime_type</b> MIME type of the file; as defined by the sender
--   
--   <b>has_stickers</b> True, if stickers were added to the video. The
--   list of corresponding sticker sets can be received using
--   getAttachedStickerSets
--   
--   <b>supports_streaming</b> True, if the video is supposed to be
--   streamed
--   
--   <b>minithumbnail</b> Video minithumbnail; may be null
--   
--   <b>thumbnail</b> Video thumbnail in JPEG or MPEG4 format; as defined
--   by the sender; may be null
--   
--   <b>video</b> File containing the video
data Video
Video :: Maybe File -> Maybe Thumbnail -> Maybe Minithumbnail -> Maybe Bool -> Maybe Bool -> Maybe String -> Maybe String -> Maybe Int -> Maybe Int -> Maybe Int -> Video
[video] :: Video -> Maybe File
[thumbnail] :: Video -> Maybe Thumbnail
[minithumbnail] :: Video -> Maybe Minithumbnail
[supports_streaming] :: Video -> Maybe Bool
[has_stickers] :: Video -> Maybe Bool
[mime_type] :: Video -> Maybe String
[file_name] :: Video -> Maybe String
[height] :: Video -> Maybe Int
[width] :: Video -> Maybe Int
[duration] :: Video -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Video.Video
instance GHC.Show.Show API.Video.Video
instance Data.Aeson.Types.ToJSON.ToJSON API.Video.Video
instance Data.Aeson.Types.FromJSON.FromJSON API.Video.Video

module API.VideoNote

-- | Describes a video note. The video must be equal in width and height,
--   cropped to a circle, and stored in MPEG4 format
--   
--   <b>duration</b> Duration of the video, in seconds; as defined by the
--   sender
--   
--   <b>length</b> Video width and height; as defined by the sender
--   
--   <b>minithumbnail</b> Video minithumbnail; may be null
--   
--   <b>thumbnail</b> Video thumbnail in JPEG format; as defined by the
--   sender; may be null
--   
--   <b>video</b> File containing the video
data VideoNote
VideoNote :: Maybe File -> Maybe Thumbnail -> Maybe Minithumbnail -> Maybe Int -> Maybe Int -> VideoNote
[video] :: VideoNote -> Maybe File
[thumbnail] :: VideoNote -> Maybe Thumbnail
[minithumbnail] :: VideoNote -> Maybe Minithumbnail
[_length] :: VideoNote -> Maybe Int
[duration] :: VideoNote -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.VideoNote.VideoNote
instance GHC.Show.Show API.VideoNote.VideoNote
instance Data.Aeson.Types.ToJSON.ToJSON API.VideoNote.VideoNote
instance Data.Aeson.Types.FromJSON.FromJSON API.VideoNote.VideoNote

module API.Update

-- | Contains notifications about data changes
data Update

-- | The user authorization state has changed
--   
--   <b>authorization_state</b> New authorization state
UpdateAuthorizationState :: Maybe AuthorizationState -> Update
[authorization_state] :: Update -> Maybe AuthorizationState

-- | A new message was received; can also be an outgoing message
--   
--   <b>message</b> The new message
UpdateNewMessage :: Maybe Message -> Update
[message] :: Update -> Maybe Message

-- | A request to send a message has reached the Telegram server. This
--   doesn't mean that the message will be sent successfully or even that
--   the send message request will be processed. This update will be sent
--   only if the option "use_quick_ack" is set to true. This update may be
--   sent multiple times for the same message
--   
--   <b>chat_id</b> The chat identifier of the sent message
--   
--   <b>message_id</b> A temporary message identifier
UpdateMessageSendAcknowledged :: Maybe Int -> Maybe Int -> Update
[message_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | A message has been successfully sent
--   
--   <b>message</b> Information about the sent message. Usually only the
--   message identifier, date, and content are changed, but almost all
--   other fields can also change
--   
--   <b>old_message_id</b> The previous temporary message identifier
UpdateMessageSendSucceeded :: Maybe Int -> Maybe Message -> Update
[old_message_id] :: Update -> Maybe Int
[message] :: Update -> Maybe Message

-- | A message failed to send. Be aware that some messages being sent can
--   be irrecoverably deleted, in which case updateDeleteMessages will be
--   received instead of this update
--   
--   <b>message</b> Contains information about the message which failed to
--   send
--   
--   <b>old_message_id</b> The previous temporary message identifier
--   
--   <b>error_code</b> An error code
--   
--   <b>error_message</b> Error message
UpdateMessageSendFailed :: Maybe String -> Maybe Int -> Maybe Int -> Maybe Message -> Update
[error_message] :: Update -> Maybe String
[error_code] :: Update -> Maybe Int
[old_message_id] :: Update -> Maybe Int
[message] :: Update -> Maybe Message

-- | The message content has changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_id</b> Message identifier
--   
--   <b>new_content</b> New message content
UpdateMessageContent :: Maybe MessageContent -> Maybe Int -> Maybe Int -> Update
[new_content] :: Update -> Maybe MessageContent
[message_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | A message was edited. Changes in the message content will come in a
--   separate updateMessageContent
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_id</b> Message identifier
--   
--   <b>edit_date</b> Point in time (Unix timestamp) when the message was
--   edited
--   
--   <b>reply_markup</b> New message reply markup; may be null
UpdateMessageEdited :: Maybe ReplyMarkup -> Maybe Int -> Maybe Int -> Maybe Int -> Update
[reply_markup] :: Update -> Maybe ReplyMarkup
[edit_date] :: Update -> Maybe Int
[message_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | The message pinned state was changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_id</b> The message identifier
--   
--   <b>is_pinned</b> True, if the message is pinned
UpdateMessageIsPinned :: Maybe Bool -> Maybe Int -> Maybe Int -> Update
[is_pinned] :: Update -> Maybe Bool
[message_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | The information about interactions with a message has changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_id</b> Message identifier
--   
--   <b>interaction_info</b> New information about interactions with the
--   message; may be null
UpdateMessageInteractionInfo :: Maybe MessageInteractionInfo -> Maybe Int -> Maybe Int -> Update
[interaction_info] :: Update -> Maybe MessageInteractionInfo
[message_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | The message content was opened. Updates voice note messages to
--   "listened", video note messages to "viewed" and starts the TTL timer
--   for self-destructing messages
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_id</b> Message identifier
UpdateMessageContentOpened :: Maybe Int -> Maybe Int -> Update
[message_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | A message with an unread mention was read
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_id</b> Message identifier
--   
--   <b>unread_mention_count</b> The new number of unread mention messages
--   left in the chat
UpdateMessageMentionRead :: Maybe Int -> Maybe Int -> Maybe Int -> Update
[unread_mention_count] :: Update -> Maybe Int
[message_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | A message with a live location was viewed. When the update is
--   received, the application is supposed to update the live location
--   
--   <b>chat_id</b> Identifier of the chat with the live location message
--   
--   <b>message_id</b> Identifier of the message with live location
UpdateMessageLiveLocationViewed :: Maybe Int -> Maybe Int -> Update
[message_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | A new chat has been loaded/created. This update is guaranteed to come
--   before the chat identifier is returned to the application. The chat
--   field changes will be reported through separate updates
--   
--   <b>chat</b> The chat
UpdateNewChat :: Maybe Chat -> Update
[chat] :: Update -> Maybe Chat

-- | The title of a chat was changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>title</b> The new chat title
UpdateChatTitle :: Maybe String -> Maybe Int -> Update
[title] :: Update -> Maybe String
[chat_id] :: Update -> Maybe Int

-- | A chat photo was changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>photo</b> The new chat photo; may be null
UpdateChatPhoto :: Maybe ChatPhotoInfo -> Maybe Int -> Update
[photo] :: Update -> Maybe ChatPhotoInfo
[chat_id] :: Update -> Maybe Int

-- | Chat permissions was changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>permissions</b> The new chat permissions
UpdateChatPermissions :: Maybe ChatPermissions -> Maybe Int -> Update
[permissions] :: Update -> Maybe ChatPermissions
[chat_id] :: Update -> Maybe Int

-- | The last message of a chat was changed. If last_message is null, then
--   the last message in the chat became unknown. Some new unknown messages
--   might be added to the chat in this case
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>last_message</b> The new last message in the chat; may be null
--   
--   <b>positions</b> The new chat positions in the chat lists
UpdateChatLastMessage :: Maybe [ChatPosition] -> Maybe Message -> Maybe Int -> Update
[positions] :: Update -> Maybe [ChatPosition]
[last_message] :: Update -> Maybe Message
[chat_id] :: Update -> Maybe Int

-- | The position of a chat in a chat list has changed. Instead of this
--   update updateChatLastMessage or updateChatDraftMessage might be sent
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>position</b> New chat position. If new order is 0, then the chat
--   needs to be removed from the list
UpdateChatPosition :: Maybe ChatPosition -> Maybe Int -> Update
[position] :: Update -> Maybe ChatPosition
[chat_id] :: Update -> Maybe Int

-- | A chat was marked as unread or was read
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>is_marked_as_unread</b> New value of is_marked_as_unread
UpdateChatIsMarkedAsUnread :: Maybe Bool -> Maybe Int -> Update
[is_marked_as_unread] :: Update -> Maybe Bool
[chat_id] :: Update -> Maybe Int

-- | A chat was blocked or unblocked
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>is_blocked</b> New value of is_blocked
UpdateChatIsBlocked :: Maybe Bool -> Maybe Int -> Update
[is_blocked] :: Update -> Maybe Bool
[chat_id] :: Update -> Maybe Int

-- | A chat's has_scheduled_messages field has changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>has_scheduled_messages</b> New value of has_scheduled_messages
UpdateChatHasScheduledMessages :: Maybe Bool -> Maybe Int -> Update
[has_scheduled_messages] :: Update -> Maybe Bool
[chat_id] :: Update -> Maybe Int

-- | A chat voice chat state has changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>voice_chat</b> New value of voice_chat
UpdateChatVoiceChat :: Maybe VoiceChat -> Maybe Int -> Update
[voice_chat] :: Update -> Maybe VoiceChat
[chat_id] :: Update -> Maybe Int

-- | The value of the default disable_notification parameter, used when a
--   message is sent to the chat, was changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>default_disable_notification</b> The new
--   default_disable_notification value
UpdateChatDefaultDisableNotification :: Maybe Bool -> Maybe Int -> Update
[default_disable_notification] :: Update -> Maybe Bool
[chat_id] :: Update -> Maybe Int

-- | Incoming messages were read or number of unread messages has been
--   changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>last_read_inbox_message_id</b> Identifier of the last read incoming
--   message
--   
--   <b>unread_count</b> The number of unread messages left in the chat
UpdateChatReadInbox :: Maybe Int -> Maybe Int -> Maybe Int -> Update
[unread_count] :: Update -> Maybe Int
[last_read_inbox_message_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | Outgoing messages were read
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>last_read_outbox_message_id</b> Identifier of last read outgoing
--   message
UpdateChatReadOutbox :: Maybe Int -> Maybe Int -> Update
[last_read_outbox_message_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | The chat unread_mention_count has changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>unread_mention_count</b> The number of unread mention messages left
--   in the chat
UpdateChatUnreadMentionCount :: Maybe Int -> Maybe Int -> Update
[unread_mention_count] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | Notification settings for a chat were changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>notification_settings</b> The new notification settings
UpdateChatNotificationSettings :: Maybe ChatNotificationSettings -> Maybe Int -> Update
[_notification_settings] :: Update -> Maybe ChatNotificationSettings
[chat_id] :: Update -> Maybe Int

-- | Notification settings for some type of chats were updated
--   
--   <b>scope</b> Types of chats for which notification settings were
--   updated
--   
--   <b>notification_settings</b> The new notification settings
UpdateScopeNotificationSettings :: Maybe ScopeNotificationSettings -> Maybe NotificationSettingsScope -> Update
[notification_settings] :: Update -> Maybe ScopeNotificationSettings
[scope] :: Update -> Maybe NotificationSettingsScope

-- | The message Time To Live setting for a chat was changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_ttl_setting</b> New value of message_ttl_setting
UpdateChatMessageTtlSetting :: Maybe Int -> Maybe Int -> Update
[message_ttl_setting] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | The chat action bar was changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>action_bar</b> The new value of the action bar; may be null
UpdateChatActionBar :: Maybe ChatActionBar -> Maybe Int -> Update
[action_bar] :: Update -> Maybe ChatActionBar
[chat_id] :: Update -> Maybe Int

-- | The chat theme was changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>theme_name</b> The new name of the chat theme; may be empty if
--   theme was reset to default
UpdateChatTheme :: Maybe String -> Maybe Int -> Update
[theme_name] :: Update -> Maybe String
[chat_id] :: Update -> Maybe Int

-- | The default chat reply markup was changed. Can occur because new
--   messages with reply markup were received or because an old reply
--   markup was hidden by the user
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>reply_markup_message_id</b> Identifier of the message from which
--   reply markup needs to be used; 0 if there is no default custom reply
--   markup in the chat
UpdateChatReplyMarkup :: Maybe Int -> Maybe Int -> Update
[reply_markup_message_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | A chat draft has changed. Be aware that the update may come in the
--   currently opened chat but with old content of the draft. If the user
--   has changed the content of the draft, this update mustn't be applied
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>draft_message</b> The new draft message; may be null
--   
--   <b>positions</b> The new chat positions in the chat lists
UpdateChatDraftMessage :: Maybe [ChatPosition] -> Maybe DraftMessage -> Maybe Int -> Update
[positions] :: Update -> Maybe [ChatPosition]
[draft_message] :: Update -> Maybe DraftMessage
[chat_id] :: Update -> Maybe Int

-- | The list of chat filters or a chat filter has changed
--   
--   <b>chat_filters</b> The new list of chat filters
UpdateChatFilters :: Maybe [ChatFilterInfo] -> Update
[chat_filters] :: Update -> Maybe [ChatFilterInfo]

-- | The number of online group members has changed. This update with
--   non-zero count is sent only for currently opened chats. There is no
--   guarantee that it will be sent just after the count has changed
--   
--   <b>chat_id</b> Identifier of the chat
--   
--   <b>online_member_count</b> New number of online members in the chat,
--   or 0 if unknown
UpdateChatOnlineMemberCount :: Maybe Int -> Maybe Int -> Update
[online_member_count] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | A notification was changed
--   
--   <b>notification_group_id</b> Unique notification group identifier
--   
--   <b>notification</b> Changed notification
UpdateNotification :: Maybe Notification -> Maybe Int -> Update
[notification] :: Update -> Maybe Notification
[notification_group_id] :: Update -> Maybe Int

-- | A list of active notifications in a notification group has changed
--   
--   <b>notification_group_id</b> Unique notification group identifier
--   
--   <b>type</b> New type of the notification group
--   
--   <b>chat_id</b> Identifier of a chat to which all notifications in the
--   group belong
--   
--   <b>notification_settings_chat_id</b> Chat identifier, which
--   notification settings must be applied to the added notifications
--   
--   <b>is_silent</b> True, if the notifications must be shown without
--   sound
--   
--   <b>total_count</b> Total number of unread notifications in the group,
--   can be bigger than number of active notifications
--   
--   <b>added_notifications</b> List of added group notifications, sorted
--   by notification ID
--   
--   <b>removed_notification_ids</b> Identifiers of removed group
--   notifications, sorted by notification ID
UpdateNotificationGroup :: Maybe [Int] -> Maybe [Notification] -> Maybe Int -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe NotificationGroupType -> Maybe Int -> Update
[removed_notification_ids] :: Update -> Maybe [Int]
[added_notifications] :: Update -> Maybe [Notification]
[total_count] :: Update -> Maybe Int
[is_silent] :: Update -> Maybe Bool
[notification_settings_chat_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int
[__type] :: Update -> Maybe NotificationGroupType
[notification_group_id] :: Update -> Maybe Int

-- | Contains active notifications that was shown on previous application
--   launches. This update is sent only if the message database is used. In
--   that case it comes once before any updateNotification and
--   updateNotificationGroup update
--   
--   <b>groups</b> Lists of active notification groups
UpdateActiveNotifications :: Maybe [NotificationGroup] -> Update
[groups] :: Update -> Maybe [NotificationGroup]

-- | Describes whether there are some pending notification updates. Can be
--   used to prevent application from killing, while there are some pending
--   notifications
--   
--   <b>have_delayed_notifications</b> True, if there are some delayed
--   notification updates, which will be sent soon
--   
--   <b>have_unreceived_notifications</b> True, if there can be some yet
--   unreceived notifications, which are being fetched from the server
UpdateHavePendingNotifications :: Maybe Bool -> Maybe Bool -> Update
[have_unreceived_notifications] :: Update -> Maybe Bool
[have_delayed_notifications] :: Update -> Maybe Bool

-- | Some messages were deleted
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_ids</b> Identifiers of the deleted messages
--   
--   <b>is_permanent</b> True, if the messages are permanently deleted by a
--   user (as opposed to just becoming inaccessible)
--   
--   <b>from_cache</b> True, if the messages are deleted only from the
--   cache and can possibly be retrieved again in the future
UpdateDeleteMessages :: Maybe Bool -> Maybe Bool -> Maybe [Int] -> Maybe Int -> Update
[from_cache] :: Update -> Maybe Bool
[is_permanent] :: Update -> Maybe Bool
[message_ids] :: Update -> Maybe [Int]
[chat_id] :: Update -> Maybe Int

-- | User activity in the chat has changed
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_thread_id</b> If not 0, a message thread identifier in
--   which the action was performed
--   
--   <b>user_id</b> Identifier of a user performing an action
--   
--   <b>action</b> The action description
UpdateUserChatAction :: Maybe ChatAction -> Maybe Int -> Maybe Int -> Maybe Int -> Update
[action] :: Update -> Maybe ChatAction
[user_id] :: Update -> Maybe Int
[message_thread_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | The user went online or offline
--   
--   <b>user_id</b> User identifier
--   
--   <b>status</b> New status of the user
UpdateUserStatus :: Maybe UserStatus -> Maybe Int -> Update
[status] :: Update -> Maybe UserStatus
[user_id] :: Update -> Maybe Int

-- | Some data of a user has changed. This update is guaranteed to come
--   before the user identifier is returned to the application
--   
--   <b>user</b> New data about the user
UpdateUser :: Maybe User -> Update
[user] :: Update -> Maybe User

-- | Some data of a basic group has changed. This update is guaranteed to
--   come before the basic group identifier is returned to the application
--   
--   <b>basic_group</b> New data about the group
UpdateBasicGroup :: Maybe BasicGroup -> Update
[basic_group] :: Update -> Maybe BasicGroup

-- | Some data of a supergroup or a channel has changed. This update is
--   guaranteed to come before the supergroup identifier is returned to the
--   application
--   
--   <b>supergroup</b> New data about the supergroup
UpdateSupergroup :: Maybe Supergroup -> Update
[supergroup] :: Update -> Maybe Supergroup

-- | Some data of a secret chat has changed. This update is guaranteed to
--   come before the secret chat identifier is returned to the application
--   
--   <b>secret_chat</b> New data about the secret chat
UpdateSecretChat :: Maybe SecretChat -> Update
[secret_chat] :: Update -> Maybe SecretChat

-- | Some data from userFullInfo has been changed
--   
--   <b>user_id</b> User identifier
--   
--   <b>user_full_info</b> New full information about the user
UpdateUserFullInfo :: Maybe UserFullInfo -> Maybe Int -> Update
[user_full_info] :: Update -> Maybe UserFullInfo
[user_id] :: Update -> Maybe Int

-- | Some data from basicGroupFullInfo has been changed
--   
--   <b>basic_group_id</b> Identifier of a basic group
--   
--   <b>basic_group_full_info</b> New full information about the group
UpdateBasicGroupFullInfo :: Maybe BasicGroupFullInfo -> Maybe Int -> Update
[basic_group_full_info] :: Update -> Maybe BasicGroupFullInfo
[basic_group_id] :: Update -> Maybe Int

-- | Some data from supergroupFullInfo has been changed
--   
--   <b>supergroup_id</b> Identifier of the supergroup or channel
--   
--   <b>supergroup_full_info</b> New full information about the supergroup
UpdateSupergroupFullInfo :: Maybe SupergroupFullInfo -> Maybe Int -> Update
[supergroup_full_info] :: Update -> Maybe SupergroupFullInfo
[supergroup_id] :: Update -> Maybe Int

-- | Service notification from the server. Upon receiving this the
--   application must show a popup with the content of the notification
--   
--   <b>type</b> Notification type. If type begins with
--   <a>AUTH_KEY_DROP_</a>, then two buttons <a>Cancel</a> and "Log out"
--   must be shown under notification; if user presses the second, all
--   local data must be destroyed using Destroy method
--   
--   <b>content</b> Notification content
UpdateServiceNotification :: Maybe MessageContent -> Maybe String -> Update
[content] :: Update -> Maybe MessageContent
[_type] :: Update -> Maybe String

-- | Information about a file was updated
--   
--   <b>file</b> New data about the file
UpdateFile :: Maybe File -> Update
[file] :: Update -> Maybe File

-- | The file generation process needs to be started by the application
--   
--   <b>generation_id</b> Unique identifier for the generation process
--   
--   <b>original_path</b> The path to a file from which a new file is
--   generated; may be empty
--   
--   <b>destination_path</b> The path to a file that must be created and
--   where the new file is generated
--   
--   <b>conversion</b> String specifying the conversion applied to the
--   original file. If conversion is "" than original_path contains an
--   HTTP/HTTPS URL of a file, which must be downloaded by the application
UpdateFileGenerationStart :: Maybe String -> Maybe String -> Maybe String -> Maybe Int -> Update
[conversion] :: Update -> Maybe String
[destination_path] :: Update -> Maybe String
[original_path] :: Update -> Maybe String
[generation_id] :: Update -> Maybe Int

-- | File generation is no longer needed
--   
--   <b>generation_id</b> Unique identifier for the generation process
UpdateFileGenerationStop :: Maybe Int -> Update
[generation_id] :: Update -> Maybe Int

-- | New call was created or information about a call was updated
--   
--   <b>call</b> New data about a call
UpdateCall :: Maybe Call -> Update
[call] :: Update -> Maybe Call

-- | Information about a group call was updated
--   
--   <b>group_call</b> New data about a group call
UpdateGroupCall :: Maybe GroupCall -> Update
[group_call] :: Update -> Maybe GroupCall

-- | Information about a group call participant was changed. The updates
--   are sent only after the group call is received through getGroupCall
--   and only if the call is joined or being joined
--   
--   <b>group_call_id</b> Identifier of group call
--   
--   <b>participant</b> New data about a participant
UpdateGroupCallParticipant :: Maybe GroupCallParticipant -> Maybe Int -> Update
[participant] :: Update -> Maybe GroupCallParticipant
[group_call_id] :: Update -> Maybe Int

-- | New call signaling data arrived
--   
--   <b>call_id</b> The call identifier
--   
--   <b>data</b> The data
UpdateNewCallSignalingData :: Maybe String -> Maybe Int -> Update
[_data] :: Update -> Maybe String
[call_id] :: Update -> Maybe Int

-- | Some privacy setting rules have been changed
--   
--   <b>setting</b> The privacy setting
--   
--   <b>rules</b> New privacy rules
UpdateUserPrivacySettingRules :: Maybe UserPrivacySettingRules -> Maybe UserPrivacySetting -> Update
[rules] :: Update -> Maybe UserPrivacySettingRules
[setting] :: Update -> Maybe UserPrivacySetting

-- | Number of unread messages in a chat list has changed. This update is
--   sent only if the message database is used
--   
--   <b>chat_list</b> The chat list with changed number of unread messages
--   
--   <b>unread_count</b> Total number of unread messages
--   
--   <b>unread_unmuted_count</b> Total number of unread messages in unmuted
--   chats
UpdateUnreadMessageCount :: Maybe Int -> Maybe Int -> Maybe ChatList -> Update
[unread_unmuted_count] :: Update -> Maybe Int
[unread_count] :: Update -> Maybe Int
[chat_list] :: Update -> Maybe ChatList

-- | Number of unread chats, i.e. with unread messages or marked as unread,
--   has changed. This update is sent only if the message database is used
--   
--   <b>chat_list</b> The chat list with changed number of unread messages
--   
--   <b>total_count</b> Approximate total number of chats in the chat list
--   
--   <b>unread_count</b> Total number of unread chats
--   
--   <b>unread_unmuted_count</b> Total number of unread unmuted chats
--   
--   <b>marked_as_unread_count</b> Total number of chats marked as unread
--   
--   <b>marked_as_unread_unmuted_count</b> Total number of unmuted chats
--   marked as unread
UpdateUnreadChatCount :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe ChatList -> Update
[marked_as_unread_unmuted_count] :: Update -> Maybe Int
[marked_as_unread_count] :: Update -> Maybe Int
[unread_unmuted_count] :: Update -> Maybe Int
[unread_count] :: Update -> Maybe Int
[total_count] :: Update -> Maybe Int
[chat_list] :: Update -> Maybe ChatList

-- | An option changed its value
--   
--   <b>name</b> The option name
--   
--   <b>value</b> The new option value
UpdateOption :: Maybe OptionValue -> Maybe String -> Update
[value] :: Update -> Maybe OptionValue
[name] :: Update -> Maybe String

-- | A sticker set has changed
--   
--   <b>sticker_set</b> The sticker set
UpdateStickerSet :: Maybe StickerSet -> Update
[sticker_set] :: Update -> Maybe StickerSet

-- | The list of installed sticker sets was updated
--   
--   <b>is_masks</b> True, if the list of installed mask sticker sets was
--   updated
--   
--   <b>sticker_set_ids</b> The new list of installed ordinary sticker sets
UpdateInstalledStickerSets :: Maybe [Int] -> Maybe Bool -> Update
[sticker_set_ids] :: Update -> Maybe [Int]
[is_masks] :: Update -> Maybe Bool

-- | The list of trending sticker sets was updated or some of them were
--   viewed
--   
--   <b>sticker_sets</b> The prefix of the list of trending sticker sets
--   with the newest trending sticker sets
UpdateTrendingStickerSets :: Maybe StickerSets -> Update
[sticker_sets] :: Update -> Maybe StickerSets

-- | The list of recently used stickers was updated
--   
--   <b>is_attached</b> True, if the list of stickers attached to photo or
--   video files was updated, otherwise the list of sent stickers is
--   updated
--   
--   <b>sticker_ids</b> The new list of file identifiers of recently used
--   stickers
UpdateRecentStickers :: Maybe [Int] -> Maybe Bool -> Update
[sticker_ids] :: Update -> Maybe [Int]
[is_attached] :: Update -> Maybe Bool

-- | The list of favorite stickers was updated
--   
--   <b>sticker_ids</b> The new list of file identifiers of favorite
--   stickers
UpdateFavoriteStickers :: Maybe [Int] -> Update
[sticker_ids] :: Update -> Maybe [Int]

-- | The list of saved animations was updated
--   
--   <b>animation_ids</b> The new list of file identifiers of saved
--   animations
UpdateSavedAnimations :: Maybe [Int] -> Update
[animation_ids] :: Update -> Maybe [Int]

-- | The selected background has changed
--   
--   <b>for_dark_theme</b> True, if background for dark theme has changed
--   
--   <b>background</b> The new selected background; may be null
UpdateSelectedBackground :: Maybe Background -> Maybe Bool -> Update
[background] :: Update -> Maybe Background
[for_dark_theme] :: Update -> Maybe Bool

-- | The list of available chat themes has changed
--   
--   <b>chat_themes</b> The new list of chat themes
UpdateChatThemes :: Maybe [ChatTheme] -> Update
[chat_themes] :: Update -> Maybe [ChatTheme]

-- | Some language pack strings have been updated
--   
--   <b>localization_target</b> Localization target to which the language
--   pack belongs
--   
--   <b>language_pack_id</b> Identifier of the updated language pack
--   
--   <b>strings</b> List of changed language pack strings
UpdateLanguagePackStrings :: Maybe [LanguagePackString] -> Maybe String -> Maybe String -> Update
[strings] :: Update -> Maybe [LanguagePackString]
[language_pack_id] :: Update -> Maybe String
[localization_target] :: Update -> Maybe String

-- | The connection state has changed. This update must be used only to
--   show a human-readable description of the connection state
--   
--   <b>state</b> The new connection state
UpdateConnectionState :: Maybe ConnectionState -> Update
[state] :: Update -> Maybe ConnectionState

-- | New terms of service must be accepted by the user. If the terms of
--   service are declined, then the deleteAccount method must be called
--   with the reason "Decline ToS update"
--   
--   <b>terms_of_service_id</b> Identifier of the terms of service
--   
--   <b>terms_of_service</b> The new terms of service
UpdateTermsOfService :: Maybe TermsOfService -> Maybe String -> Update
[terms_of_service] :: Update -> Maybe TermsOfService
[terms_of_service_id] :: Update -> Maybe String

-- | The list of users nearby has changed. The update is guaranteed to be
--   sent only 60 seconds after a successful searchChatsNearby request
--   
--   <b>users_nearby</b> The new list of users nearby
UpdateUsersNearby :: Maybe [ChatNearby] -> Update
[users_nearby] :: Update -> Maybe [ChatNearby]

-- | The list of supported dice emojis has changed
--   
--   <b>emojis</b> The new list of supported dice emojis
UpdateDiceEmojis :: Maybe [String] -> Update
[emojis] :: Update -> Maybe [String]

-- | Some animated emoji message was clicked and a big animated sticker
--   must be played if the message is visible on the screen.
--   chatActionWatchingAnimations with the text of the message needs to be
--   sent if the sticker is played
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>message_id</b> Message identifier
--   
--   <b>sticker</b> The animated sticker to be played
UpdateAnimatedEmojiMessageClicked :: Maybe Sticker -> Maybe Int -> Maybe Int -> Update
[sticker] :: Update -> Maybe Sticker
[message_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int

-- | The parameters of animation search through
--   GetOption("animation_search_bot_username") bot has changed
--   
--   <b>provider</b> Name of the animation search provider
--   
--   <b>emojis</b> The new list of emojis suggested for searching
UpdateAnimationSearchParameters :: Maybe [String] -> Maybe String -> Update
[emojis] :: Update -> Maybe [String]
[provider] :: Update -> Maybe String

-- | The list of suggested to the user actions has changed
--   
--   <b>added_actions</b> Added suggested actions
--   
--   <b>removed_actions</b> Removed suggested actions
UpdateSuggestedActions :: Maybe [SuggestedAction] -> Maybe [SuggestedAction] -> Update
[removed_actions] :: Update -> Maybe [SuggestedAction]
[added_actions] :: Update -> Maybe [SuggestedAction]

-- | A new incoming inline query; for bots only
--   
--   <b>id</b> Unique query identifier
--   
--   <b>sender_user_id</b> Identifier of the user who sent the query
--   
--   <b>user_location</b> User location; may be null
--   
--   <b>chat_type</b> Contains information about the type of the chat, from
--   which the query originated; may be null if unknown
--   
--   <b>query</b> Text of the query
--   
--   <b>offset</b> Offset of the first entry to return
UpdateNewInlineQuery :: Maybe String -> Maybe String -> Maybe ChatType -> Maybe Location -> Maybe Int -> Maybe Int -> Update
[offset] :: Update -> Maybe String
[query] :: Update -> Maybe String
[chat_type] :: Update -> Maybe ChatType
[user_location] :: Update -> Maybe Location
[sender_user_id] :: Update -> Maybe Int
[_id] :: Update -> Maybe Int

-- | The user has chosen a result of an inline query; for bots only
--   
--   <b>sender_user_id</b> Identifier of the user who sent the query
--   
--   <b>user_location</b> User location; may be null
--   
--   <b>query</b> Text of the query
--   
--   <b>result_id</b> Identifier of the chosen result
--   
--   <b>inline_message_id</b> Identifier of the sent inline message, if
--   known
UpdateNewChosenInlineResult :: Maybe String -> Maybe String -> Maybe String -> Maybe Location -> Maybe Int -> Update
[inline_message_id] :: Update -> Maybe String
[result_id] :: Update -> Maybe String
[query] :: Update -> Maybe String
[user_location] :: Update -> Maybe Location
[sender_user_id] :: Update -> Maybe Int

-- | A new incoming callback query; for bots only
--   
--   <b>id</b> Unique query identifier
--   
--   <b>sender_user_id</b> Identifier of the user who sent the query
--   
--   <b>chat_id</b> Identifier of the chat where the query was sent
--   
--   <b>message_id</b> Identifier of the message, from which the query
--   originated
--   
--   <b>chat_instance</b> Identifier that uniquely corresponds to the chat
--   to which the message was sent
--   
--   <b>payload</b> Query payload
UpdateNewCallbackQuery :: Maybe CallbackQueryPayload -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Update
[payload] :: Update -> Maybe CallbackQueryPayload
[chat_instance] :: Update -> Maybe Int
[message_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int
[sender_user_id] :: Update -> Maybe Int
[_id] :: Update -> Maybe Int

-- | A new incoming callback query from a message sent via a bot; for bots
--   only
--   
--   <b>id</b> Unique query identifier
--   
--   <b>sender_user_id</b> Identifier of the user who sent the query
--   
--   <b>inline_message_id</b> Identifier of the inline message, from which
--   the query originated
--   
--   <b>chat_instance</b> An identifier uniquely corresponding to the chat
--   a message was sent to
--   
--   <b>payload</b> Query payload
UpdateNewInlineCallbackQuery :: Maybe CallbackQueryPayload -> Maybe Int -> Maybe String -> Maybe Int -> Maybe Int -> Update
[payload] :: Update -> Maybe CallbackQueryPayload
[chat_instance] :: Update -> Maybe Int
[inline_message_id] :: Update -> Maybe String
[sender_user_id] :: Update -> Maybe Int
[_id] :: Update -> Maybe Int

-- | A new incoming shipping query; for bots only. Only for invoices with
--   flexible price
--   
--   <b>id</b> Unique query identifier
--   
--   <b>sender_user_id</b> Identifier of the user who sent the query
--   
--   <b>invoice_payload</b> Invoice payload
--   
--   <b>shipping_address</b> User shipping address
UpdateNewShippingQuery :: Maybe Address -> Maybe String -> Maybe Int -> Maybe Int -> Update
[shipping_address] :: Update -> Maybe Address
[invoice_payload] :: Update -> Maybe String
[sender_user_id] :: Update -> Maybe Int
[_id] :: Update -> Maybe Int

-- | A new incoming pre-checkout query; for bots only. Contains full
--   information about a checkout
--   
--   <b>id</b> Unique query identifier
--   
--   <b>sender_user_id</b> Identifier of the user who sent the query
--   
--   <b>currency</b> Currency for the product price
--   
--   <b>total_amount</b> Total price for the product, in the smallest units
--   of the currency
--   
--   <b>invoice_payload</b> Invoice payload
--   
--   <b>shipping_option_id</b> Identifier of a shipping option chosen by
--   the user; may be empty if not applicable
--   
--   <b>order_info</b> Information about the order; may be null
UpdateNewPreCheckoutQuery :: Maybe OrderInfo -> Maybe String -> Maybe String -> Maybe Int -> Maybe String -> Maybe Int -> Maybe Int -> Update
[order_info] :: Update -> Maybe OrderInfo
[shipping_option_id] :: Update -> Maybe String
[invoice_payload] :: Update -> Maybe String
[total_amount] :: Update -> Maybe Int
[currency] :: Update -> Maybe String
[sender_user_id] :: Update -> Maybe Int
[_id] :: Update -> Maybe Int

-- | A new incoming event; for bots only
--   
--   <b>event</b> A JSON-serialized event
UpdateNewCustomEvent :: Maybe String -> Update
[event] :: Update -> Maybe String

-- | A new incoming query; for bots only
--   
--   <b>id</b> The query identifier
--   
--   <b>data</b> JSON-serialized query data
--   
--   <b>timeout</b> Query timeout
UpdateNewCustomQuery :: Maybe Int -> Maybe String -> Maybe Int -> Update
[timeout] :: Update -> Maybe Int
[_data] :: Update -> Maybe String
[_id] :: Update -> Maybe Int

-- | A poll was updated; for bots only
--   
--   <b>poll</b> New data about the poll
UpdatePoll :: Maybe Poll -> Update
[poll] :: Update -> Maybe Poll

-- | A user changed the answer to a poll; for bots only
--   
--   <b>poll_id</b> Unique poll identifier
--   
--   <b>user_id</b> The user, who changed the answer to the poll
--   
--   <b>option_ids</b> 0-based identifiers of answer options, chosen by the
--   user
UpdatePollAnswer :: Maybe [Int] -> Maybe Int -> Maybe Int -> Update
[option_ids] :: Update -> Maybe [Int]
[user_id] :: Update -> Maybe Int
[poll_id] :: Update -> Maybe Int

-- | User rights changed in a chat; for bots only
--   
--   <b>chat_id</b> Chat identifier
--   
--   <b>actor_user_id</b> Identifier of the user, changing the rights
--   
--   <b>date</b> Point in time (Unix timestamp) when the user rights was
--   changed
--   
--   <b>invite_link</b> If user has joined the chat using an invite link,
--   the invite link; may be null
--   
--   <b>old_chat_member</b> Previous chat member
--   
--   <b>new_chat_member</b> New chat member
UpdateChatMember :: Maybe ChatMember -> Maybe ChatMember -> Maybe ChatInviteLink -> Maybe Int -> Maybe Int -> Maybe Int -> Update
[new_chat_member] :: Update -> Maybe ChatMember
[old_chat_member] :: Update -> Maybe ChatMember
[invite_link] :: Update -> Maybe ChatInviteLink
[date] :: Update -> Maybe Int
[actor_user_id] :: Update -> Maybe Int
[chat_id] :: Update -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Update.Update
instance GHC.Show.Show API.Update.Update
instance Data.Aeson.Types.ToJSON.ToJSON API.Update.Update
instance Data.Aeson.Types.FromJSON.FromJSON API.Update.Update

module API.Chat

-- | A chat. (Can be a private chat, basic group, supergroup, or secret
--   chat)
--   
--   <b>id</b> Chat unique identifier
--   
--   <b>type</b> Type of the chat
--   
--   <b>title</b> Chat title
--   
--   <b>photo</b> Chat photo; may be null
--   
--   <b>permissions</b> Actions that non-administrator chat members are
--   allowed to take in the chat
--   
--   <b>last_message</b> Last message in the chat; may be null
--   
--   <b>positions</b> Positions of the chat in chat lists
--   
--   <b>is_marked_as_unread</b> True, if the chat is marked as unread
--   
--   <b>is_blocked</b> True, if the chat is blocked by the current user and
--   private messages from the chat can't be received
--   
--   <b>has_scheduled_messages</b> True, if the chat has scheduled messages
--   
--   <b>can_be_deleted_only_for_self</b> True, if the chat messages can be
--   deleted only for the current user while other users will continue to
--   see the messages
--   
--   <b>can_be_deleted_for_all_users</b> True, if the chat messages can be
--   deleted for all users
--   
--   <b>can_be_reported</b> True, if the chat can be reported to Telegram
--   moderators through reportChat or reportChatPhoto
--   
--   <b>default_disable_notification</b> Default value of the
--   disable_notification parameter, used when a message is sent to the
--   chat
--   
--   <b>unread_count</b> Number of unread messages in the chat
--   
--   <b>last_read_inbox_message_id</b> Identifier of the last read incoming
--   message
--   
--   <b>last_read_outbox_message_id</b> Identifier of the last read
--   outgoing message
--   
--   <b>unread_mention_count</b> Number of unread messages with a
--   mention/reply in the chat
--   
--   <b>notification_settings</b> Notification settings for this chat
--   
--   <b>message_ttl_setting</b> Current message Time To Live setting
--   (self-destruct timer) for the chat; 0 if not defined. TTL is counted
--   from the time message or its content is viewed in secret chats and
--   from the send date in other chats
--   
--   <b>theme_name</b> If non-empty, name of a theme, set for the chat
--   
--   <b>action_bar</b> Describes actions which must be possible to do
--   through a chat action bar; may be null
--   
--   <b>voice_chat</b> Contains information about voice chat of the chat
--   
--   <b>reply_markup_message_id</b> Identifier of the message from which
--   reply markup needs to be used; 0 if there is no default custom reply
--   markup in the chat
--   
--   <b>draft_message</b> A draft of a message in the chat; may be null
--   
--   <b>client_data</b> Contains application-specific data associated with
--   the chat. (For example, the chat scroll position or local chat
--   notification settings can be stored here.) Persistent if the message
--   database is used
data Chat
Chat :: Maybe String -> Maybe DraftMessage -> Maybe Int -> Maybe VoiceChat -> Maybe ChatActionBar -> Maybe String -> Maybe Int -> Maybe ChatNotificationSettings -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe [ChatPosition] -> Maybe Message -> Maybe ChatPermissions -> Maybe ChatPhotoInfo -> Maybe String -> Maybe ChatType -> Maybe Int -> Chat
[client_data] :: Chat -> Maybe String
[draft_message] :: Chat -> Maybe DraftMessage
[reply_markup_message_id] :: Chat -> Maybe Int
[voice_chat] :: Chat -> Maybe VoiceChat
[action_bar] :: Chat -> Maybe ChatActionBar
[theme_name] :: Chat -> Maybe String
[message_ttl_setting] :: Chat -> Maybe Int
[notification_settings] :: Chat -> Maybe ChatNotificationSettings
[unread_mention_count] :: Chat -> Maybe Int
[last_read_outbox_message_id] :: Chat -> Maybe Int
[last_read_inbox_message_id] :: Chat -> Maybe Int
[unread_count] :: Chat -> Maybe Int
[default_disable_notification] :: Chat -> Maybe Bool
[can_be_reported] :: Chat -> Maybe Bool
[can_be_deleted_for_all_users] :: Chat -> Maybe Bool
[can_be_deleted_only_for_self] :: Chat -> Maybe Bool
[has_scheduled_messages] :: Chat -> Maybe Bool
[is_blocked] :: Chat -> Maybe Bool
[is_marked_as_unread] :: Chat -> Maybe Bool
[positions] :: Chat -> Maybe [ChatPosition]
[last_message] :: Chat -> Maybe Message
[permissions] :: Chat -> Maybe ChatPermissions
[photo] :: Chat -> Maybe ChatPhotoInfo
[title] :: Chat -> Maybe String
[_type] :: Chat -> Maybe ChatType
[_id] :: Chat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.Chat.Chat
instance GHC.Show.Show API.Chat.Chat
instance Data.Aeson.Types.ToJSON.ToJSON API.Chat.Chat
instance Data.Aeson.Types.FromJSON.FromJSON API.Chat.Chat

module API.VoiceChat

-- | Describes a voice chat
--   
--   <b>group_call_id</b> Group call identifier of an active voice chat; 0
--   if none. Full informationa about the voice chat can be received
--   through the method getGroupCall
--   
--   <b>has_participants</b> True, if the voice chat has participants
--   
--   <b>default_participant_id</b> Default group call participant
--   identifier to join the voice chat; may be null
data VoiceChat
VoiceChat :: Maybe MessageSender -> Maybe Bool -> Maybe Int -> VoiceChat
[default_participant_id] :: VoiceChat -> Maybe MessageSender
[has_participants] :: VoiceChat -> Maybe Bool
[group_call_id] :: VoiceChat -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.VoiceChat.VoiceChat
instance GHC.Show.Show API.VoiceChat.VoiceChat
instance Data.Aeson.Types.ToJSON.ToJSON API.VoiceChat.VoiceChat
instance Data.Aeson.Types.FromJSON.FromJSON API.VoiceChat.VoiceChat

module API.PushMessageContent

-- | Contains content of a push message notification
data PushMessageContent

-- | A general message with hidden content
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentHidden :: Maybe Bool -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool

-- | An animation message (GIF-style).
--   
--   <b>animation</b> Message content; may be null
--   
--   <b>caption</b> Animation caption
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentAnimation :: Maybe Bool -> Maybe String -> Maybe Animation -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[caption] :: PushMessageContent -> Maybe String
[animation] :: PushMessageContent -> Maybe Animation

-- | An audio message
--   
--   <b>audio</b> Message content; may be null
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentAudio :: Maybe Bool -> Maybe Audio -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[audio] :: PushMessageContent -> Maybe Audio

-- | A message with a user contact
--   
--   <b>name</b> Contact's name
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentContact :: Maybe Bool -> Maybe String -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[name] :: PushMessageContent -> Maybe String

-- | A contact has registered with Telegram
PushMessageContentContactRegistered :: PushMessageContent

-- | A document message (a general file)
--   
--   <b>document</b> Message content; may be null
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentDocument :: Maybe Bool -> Maybe Document -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[document] :: PushMessageContent -> Maybe Document

-- | A message with a game
--   
--   <b>title</b> Game title, empty for pinned game message
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentGame :: Maybe Bool -> Maybe String -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[title] :: PushMessageContent -> Maybe String

-- | A new high score was achieved in a game
--   
--   <b>title</b> Game title, empty for pinned message
--   
--   <b>score</b> New score, 0 for pinned message
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentGameScore :: Maybe Bool -> Maybe Int -> Maybe String -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[score] :: PushMessageContent -> Maybe Int
[title] :: PushMessageContent -> Maybe String

-- | A message with an invoice from a bot
--   
--   <b>price</b> Product price
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentInvoice :: Maybe Bool -> Maybe String -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[price] :: PushMessageContent -> Maybe String

-- | A message with a location
--   
--   <b>is_live</b> True, if the location is live
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentLocation :: Maybe Bool -> Maybe Bool -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[is_live] :: PushMessageContent -> Maybe Bool

-- | A photo message
--   
--   <b>photo</b> Message content; may be null
--   
--   <b>caption</b> Photo caption
--   
--   <b>is_secret</b> True, if the photo is secret
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentPhoto :: Maybe Bool -> Maybe Bool -> Maybe String -> Maybe Photo -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[is_secret] :: PushMessageContent -> Maybe Bool
[caption] :: PushMessageContent -> Maybe String
[photo] :: PushMessageContent -> Maybe Photo

-- | A message with a poll
--   
--   <b>question</b> Poll question
--   
--   <b>is_regular</b> True, if the poll is regular and not in quiz mode
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentPoll :: Maybe Bool -> Maybe Bool -> Maybe String -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[is_regular] :: PushMessageContent -> Maybe Bool
[question] :: PushMessageContent -> Maybe String

-- | A screenshot of a message in the chat has been taken
PushMessageContentScreenshotTaken :: PushMessageContent

-- | A message with a sticker
--   
--   <b>sticker</b> Message content; may be null
--   
--   <b>emoji</b> Emoji corresponding to the sticker; may be empty
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentSticker :: Maybe Bool -> Maybe String -> Maybe Sticker -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[emoji] :: PushMessageContent -> Maybe String
[sticker] :: PushMessageContent -> Maybe Sticker

-- | A text message
--   
--   <b>text</b> Message text
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentText :: Maybe Bool -> Maybe String -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[text] :: PushMessageContent -> Maybe String

-- | A video message
--   
--   <b>video</b> Message content; may be null
--   
--   <b>caption</b> Video caption
--   
--   <b>is_secret</b> True, if the video is secret
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentVideo :: Maybe Bool -> Maybe Bool -> Maybe String -> Maybe Video -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[is_secret] :: PushMessageContent -> Maybe Bool
[caption] :: PushMessageContent -> Maybe String
[video] :: PushMessageContent -> Maybe Video

-- | A video note message
--   
--   <b>video_note</b> Message content; may be null
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentVideoNote :: Maybe Bool -> Maybe VideoNote -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[video_note] :: PushMessageContent -> Maybe VideoNote

-- | A voice note message
--   
--   <b>voice_note</b> Message content; may be null
--   
--   <b>is_pinned</b> True, if the message is a pinned message with the
--   specified content
PushMessageContentVoiceNote :: Maybe Bool -> Maybe VoiceNote -> PushMessageContent
[is_pinned] :: PushMessageContent -> Maybe Bool
[voice_note] :: PushMessageContent -> Maybe VoiceNote

-- | A newly created basic group
PushMessageContentBasicGroupChatCreate :: PushMessageContent

-- | New chat members were invited to a group
--   
--   <b>member_name</b> Name of the added member
--   
--   <b>is_current_user</b> True, if the current user was added to the
--   group
--   
--   <b>is_returned</b> True, if the user has returned to the group
--   themselves
PushMessageContentChatAddMembers :: Maybe Bool -> Maybe Bool -> Maybe String -> PushMessageContent
[is_returned] :: PushMessageContent -> Maybe Bool
[is_current_user] :: PushMessageContent -> Maybe Bool
[member_name] :: PushMessageContent -> Maybe String

-- | A chat photo was edited
PushMessageContentChatChangePhoto :: PushMessageContent

-- | A chat title was edited
--   
--   <b>title</b> New chat title
PushMessageContentChatChangeTitle :: Maybe String -> PushMessageContent
[title] :: PushMessageContent -> Maybe String

-- | A chat theme was edited
--   
--   <b>theme_name</b> If non-empty, name of a new theme, set for the chat.
--   Otherwise chat theme was reset to the default one
PushMessageContentChatSetTheme :: Maybe String -> PushMessageContent
[theme_name] :: PushMessageContent -> Maybe String

-- | A chat member was deleted
--   
--   <b>member_name</b> Name of the deleted member
--   
--   <b>is_current_user</b> True, if the current user was deleted from the
--   group
--   
--   <b>is_left</b> True, if the user has left the group themselves
PushMessageContentChatDeleteMember :: Maybe Bool -> Maybe Bool -> Maybe String -> PushMessageContent
[is_left] :: PushMessageContent -> Maybe Bool
[is_current_user] :: PushMessageContent -> Maybe Bool
[member_name] :: PushMessageContent -> Maybe String

-- | A new member joined the chat by invite link
PushMessageContentChatJoinByLink :: PushMessageContent

-- | A forwarded messages
--   
--   <b>total_count</b> Number of forwarded messages
PushMessageContentMessageForwards :: Maybe Int -> PushMessageContent
[total_count] :: PushMessageContent -> Maybe Int

-- | A media album
--   
--   <b>total_count</b> Number of messages in the album
--   
--   <b>has_photos</b> True, if the album has at least one photo
--   
--   <b>has_videos</b> True, if the album has at least one video
--   
--   <b>has_audios</b> True, if the album has at least one audio file
--   
--   <b>has_documents</b> True, if the album has at least one document
PushMessageContentMediaAlbum :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Int -> PushMessageContent
[has_documents] :: PushMessageContent -> Maybe Bool
[has_audios] :: PushMessageContent -> Maybe Bool
[has_videos] :: PushMessageContent -> Maybe Bool
[has_photos] :: PushMessageContent -> Maybe Bool
[total_count] :: PushMessageContent -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PushMessageContent.PushMessageContent
instance GHC.Show.Show API.PushMessageContent.PushMessageContent
instance Data.Aeson.Types.ToJSON.ToJSON API.PushMessageContent.PushMessageContent
instance Data.Aeson.Types.FromJSON.FromJSON API.PushMessageContent.PushMessageContent

module API.PageBlock

-- | Describes a block of an instant view web page
data PageBlock

-- | The title of a page
--   
--   <b>title</b> Title
PageBlockTitle :: Maybe RichText -> PageBlock
[_title] :: PageBlock -> Maybe RichText

-- | The subtitle of a page
--   
--   <b>subtitle</b> Subtitle
PageBlockSubtitle :: Maybe RichText -> PageBlock
[subtitle] :: PageBlock -> Maybe RichText

-- | The author and publishing date of a page
--   
--   <b>author</b> Author
--   
--   <b>publish_date</b> Point in time (Unix timestamp) when the article
--   was published; 0 if unknown
PageBlockAuthorDate :: Maybe Int -> Maybe RichText -> PageBlock
[publish_date] :: PageBlock -> Maybe Int
[_author] :: PageBlock -> Maybe RichText

-- | A header
--   
--   <b>header</b> Header
PageBlockHeader :: Maybe RichText -> PageBlock
[header] :: PageBlock -> Maybe RichText

-- | A subheader
--   
--   <b>subheader</b> Subheader
PageBlockSubheader :: Maybe RichText -> PageBlock
[subheader] :: PageBlock -> Maybe RichText

-- | A kicker
--   
--   <b>kicker</b> Kicker
PageBlockKicker :: Maybe RichText -> PageBlock
[kicker] :: PageBlock -> Maybe RichText

-- | A text paragraph
--   
--   <b>text</b> Paragraph text
PageBlockParagraph :: Maybe RichText -> PageBlock
[text] :: PageBlock -> Maybe RichText

-- | A preformatted text paragraph
--   
--   <b>text</b> Paragraph text
--   
--   <b>language</b> Programming language for which the text needs to be
--   formatted
PageBlockPreformatted :: Maybe String -> Maybe RichText -> PageBlock
[language] :: PageBlock -> Maybe String
[text] :: PageBlock -> Maybe RichText

-- | The footer of a page
--   
--   <b>footer</b> Footer
PageBlockFooter :: Maybe RichText -> PageBlock
[footer] :: PageBlock -> Maybe RichText

-- | An empty block separating a page
PageBlockDivider :: PageBlock

-- | An invisible anchor on a page, which can be used in a URL to open the
--   page from the specified anchor
--   
--   <b>name</b> Name of the anchor
PageBlockAnchor :: Maybe String -> PageBlock
[name] :: PageBlock -> Maybe String

-- | A list of data blocks
--   
--   <b>items</b> The items of the list
PageBlockList :: Maybe [PageBlockListItem] -> PageBlock
[items] :: PageBlock -> Maybe [PageBlockListItem]

-- | A block quote
--   
--   <b>text</b> Quote text
--   
--   <b>credit</b> Quote credit
PageBlockBlockQuote :: Maybe RichText -> Maybe RichText -> PageBlock
[credit] :: PageBlock -> Maybe RichText
[text] :: PageBlock -> Maybe RichText

-- | A pull quote
--   
--   <b>text</b> Quote text
--   
--   <b>credit</b> Quote credit
PageBlockPullQuote :: Maybe RichText -> Maybe RichText -> PageBlock
[credit] :: PageBlock -> Maybe RichText
[text] :: PageBlock -> Maybe RichText

-- | An animation
--   
--   <b>animation</b> Animation file; may be null
--   
--   <b>caption</b> Animation caption
--   
--   <b>need_autoplay</b> True, if the animation must be played
--   automatically
PageBlockAnimation :: Maybe Bool -> Maybe PageBlockCaption -> Maybe Animation -> PageBlock
[need_autoplay] :: PageBlock -> Maybe Bool
[caption] :: PageBlock -> Maybe PageBlockCaption
[animation] :: PageBlock -> Maybe Animation

-- | An audio file
--   
--   <b>audio</b> Audio file; may be null
--   
--   <b>caption</b> Audio file caption
PageBlockAudio :: Maybe PageBlockCaption -> Maybe Audio -> PageBlock
[caption] :: PageBlock -> Maybe PageBlockCaption
[audio] :: PageBlock -> Maybe Audio

-- | A photo
--   
--   <b>photo</b> Photo file; may be null
--   
--   <b>caption</b> Photo caption
--   
--   <b>url</b> URL that needs to be opened when the photo is clicked
PageBlockPhoto :: Maybe String -> Maybe PageBlockCaption -> Maybe Photo -> PageBlock
[url] :: PageBlock -> Maybe String
[caption] :: PageBlock -> Maybe PageBlockCaption
[_photo] :: PageBlock -> Maybe Photo

-- | A video
--   
--   <b>video</b> Video file; may be null
--   
--   <b>caption</b> Video caption
--   
--   <b>need_autoplay</b> True, if the video must be played automatically
--   
--   <b>is_looped</b> True, if the video must be looped
PageBlockVideo :: Maybe Bool -> Maybe Bool -> Maybe PageBlockCaption -> Maybe Video -> PageBlock
[is_looped] :: PageBlock -> Maybe Bool
[need_autoplay] :: PageBlock -> Maybe Bool
[caption] :: PageBlock -> Maybe PageBlockCaption
[video] :: PageBlock -> Maybe Video

-- | A voice note
--   
--   <b>voice_note</b> Voice note; may be null
--   
--   <b>caption</b> Voice note caption
PageBlockVoiceNote :: Maybe PageBlockCaption -> Maybe VoiceNote -> PageBlock
[caption] :: PageBlock -> Maybe PageBlockCaption
[voice_note] :: PageBlock -> Maybe VoiceNote

-- | A page cover
--   
--   <b>cover</b> Cover
PageBlockCover :: Maybe PageBlock -> PageBlock
[cover] :: PageBlock -> Maybe PageBlock

-- | An embedded web page
--   
--   <b>url</b> Web page URL, if available
--   
--   <b>html</b> HTML-markup of the embedded page
--   
--   <b>poster_photo</b> Poster photo, if available; may be null
--   
--   <b>width</b> Block width; 0 if unknown
--   
--   <b>height</b> Block height; 0 if unknown
--   
--   <b>caption</b> Block caption
--   
--   <b>is_full_width</b> True, if the block must be full width
--   
--   <b>allow_scrolling</b> True, if scrolling needs to be allowed
PageBlockEmbedded :: Maybe Bool -> Maybe Bool -> Maybe PageBlockCaption -> Maybe Int -> Maybe Int -> Maybe Photo -> Maybe String -> Maybe String -> PageBlock
[allow_scrolling] :: PageBlock -> Maybe Bool
[is_full_width] :: PageBlock -> Maybe Bool
[caption] :: PageBlock -> Maybe PageBlockCaption
[height] :: PageBlock -> Maybe Int
[width] :: PageBlock -> Maybe Int
[poster_photo] :: PageBlock -> Maybe Photo
[html] :: PageBlock -> Maybe String
[url] :: PageBlock -> Maybe String

-- | An embedded post
--   
--   <b>url</b> Web page URL
--   
--   <b>author</b> Post author
--   
--   <b>author_photo</b> Post author photo; may be null
--   
--   <b>date</b> Point in time (Unix timestamp) when the post was created;
--   0 if unknown
--   
--   <b>page_blocks</b> Post content
--   
--   <b>caption</b> Post caption
PageBlockEmbeddedPost :: Maybe PageBlockCaption -> Maybe [PageBlock] -> Maybe Int -> Maybe Photo -> Maybe String -> Maybe String -> PageBlock
[caption] :: PageBlock -> Maybe PageBlockCaption
[page_blocks] :: PageBlock -> Maybe [PageBlock]
[date] :: PageBlock -> Maybe Int
[author_photo] :: PageBlock -> Maybe Photo
[author] :: PageBlock -> Maybe String
[url] :: PageBlock -> Maybe String

-- | A collage
--   
--   <b>page_blocks</b> Collage item contents
--   
--   <b>caption</b> Block caption
PageBlockCollage :: Maybe PageBlockCaption -> Maybe [PageBlock] -> PageBlock
[caption] :: PageBlock -> Maybe PageBlockCaption
[page_blocks] :: PageBlock -> Maybe [PageBlock]

-- | A slideshow
--   
--   <b>page_blocks</b> Slideshow item contents
--   
--   <b>caption</b> Block caption
PageBlockSlideshow :: Maybe PageBlockCaption -> Maybe [PageBlock] -> PageBlock
[caption] :: PageBlock -> Maybe PageBlockCaption
[page_blocks] :: PageBlock -> Maybe [PageBlock]

-- | A link to a chat
--   
--   <b>title</b> Chat title
--   
--   <b>photo</b> Chat photo; may be null
--   
--   <b>username</b> Chat username, by which all other information about
--   the chat can be resolved
PageBlockChatLink :: Maybe String -> Maybe ChatPhotoInfo -> Maybe String -> PageBlock
[username] :: PageBlock -> Maybe String
[photo] :: PageBlock -> Maybe ChatPhotoInfo
[title] :: PageBlock -> Maybe String

-- | A table
--   
--   <b>caption</b> Table caption
--   
--   <b>cells</b> Table cells
--   
--   <b>is_bordered</b> True, if the table is bordered
--   
--   <b>is_striped</b> True, if the table is striped
PageBlockTable :: Maybe Bool -> Maybe Bool -> Maybe [PageBlockTableCell] -> Maybe RichText -> PageBlock
[is_striped] :: PageBlock -> Maybe Bool
[is_bordered] :: PageBlock -> Maybe Bool
[cells] :: PageBlock -> Maybe [PageBlockTableCell]
[_caption] :: PageBlock -> Maybe RichText

-- | A collapsible block
--   
--   <b>header</b> Always visible heading for the block
--   
--   <b>page_blocks</b> Block contents
--   
--   <b>is_open</b> True, if the block is open by default
PageBlockDetails :: Maybe Bool -> Maybe [PageBlock] -> Maybe RichText -> PageBlock
[is_open] :: PageBlock -> Maybe Bool
[page_blocks] :: PageBlock -> Maybe [PageBlock]
[header] :: PageBlock -> Maybe RichText

-- | Related articles
--   
--   <b>header</b> Block header
--   
--   <b>articles</b> List of related articles
PageBlockRelatedArticles :: Maybe [PageBlockRelatedArticle] -> Maybe RichText -> PageBlock
[articles] :: PageBlock -> Maybe [PageBlockRelatedArticle]
[header] :: PageBlock -> Maybe RichText

-- | A map
--   
--   <b>location</b> Location of the map center
--   
--   <b>zoom</b> Map zoom level
--   
--   <b>width</b> Map width
--   
--   <b>height</b> Map height
--   
--   <b>caption</b> Block caption
PageBlockMap :: Maybe PageBlockCaption -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Location -> PageBlock
[caption] :: PageBlock -> Maybe PageBlockCaption
[height] :: PageBlock -> Maybe Int
[width] :: PageBlock -> Maybe Int
[zoom] :: PageBlock -> Maybe Int
[location] :: PageBlock -> Maybe Location
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.PageBlock.PageBlock
instance GHC.Show.Show API.PageBlock.PageBlock
instance Data.Aeson.Types.ToJSON.ToJSON API.PageBlock.PageBlock
instance Data.Aeson.Types.FromJSON.FromJSON API.PageBlock.PageBlock

module API.InlineQueryResult

-- | Represents a single result of an inline query
data InlineQueryResult

-- | Represents a link to an article or web page
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>url</b> URL of the result, if it exists
--   
--   <b>hide_url</b> True, if the URL must be not shown
--   
--   <b>title</b> Title of the result
--   
--   <b>param_description</b> A short description of the result
--   
--   <b>thumbnail</b> Result thumbnail in JPEG format; may be null
InlineQueryResultArticle :: Maybe Thumbnail -> Maybe String -> Maybe String -> Maybe Bool -> Maybe String -> Maybe String -> InlineQueryResult
[thumbnail] :: InlineQueryResult -> Maybe Thumbnail
[description] :: InlineQueryResult -> Maybe String
[title] :: InlineQueryResult -> Maybe String
[hide_url] :: InlineQueryResult -> Maybe Bool
[url] :: InlineQueryResult -> Maybe String
[_id] :: InlineQueryResult -> Maybe String

-- | Represents a user contact
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>contact</b> A user contact
--   
--   <b>thumbnail</b> Result thumbnail in JPEG format; may be null
InlineQueryResultContact :: Maybe Thumbnail -> Maybe Contact -> Maybe String -> InlineQueryResult
[thumbnail] :: InlineQueryResult -> Maybe Thumbnail
[contact] :: InlineQueryResult -> Maybe Contact
[_id] :: InlineQueryResult -> Maybe String

-- | Represents a point on the map
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>location</b> Location result
--   
--   <b>title</b> Title of the result
--   
--   <b>thumbnail</b> Result thumbnail in JPEG format; may be null
InlineQueryResultLocation :: Maybe Thumbnail -> Maybe String -> Maybe Location -> Maybe String -> InlineQueryResult
[thumbnail] :: InlineQueryResult -> Maybe Thumbnail
[title] :: InlineQueryResult -> Maybe String
[location] :: InlineQueryResult -> Maybe Location
[_id] :: InlineQueryResult -> Maybe String

-- | Represents information about a venue
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>venue</b> Venue result
--   
--   <b>thumbnail</b> Result thumbnail in JPEG format; may be null
InlineQueryResultVenue :: Maybe Thumbnail -> Maybe Venue -> Maybe String -> InlineQueryResult
[thumbnail] :: InlineQueryResult -> Maybe Thumbnail
[venue] :: InlineQueryResult -> Maybe Venue
[_id] :: InlineQueryResult -> Maybe String

-- | Represents information about a game
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>game</b> Game result
InlineQueryResultGame :: Maybe Game -> Maybe String -> InlineQueryResult
[game] :: InlineQueryResult -> Maybe Game
[_id] :: InlineQueryResult -> Maybe String

-- | Represents an animation file
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>animation</b> Animation file
--   
--   <b>title</b> Animation title
InlineQueryResultAnimation :: Maybe String -> Maybe Animation -> Maybe String -> InlineQueryResult
[title] :: InlineQueryResult -> Maybe String
[animation] :: InlineQueryResult -> Maybe Animation
[_id] :: InlineQueryResult -> Maybe String

-- | Represents an audio file
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>audio</b> Audio file
InlineQueryResultAudio :: Maybe Audio -> Maybe String -> InlineQueryResult
[audio] :: InlineQueryResult -> Maybe Audio
[_id] :: InlineQueryResult -> Maybe String

-- | Represents a document
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>document</b> Document
--   
--   <b>title</b> Document title
--   
--   <b>param_description</b> Document description
InlineQueryResultDocument :: Maybe String -> Maybe String -> Maybe Document -> Maybe String -> InlineQueryResult
[description] :: InlineQueryResult -> Maybe String
[title] :: InlineQueryResult -> Maybe String
[document] :: InlineQueryResult -> Maybe Document
[_id] :: InlineQueryResult -> Maybe String

-- | Represents a photo
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>photo</b> Photo
--   
--   <b>title</b> Title of the result, if known
--   
--   <b>param_description</b> A short description of the result, if known
InlineQueryResultPhoto :: Maybe String -> Maybe String -> Maybe Photo -> Maybe String -> InlineQueryResult
[description] :: InlineQueryResult -> Maybe String
[title] :: InlineQueryResult -> Maybe String
[photo] :: InlineQueryResult -> Maybe Photo
[_id] :: InlineQueryResult -> Maybe String

-- | Represents a sticker
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>sticker</b> Sticker
InlineQueryResultSticker :: Maybe Sticker -> Maybe String -> InlineQueryResult
[sticker] :: InlineQueryResult -> Maybe Sticker
[_id] :: InlineQueryResult -> Maybe String

-- | Represents a video
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>video</b> Video
--   
--   <b>title</b> Title of the video
--   
--   <b>param_description</b> Description of the video
InlineQueryResultVideo :: Maybe String -> Maybe String -> Maybe Video -> Maybe String -> InlineQueryResult
[description] :: InlineQueryResult -> Maybe String
[title] :: InlineQueryResult -> Maybe String
[video] :: InlineQueryResult -> Maybe Video
[_id] :: InlineQueryResult -> Maybe String

-- | Represents a voice note
--   
--   <b>id</b> Unique identifier of the query result
--   
--   <b>voice_note</b> Voice note
--   
--   <b>title</b> Title of the voice note
InlineQueryResultVoiceNote :: Maybe String -> Maybe VoiceNote -> Maybe String -> InlineQueryResult
[title] :: InlineQueryResult -> Maybe String
[voice_note] :: InlineQueryResult -> Maybe VoiceNote
[_id] :: InlineQueryResult -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.InlineQueryResult.InlineQueryResult
instance GHC.Show.Show API.InlineQueryResult.InlineQueryResult
instance Data.Aeson.Types.ToJSON.ToJSON API.InlineQueryResult.InlineQueryResult
instance Data.Aeson.Types.FromJSON.FromJSON API.InlineQueryResult.InlineQueryResult

module API.VoiceNote

-- | Describes a voice note. The voice note must be encoded with the Opus
--   codec, and stored inside an OGG container. Voice notes can have only a
--   single audio channel
--   
--   <b>duration</b> Duration of the voice note, in seconds; as defined by
--   the sender
--   
--   <b>waveform</b> A waveform representation of the voice note in 5-bit
--   format
--   
--   <b>mime_type</b> MIME type of the file; as defined by the sender
--   
--   <b>voice</b> File containing the voice note
data VoiceNote
VoiceNote :: Maybe File -> Maybe String -> Maybe String -> Maybe Int -> VoiceNote
[voice] :: VoiceNote -> Maybe File
[mime_type] :: VoiceNote -> Maybe String
[waveform] :: VoiceNote -> Maybe String
[duration] :: VoiceNote -> Maybe Int
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.VoiceNote.VoiceNote
instance GHC.Show.Show API.VoiceNote.VoiceNote
instance Data.Aeson.Types.ToJSON.ToJSON API.VoiceNote.VoiceNote
instance Data.Aeson.Types.FromJSON.FromJSON API.VoiceNote.VoiceNote

module API.MessageContent

-- | Contains the content of a message
data MessageContent

-- | A text message
--   
--   <b>text</b> Text of the message
--   
--   <b>web_page</b> A preview of the web page that's mentioned in the
--   text; may be null
MessageText :: Maybe WebPage -> Maybe FormattedText -> MessageContent
[web_page] :: MessageContent -> Maybe WebPage
[_text] :: MessageContent -> Maybe FormattedText

-- | An animation message (GIF-style).
--   
--   <b>animation</b> The animation description
--   
--   <b>caption</b> Animation caption
--   
--   <b>is_secret</b> True, if the animation thumbnail must be blurred and
--   the animation must be shown only while tapped
MessageAnimation :: Maybe Bool -> Maybe FormattedText -> Maybe Animation -> MessageContent
[is_secret] :: MessageContent -> Maybe Bool
[caption] :: MessageContent -> Maybe FormattedText
[animation] :: MessageContent -> Maybe Animation

-- | An audio message
--   
--   <b>audio</b> The audio description
--   
--   <b>caption</b> Audio caption
MessageAudio :: Maybe FormattedText -> Maybe Audio -> MessageContent
[caption] :: MessageContent -> Maybe FormattedText
[audio] :: MessageContent -> Maybe Audio

-- | A document message (general file)
--   
--   <b>document</b> The document description
--   
--   <b>caption</b> Document caption
MessageDocument :: Maybe FormattedText -> Maybe Document -> MessageContent
[caption] :: MessageContent -> Maybe FormattedText
[document] :: MessageContent -> Maybe Document

-- | A photo message
--   
--   <b>photo</b> The photo description
--   
--   <b>caption</b> Photo caption
--   
--   <b>is_secret</b> True, if the photo must be blurred and must be shown
--   only while tapped
MessagePhoto :: Maybe Bool -> Maybe FormattedText -> Maybe Photo -> MessageContent
[is_secret] :: MessageContent -> Maybe Bool
[caption] :: MessageContent -> Maybe FormattedText
[_photo] :: MessageContent -> Maybe Photo

-- | An expired photo message (self-destructed after TTL has elapsed)
MessageExpiredPhoto :: MessageContent

-- | A sticker message
--   
--   <b>sticker</b> The sticker description
MessageSticker :: Maybe Sticker -> MessageContent
[sticker] :: MessageContent -> Maybe Sticker

-- | A video message
--   
--   <b>video</b> The video description
--   
--   <b>caption</b> Video caption
--   
--   <b>is_secret</b> True, if the video thumbnail must be blurred and the
--   video must be shown only while tapped
MessageVideo :: Maybe Bool -> Maybe FormattedText -> Maybe Video -> MessageContent
[is_secret] :: MessageContent -> Maybe Bool
[caption] :: MessageContent -> Maybe FormattedText
[video] :: MessageContent -> Maybe Video

-- | An expired video message (self-destructed after TTL has elapsed)
MessageExpiredVideo :: MessageContent

-- | A video note message
--   
--   <b>video_note</b> The video note description
--   
--   <b>is_viewed</b> True, if at least one of the recipients has viewed
--   the video note
--   
--   <b>is_secret</b> True, if the video note thumbnail must be blurred and
--   the video note must be shown only while tapped
MessageVideoNote :: Maybe Bool -> Maybe Bool -> Maybe VideoNote -> MessageContent
[is_secret] :: MessageContent -> Maybe Bool
[is_viewed] :: MessageContent -> Maybe Bool
[video_note] :: MessageContent -> Maybe VideoNote

-- | A voice note message
--   
--   <b>voice_note</b> The voice note description
--   
--   <b>caption</b> Voice note caption
--   
--   <b>is_listened</b> True, if at least one of the recipients has
--   listened to the voice note
MessageVoiceNote :: Maybe Bool -> Maybe FormattedText -> Maybe VoiceNote -> MessageContent
[is_listened] :: MessageContent -> Maybe Bool
[caption] :: MessageContent -> Maybe FormattedText
[voice_note] :: MessageContent -> Maybe VoiceNote

-- | A message with a location
--   
--   <b>location</b> The location description
--   
--   <b>live_period</b> Time relative to the message send date, for which
--   the location can be updated, in seconds
--   
--   <b>expires_in</b> Left time for which the location can be updated, in
--   seconds. updateMessageContent is not sent when this field changes
--   
--   <b>heading</b> For live locations, a direction in which the location
--   moves, in degrees; 1-360. If 0 the direction is unknown
--   
--   <b>proximity_alert_radius</b> For live locations, a maximum distance
--   to another chat member for proximity alerts, in meters (0-100000). 0
--   if the notification is disabled. Available only for the message sender
MessageLocation :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Location -> MessageContent
[proximity_alert_radius] :: MessageContent -> Maybe Int
[heading] :: MessageContent -> Maybe Int
[expires_in] :: MessageContent -> Maybe Int
[live_period] :: MessageContent -> Maybe Int
[location] :: MessageContent -> Maybe Location

-- | A message with information about a venue
--   
--   <b>venue</b> The venue description
MessageVenue :: Maybe Venue -> MessageContent
[venue] :: MessageContent -> Maybe Venue

-- | A message with a user contact
--   
--   <b>contact</b> The contact description
MessageContact :: Maybe Contact -> MessageContent
[contact] :: MessageContent -> Maybe Contact

-- | A dice message. The dice value is randomly generated by the server
--   
--   <b>initial_state</b> The animated stickers with the initial dice
--   animation; may be null if unknown. updateMessageContent will be sent
--   when the sticker became known
--   
--   <b>final_state</b> The animated stickers with the final dice
--   animation; may be null if unknown. updateMessageContent will be sent
--   when the sticker became known
--   
--   <b>emoji</b> Emoji on which the dice throw animation is based
--   
--   <b>value</b> The dice value. If the value is 0, the dice don't have
--   final state yet
--   
--   <b>success_animation_frame_number</b> Number of frame after which a
--   success animation like a shower of confetti needs to be shown on
--   updateMessageSendSucceeded
MessageDice :: Maybe Int -> Maybe Int -> Maybe String -> Maybe DiceStickers -> Maybe DiceStickers -> MessageContent
[success_animation_frame_number] :: MessageContent -> Maybe Int
[value] :: MessageContent -> Maybe Int
[emoji] :: MessageContent -> Maybe String
[final_state] :: MessageContent -> Maybe DiceStickers
[initial_state] :: MessageContent -> Maybe DiceStickers

-- | A message with a game
--   
--   <b>game</b> The game description
MessageGame :: Maybe Game -> MessageContent
[game] :: MessageContent -> Maybe Game

-- | A message with a poll
--   
--   <b>poll</b> The poll description
MessagePoll :: Maybe Poll -> MessageContent
[poll] :: MessageContent -> Maybe Poll

-- | A message with an invoice from a bot
--   
--   <b>title</b> Product title
--   
--   <b>param_description</b> Product description
--   
--   <b>photo</b> Product photo; may be null
--   
--   <b>currency</b> Currency for the product price
--   
--   <b>total_amount</b> Product total price in the smallest units of the
--   currency
--   
--   <b>start_parameter</b> Unique invoice bot start_parameter. To share an
--   invoice use the URL
--   <a>https://t.me/{bot_username}?start={start_parameter}</a>
--   
--   <b>is_test</b> True, if the invoice is a test invoice
--   
--   <b>need_shipping_address</b> True, if the shipping address must be
--   specified
--   
--   <b>receipt_message_id</b> The identifier of the message with the
--   receipt, after the product has been purchased
MessageInvoice :: Maybe Int -> Maybe Bool -> Maybe Bool -> Maybe String -> Maybe Int -> Maybe String -> Maybe Photo -> Maybe String -> Maybe String -> MessageContent
[receipt_message_id] :: MessageContent -> Maybe Int
[need_shipping_address] :: MessageContent -> Maybe Bool
[is_test] :: MessageContent -> Maybe Bool
[start_parameter] :: MessageContent -> Maybe String
[total_amount] :: MessageContent -> Maybe Int
[currency] :: MessageContent -> Maybe String
[_photo] :: MessageContent -> Maybe Photo
[description] :: MessageContent -> Maybe String
[title] :: MessageContent -> Maybe String

-- | A message with information about an ended call
--   
--   <b>is_video</b> True, if the call was a video call
--   
--   <b>discard_reason</b> Reason why the call was discarded
--   
--   <b>duration</b> Call duration, in seconds
MessageCall :: Maybe Int -> Maybe CallDiscardReason -> Maybe Bool -> MessageContent
[duration] :: MessageContent -> Maybe Int
[discard_reason] :: MessageContent -> Maybe CallDiscardReason
[is_video] :: MessageContent -> Maybe Bool

-- | A new voice chat was scheduled
--   
--   <b>group_call_id</b> Identifier of the voice chat. The voice chat can
--   be received through the method getGroupCall
--   
--   <b>start_date</b> Point in time (Unix timestamp) when the group call
--   is supposed to be started by an administrator
MessageVoiceChatScheduled :: Maybe Int -> Maybe Int -> MessageContent
[start_date] :: MessageContent -> Maybe Int
[group_call_id] :: MessageContent -> Maybe Int

-- | A newly created voice chat
--   
--   <b>group_call_id</b> Identifier of the voice chat. The voice chat can
--   be received through the method getGroupCall
MessageVoiceChatStarted :: Maybe Int -> MessageContent
[group_call_id] :: MessageContent -> Maybe Int

-- | A message with information about an ended voice chat
--   
--   <b>duration</b> Call duration, in seconds
MessageVoiceChatEnded :: Maybe Int -> MessageContent
[duration] :: MessageContent -> Maybe Int

-- | A message with information about an invite to a voice chat
--   
--   <b>group_call_id</b> Identifier of the voice chat. The voice chat can
--   be received through the method getGroupCall
--   
--   <b>user_ids</b> Invited user identifiers
MessageInviteVoiceChatParticipants :: Maybe [Int] -> Maybe Int -> MessageContent
[user_ids] :: MessageContent -> Maybe [Int]
[group_call_id] :: MessageContent -> Maybe Int

-- | A newly created basic group
--   
--   <b>title</b> Title of the basic group
--   
--   <b>member_user_ids</b> User identifiers of members in the basic group
MessageBasicGroupChatCreate :: Maybe [Int] -> Maybe String -> MessageContent
[member_user_ids] :: MessageContent -> Maybe [Int]
[title] :: MessageContent -> Maybe String

-- | A newly created supergroup or channel
--   
--   <b>title</b> Title of the supergroup or channel
MessageSupergroupChatCreate :: Maybe String -> MessageContent
[title] :: MessageContent -> Maybe String

-- | An updated chat title
--   
--   <b>title</b> New chat title
MessageChatChangeTitle :: Maybe String -> MessageContent
[title] :: MessageContent -> Maybe String

-- | An updated chat photo
--   
--   <b>photo</b> New chat photo
MessageChatChangePhoto :: Maybe ChatPhoto -> MessageContent
[photo] :: MessageContent -> Maybe ChatPhoto

-- | A deleted chat photo
MessageChatDeletePhoto :: MessageContent

-- | New chat members were added
--   
--   <b>member_user_ids</b> User identifiers of the new members
MessageChatAddMembers :: Maybe [Int] -> MessageContent
[member_user_ids] :: MessageContent -> Maybe [Int]

-- | A new member joined the chat by invite link
MessageChatJoinByLink :: MessageContent

-- | A chat member was deleted
--   
--   <b>user_id</b> User identifier of the deleted chat member
MessageChatDeleteMember :: Maybe Int -> MessageContent
[user_id] :: MessageContent -> Maybe Int

-- | A basic group was upgraded to a supergroup and was deactivated as the
--   result
--   
--   <b>supergroup_id</b> Identifier of the supergroup to which the basic
--   group was upgraded
MessageChatUpgradeTo :: Maybe Int -> MessageContent
[supergroup_id] :: MessageContent -> Maybe Int

-- | A supergroup has been created from a basic group
--   
--   <b>title</b> Title of the newly created supergroup
--   
--   <b>basic_group_id</b> The identifier of the original basic group
MessageChatUpgradeFrom :: Maybe Int -> Maybe String -> MessageContent
[basic_group_id] :: MessageContent -> Maybe Int
[title] :: MessageContent -> Maybe String

-- | A message has been pinned
--   
--   <b>message_id</b> Identifier of the pinned message, can be an
--   identifier of a deleted message or 0
MessagePinMessage :: Maybe Int -> MessageContent
[message_id] :: MessageContent -> Maybe Int

-- | A screenshot of a message in the chat has been taken
MessageScreenshotTaken :: MessageContent

-- | A theme in the chat has been changed
--   
--   <b>theme_name</b> If non-empty, name of a new theme, set for the chat.
--   Otherwise chat theme was reset to the default one
MessageChatSetTheme :: Maybe String -> MessageContent
[theme_name] :: MessageContent -> Maybe String

-- | The TTL (Time To Live) setting for messages in the chat has been
--   changed
--   
--   <b>ttl</b> New message TTL setting
MessageChatSetTtl :: Maybe Int -> MessageContent
[ttl] :: MessageContent -> Maybe Int

-- | A non-standard action has happened in the chat
--   
--   <b>text</b> Message text to be shown in the chat
MessageCustomServiceAction :: Maybe String -> MessageContent
[text] :: MessageContent -> Maybe String

-- | A new high score was achieved in a game
--   
--   <b>game_message_id</b> Identifier of the message with the game, can be
--   an identifier of a deleted message
--   
--   <b>game_id</b> Identifier of the game; may be different from the games
--   presented in the message with the game
--   
--   <b>score</b> New score
MessageGameScore :: Maybe Int -> Maybe Int -> Maybe Int -> MessageContent
[score] :: MessageContent -> Maybe Int
[game_id] :: MessageContent -> Maybe Int
[game_message_id] :: MessageContent -> Maybe Int

-- | A payment has been completed
--   
--   <b>invoice_chat_id</b> Identifier of the chat, containing the
--   corresponding invoice message; 0 if unknown
--   
--   <b>invoice_message_id</b> Identifier of the message with the
--   corresponding invoice; can be an identifier of a deleted message
--   
--   <b>currency</b> Currency for the price of the product
--   
--   <b>total_amount</b> Total price for the product, in the smallest units
--   of the currency
MessagePaymentSuccessful :: Maybe Int -> Maybe String -> Maybe Int -> Maybe Int -> MessageContent
[total_amount] :: MessageContent -> Maybe Int
[currency] :: MessageContent -> Maybe String
[invoice_message_id] :: MessageContent -> Maybe Int
[invoice_chat_id] :: MessageContent -> Maybe Int

-- | A payment has been completed; for bots only
--   
--   <b>currency</b> Currency for price of the product
--   
--   <b>total_amount</b> Total price for the product, in the smallest units
--   of the currency
--   
--   <b>invoice_payload</b> Invoice payload
--   
--   <b>shipping_option_id</b> Identifier of the shipping option chosen by
--   the user; may be empty if not applicable
--   
--   <b>order_info</b> Information about the order; may be null
--   
--   <b>telegram_payment_charge_id</b> Telegram payment identifier
--   
--   <b>provider_payment_charge_id</b> Provider payment identifier
MessagePaymentSuccessfulBot :: Maybe String -> Maybe String -> Maybe OrderInfo -> Maybe String -> Maybe String -> Maybe Int -> Maybe String -> MessageContent
[provider_payment_charge_id] :: MessageContent -> Maybe String
[telegram_payment_charge_id] :: MessageContent -> Maybe String
[order_info] :: MessageContent -> Maybe OrderInfo
[shipping_option_id] :: MessageContent -> Maybe String
[invoice_payload] :: MessageContent -> Maybe String
[total_amount] :: MessageContent -> Maybe Int
[currency] :: MessageContent -> Maybe String

-- | A contact has registered with Telegram
MessageContactRegistered :: MessageContent

-- | The current user has connected a website by logging in using Telegram
--   Login Widget on it
--   
--   <b>domain_name</b> Domain name of the connected website
MessageWebsiteConnected :: Maybe String -> MessageContent
[domain_name] :: MessageContent -> Maybe String

-- | Telegram Passport data has been sent
--   
--   <b>types</b> List of Telegram Passport element types sent
MessagePassportDataSent :: Maybe [PassportElementType] -> MessageContent
[types] :: MessageContent -> Maybe [PassportElementType]

-- | Telegram Passport data has been received; for bots only
--   
--   <b>elements</b> List of received Telegram Passport elements
--   
--   <b>credentials</b> Encrypted data credentials
MessagePassportDataReceived :: Maybe EncryptedCredentials -> Maybe [EncryptedPassportElement] -> MessageContent
[credentials] :: MessageContent -> Maybe EncryptedCredentials
[elements] :: MessageContent -> Maybe [EncryptedPassportElement]

-- | A user in the chat came within proximity alert range
--   
--   <b>traveler</b> The user or chat, which triggered the proximity alert
--   
--   <b>watcher</b> The user or chat, which subscribed for the proximity
--   alert
--   
--   <b>distance</b> The distance between the users
MessageProximityAlertTriggered :: Maybe Int -> Maybe MessageSender -> Maybe MessageSender -> MessageContent
[distance] :: MessageContent -> Maybe Int
[watcher] :: MessageContent -> Maybe MessageSender
[traveler] :: MessageContent -> Maybe MessageSender

-- | Message content that is not supported in the current TDLib version
MessageUnsupported :: MessageContent
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.MessageContent.MessageContent
instance GHC.Show.Show API.MessageContent.MessageContent
instance Data.Aeson.Types.ToJSON.ToJSON API.MessageContent.MessageContent
instance Data.Aeson.Types.FromJSON.FromJSON API.MessageContent.MessageContent

module API.WebPage

-- | Describes a web page preview
--   
--   <b>url</b> Original URL of the link
--   
--   <b>display_url</b> URL to display
--   
--   <b>type</b> Type of the web page. Can be: article, photo, audio,
--   video, document, profile, app, or something else
--   
--   <b>site_name</b> Short name of the site (e.g., Google Docs, App Store)
--   
--   <b>title</b> Title of the content
--   
--   <b>param_description</b> Description of the content
--   
--   <b>photo</b> Image representing the content; may be null
--   
--   <b>embed_url</b> URL to show in the embedded preview
--   
--   <b>embed_type</b> MIME type of the embedded preview, (e.g.,
--   text<i>html or video</i>mp4)
--   
--   <b>embed_width</b> Width of the embedded preview
--   
--   <b>embed_height</b> Height of the embedded preview
--   
--   <b>duration</b> Duration of the content, in seconds
--   
--   <b>author</b> Author of the content
--   
--   <b>animation</b> Preview of the content as an animation, if available;
--   may be null
--   
--   <b>audio</b> Preview of the content as an audio file, if available;
--   may be null
--   
--   <b>document</b> Preview of the content as a document, if available
--   (currently only available for small PDF files and ZIP archives); may
--   be null
--   
--   <b>sticker</b> Preview of the content as a sticker for small WEBP
--   files, if available; may be null
--   
--   <b>video</b> Preview of the content as a video, if available; may be
--   null
--   
--   <b>video_note</b> Preview of the content as a video note, if
--   available; may be null
--   
--   <b>voice_note</b> Preview of the content as a voice note, if
--   available; may be null
--   
--   <b>instant_view_version</b> Version of instant view, available for the
--   web page (currently can be 1 or 2), 0 if none
data WebPage
WebPage :: Maybe Int -> Maybe VoiceNote -> Maybe VideoNote -> Maybe Video -> Maybe Sticker -> Maybe Document -> Maybe Audio -> Maybe Animation -> Maybe String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe String -> Maybe String -> Maybe Photo -> Maybe FormattedText -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> WebPage
[instant_view_version] :: WebPage -> Maybe Int
[voice_note] :: WebPage -> Maybe VoiceNote
[video_note] :: WebPage -> Maybe VideoNote
[video] :: WebPage -> Maybe Video
[sticker] :: WebPage -> Maybe Sticker
[document] :: WebPage -> Maybe Document
[audio] :: WebPage -> Maybe Audio
[animation] :: WebPage -> Maybe Animation
[author] :: WebPage -> Maybe String
[duration] :: WebPage -> Maybe Int
[embed_height] :: WebPage -> Maybe Int
[embed_width] :: WebPage -> Maybe Int
[embed_type] :: WebPage -> Maybe String
[embed_url] :: WebPage -> Maybe String
[photo] :: WebPage -> Maybe Photo
[description] :: WebPage -> Maybe FormattedText
[title] :: WebPage -> Maybe String
[site_name] :: WebPage -> Maybe String
[_type] :: WebPage -> Maybe String
[display_url] :: WebPage -> Maybe String
[url] :: WebPage -> Maybe String
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.WebPage.WebPage
instance GHC.Show.Show API.WebPage.WebPage
instance Data.Aeson.Types.ToJSON.ToJSON API.WebPage.WebPage
instance Data.Aeson.Types.FromJSON.FromJSON API.WebPage.WebPage

module API.GeneralResult
data GeneralResult
AuthorizationState :: AuthorizationState -> GeneralResult
Session :: Session -> GeneralResult
Updates :: Updates -> GeneralResult
RecoveryEmailAddress :: RecoveryEmailAddress -> GeneralResult
PasswordState :: PasswordState -> GeneralResult
ResetPasswordResult :: ResetPasswordResult -> GeneralResult
TemporaryPasswordState :: TemporaryPasswordState -> GeneralResult
UserFullInfo :: UserFullInfo -> GeneralResult
BasicGroup :: BasicGroup -> GeneralResult
BasicGroupFullInfo :: BasicGroupFullInfo -> GeneralResult
Supergroup :: Supergroup -> GeneralResult
SupergroupFullInfo :: SupergroupFullInfo -> GeneralResult
SecretChat :: SecretChat -> GeneralResult
MessageThreadInfo :: MessageThreadInfo -> GeneralResult
ChatsNearby :: ChatsNearby -> GeneralResult
CheckChatUsernameResult :: CheckChatUsernameResult -> GeneralResult
FoundMessages :: FoundMessages -> GeneralResult
SponsoredMessages :: SponsoredMessages -> GeneralResult
MessageLink :: MessageLink -> GeneralResult
MessageLinkInfo :: MessageLinkInfo -> GeneralResult
Messages :: Messages -> GeneralResult
TextEntities :: TextEntities -> GeneralResult
FormattedText :: FormattedText -> GeneralResult
LanguagePackStringValue :: LanguagePackStringValue -> GeneralResult
InlineQueryResults :: InlineQueryResults -> GeneralResult
CallbackQueryAnswer :: CallbackQueryAnswer -> GeneralResult
Message :: Message -> GeneralResult
GameHighScores :: GameHighScores -> GeneralResult
Sticker :: Sticker -> GeneralResult
InternalLinkType :: InternalLinkType -> GeneralResult
LoginUrlInfo :: LoginUrlInfo -> GeneralResult
ChatLists :: ChatLists -> GeneralResult
ChatFilter :: ChatFilter -> GeneralResult
ChatFilterInfo :: ChatFilterInfo -> GeneralResult
RecommendedChatFilters :: RecommendedChatFilters -> GeneralResult
CanTransferOwnershipResult :: CanTransferOwnershipResult -> GeneralResult
ChatMember :: ChatMember -> GeneralResult
ChatAdministrators :: ChatAdministrators -> GeneralResult
Chats :: Chats -> GeneralResult
ScopeNotificationSettings :: ScopeNotificationSettings -> GeneralResult
MessageFileType :: MessageFileType -> GeneralResult
ChatInviteLink :: ChatInviteLink -> GeneralResult
ChatInviteLinkCounts :: ChatInviteLinkCounts -> GeneralResult
ChatInviteLinkMembers :: ChatInviteLinkMembers -> GeneralResult
ChatInviteLinks :: ChatInviteLinks -> GeneralResult
ChatInviteLinkInfo :: ChatInviteLinkInfo -> GeneralResult
Chat :: Chat -> GeneralResult
CallId :: CallId -> GeneralResult
GroupCallId :: GroupCallId -> GeneralResult
GroupCall :: GroupCall -> GeneralResult
FilePart :: FilePart -> GeneralResult
MessageSenders :: MessageSenders -> GeneralResult
Count :: Count -> GeneralResult
ImportedContacts :: ImportedContacts -> GeneralResult
ChatPhotos :: ChatPhotos -> GeneralResult
StickerSets :: StickerSets -> GeneralResult
Stickers :: Stickers -> GeneralResult
Emojis :: Emojis -> GeneralResult
Animations :: Animations -> GeneralResult
Users :: Users -> GeneralResult
Hashtags :: Hashtags -> GeneralResult
WebPage :: WebPage -> GeneralResult
WebPageInstantView :: WebPageInstantView -> GeneralResult
BotCommands :: BotCommands -> GeneralResult
Sessions :: Sessions -> GeneralResult
ConnectedWebsites :: ConnectedWebsites -> GeneralResult
ChatMembers :: ChatMembers -> GeneralResult
ChatEvents :: ChatEvents -> GeneralResult
PaymentForm :: PaymentForm -> GeneralResult
ValidatedOrderInfo :: ValidatedOrderInfo -> GeneralResult
PaymentResult :: PaymentResult -> GeneralResult
PaymentReceipt :: PaymentReceipt -> GeneralResult
OrderInfo :: OrderInfo -> GeneralResult
User :: User -> GeneralResult
Backgrounds :: Backgrounds -> GeneralResult
Background :: Background -> GeneralResult
LocalizationTargetInfo :: LocalizationTargetInfo -> GeneralResult
LanguagePackInfo :: LanguagePackInfo -> GeneralResult
LanguagePackStrings :: LanguagePackStrings -> GeneralResult
PushReceiverId :: PushReceiverId -> GeneralResult
TMeUrls :: TMeUrls -> GeneralResult
UserPrivacySettingRules :: UserPrivacySettingRules -> GeneralResult
OptionValue :: OptionValue -> GeneralResult
AccountTtl :: AccountTtl -> GeneralResult
ChatStatistics :: ChatStatistics -> GeneralResult
MessageStatistics :: MessageStatistics -> GeneralResult
StatisticalGraph :: StatisticalGraph -> GeneralResult
StorageStatisticsFast :: StorageStatisticsFast -> GeneralResult
DatabaseStatistics :: DatabaseStatistics -> GeneralResult
StorageStatistics :: StorageStatistics -> GeneralResult
NetworkStatistics :: NetworkStatistics -> GeneralResult
AutoDownloadSettingsPresets :: AutoDownloadSettingsPresets -> GeneralResult
BankCardInfo :: BankCardInfo -> GeneralResult
PassportElements :: PassportElements -> GeneralResult
PassportElement :: PassportElement -> GeneralResult
EmailAddressAuthenticationCodeInfo :: EmailAddressAuthenticationCodeInfo -> GeneralResult
PassportAuthorizationForm :: PassportAuthorizationForm -> GeneralResult
PassportElementsWithErrors :: PassportElementsWithErrors -> GeneralResult
AuthenticationCodeInfo :: AuthenticationCodeInfo -> GeneralResult
CheckStickerSetNameResult :: CheckStickerSetNameResult -> GeneralResult
StickerSet :: StickerSet -> GeneralResult
File :: File -> GeneralResult
CustomRequestResult :: CustomRequestResult -> GeneralResult
Countries :: Countries -> GeneralResult
Text :: Text -> GeneralResult
PhoneNumberInfo :: PhoneNumberInfo -> GeneralResult
DeepLinkInfo :: DeepLinkInfo -> GeneralResult
JsonValue :: JsonValue -> GeneralResult
Proxy :: Proxy -> GeneralResult
Proxies :: Proxies -> GeneralResult
HttpUrl :: HttpUrl -> GeneralResult
Seconds :: Seconds -> GeneralResult
LogStream :: LogStream -> GeneralResult
LogTags :: LogTags -> GeneralResult
LogVerbosityLevel :: LogVerbosityLevel -> GeneralResult
TestString :: TestString -> GeneralResult
TestBytes :: TestBytes -> GeneralResult
TestVectorInt :: TestVectorInt -> GeneralResult
TestVectorIntObject :: TestVectorIntObject -> GeneralResult
TestVectorString :: TestVectorString -> GeneralResult
TestVectorStringObject :: TestVectorStringObject -> GeneralResult
TestInt :: TestInt -> GeneralResult
Ok :: Ok -> GeneralResult
Update :: Update -> GeneralResult
Error :: Error -> GeneralResult
data ResultWithExtra
ResultWithExtra :: GeneralResult -> Maybe String -> ResultWithExtra
instance GHC.Classes.Eq API.GeneralResult.GeneralResult
instance GHC.Show.Show API.GeneralResult.GeneralResult
instance GHC.Classes.Eq API.GeneralResult.ResultWithExtra
instance GHC.Show.Show API.GeneralResult.ResultWithExtra
instance Data.Aeson.Types.FromJSON.FromJSON API.GeneralResult.ResultWithExtra
instance Data.Aeson.Types.FromJSON.FromJSON API.GeneralResult.GeneralResult

module API.WebPageInstantView

-- | Describes an instant view page for a web page
--   
--   <b>page_blocks</b> Content of the web page
--   
--   <b>view_count</b> Number of the instant view views; 0 if unknown
--   
--   <b>version</b> Version of the instant view, currently can be 1 or 2
--   
--   <b>is_rtl</b> True, if the instant view must be shown from right to
--   left
--   
--   <b>is_full</b> True, if the instant view contains the full page. A
--   network request might be needed to get the full web page instant view
--   
--   <b>feedback_link</b> An internal link to be opened to leave feedback
--   about the instant view
data WebPageInstantView
WebPageInstantView :: Maybe InternalLinkType -> Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe Int -> Maybe [PageBlock] -> WebPageInstantView
[feedback_link] :: WebPageInstantView -> Maybe InternalLinkType
[is_full] :: WebPageInstantView -> Maybe Bool
[is_rtl] :: WebPageInstantView -> Maybe Bool
[version] :: WebPageInstantView -> Maybe Int
[view_count] :: WebPageInstantView -> Maybe Int
[page_blocks] :: WebPageInstantView -> Maybe [PageBlock]
p :: Show a => String -> Maybe a -> String
cc :: [String] -> String
instance GHC.Classes.Eq API.WebPageInstantView.WebPageInstantView
instance GHC.Show.Show API.WebPageInstantView.WebPageInstantView
instance Data.Aeson.Types.ToJSON.ToJSON API.WebPageInstantView.WebPageInstantView
instance Data.Aeson.Types.FromJSON.FromJSON API.WebPageInstantView.WebPageInstantView

module Defaults
defaultTdlibParameters :: TdlibParameters

module TDLib
create :: IO Client
send :: ToJSON a => Client -> a -> IO ()
sendWExtra :: ToJSON a => Client -> a -> IO String
receive :: Client -> IO (Maybe ResultWithExtra)
destroy :: Client -> IO ()
type Client = Ptr ()
